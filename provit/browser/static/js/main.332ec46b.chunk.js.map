{"version":3,"sources":["config/reducers/index.js","home/reducers/index.js","directory/reducers/index.js","agents/reducers/index.js","file/reducers/index.js","forms/reducers/AddProvFormReducer.js","forms/reducers/AddProjectDirectoryFormReducer.js","store.js","config/actions/index.js","config/components/ConfigForm.js","config/container/ConfigView.js","config/api/index.js","home/actions/index.js","common/components/TransparentChip.js","home/components/DirectoryList.js","forms/components/DirectoryRow.js","forms/components/FileRow.js","forms/components/FilePicker.js","forms/container/AddProjectDirectoryForm.js","home/container/HomeView.js","home/api/index.js","directory/actions/index.js","directory/components/FileTable.js","directory/container/DirectoryView.js","directory/api/index.js","agents/actions/index.js","agents/api/index.js","agents/components/PersonAgentList.js","agents/components/SoftwareAgentList.js","agents/components/OrganizationAgentList.js","agents/container/AgentListView.js","file/actions/index.js","file/components/EventNetwork.js","file/components/EventTimeline.js","common/components/AgentIcon.js","common/components/PersonAgentProfile.js","common/components/OrgAgentProfile.js","common/components/SoftwareAgentProfile.js","file/components/AgentDialog.js","file/components/EventDetails.js","forms/components/AgentDropdown.js","forms/container/AddProvForm.js","file/components/DeleteEventChip.js","file/container/FileView.js","file/api/index.js","Menu.js","App.js","serviceWorker.js","index.js"],"names":["initialState","provitDir","loading","error","changed","ConfigReducer","state","arguments","length","undefined","action","type","Object","objectSpread","payload","config","provit_dir","directories","HomeReducer","currentDirectory","fileList","DirectoryReducer","directory","persons","software","organizations","AgentsReducer","agents","Person","Software","Organization","initalState","prov","hasProv","currentFile","currentProvEvent","updateNetwork","rebuildNetwork","rebuildTimeline","currentAgent","showAgentDialog","showAddProvForm","FileReducer","agent","data","uri","location","console","log","AddProvFormReducer","activitySlug","comment","timestamp","sources","primarySources","AddDirectoryFormReducer","reducers","combineReducers","home","file","createForms","addProjectDirectory","AddProjectDirectoryFormReducer","addProvEvent","store","createStore","applyMiddleware","thunk","fetchConfigBegin","fetchConfigSuccess","fetchConfigError","ConfigForm","handleChange","event","_this","props","updateProvitDir","target","value","renderSaveButton","enabled","react_default","a","createElement","Button_default","variant","disabled","this","fetchConfig","classes","Grid_default","container","spacing","item","xs","Paper_default","className","control","TextField_default","id","label","style","margin","placeholder","fullWidth","InputLabelProps","shrink","onChange","Component","withStyles","theme","padding","unit","marginTop","mapDispatchToProps","dispatch","fetch","then","res","json","catch","ConfigView","connect","fetchDirectoriesBegin","fetchDirectoriesSuccess","fetchDirectoriesError","removeDirectoryBegin","removeDirectorySuccess","removeDirectoryError","addDirectoryBegin","addDirectorySuccess","addDirectoryError","transparentChip","backgroundColor","cursor","Chip_default","avatar","DirectoryList","removeDirectory","_this$props","directoryList","map","i","key","listItem","directoryTitle","textAlign","tp","onClick","history","push","pathname","search","components_TransparentChip","Avatar_default","Folder_default","button","Typography_default","projectComment","alignRight","IconButton_default","aria-label","removeClick","Delete_default","size","verticalAlign","marginLeft","DirectoryRow","path","changeValue","name","selectable","color","icon","_this$props2","fetchDir","leftAlign","renderButton","MoreHoriz_default","width","marginRight","FileRow","Description_default","FilePicker","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","withFiles","showDialog","currentDir","files","dirs","bind","assertThisInitialized","setState","dir","_this2","method","headers","Accept","Content-Type","mode","body","JSON","stringify","withHidden","close","model","actions","change","_this3","helptext","_this$state","pathSplit","split","sep","splice","parentDir","resolve","apply","toConsumableArray","currentValue","pop","selectableDirectories","Dialog_default","maxWidth","open","scroll","filebrowserDialog","paper","dialogPaper","onClose","DialogTitle_default","DialogContent_default","ArrowUpward_default","components_DirectoryRow","dirname","dirpath","components_FileRow","filename","filepath","DialogActions_default","closeDialog","openDialog","minHeight","maxHeight","text","AddProjectDirectoryForm","handleSubmit","reset","toggleDialog","lib","onSubmit","formContainer","formItem","components_FilePicker","inputField","component","TextField","multiline","rowsMax","Fab_default","fab","Add_default","projectForm","_ref","fetchDirectories","addDirectory","HomeView","components_DirectoryList","container_AddProjectDirectoryForm","fetchFileListBegin","fetchFileListSuccess","fetchFileListError","FileTable","cl","rowBackgroundProv","rowBackgroundNoProv","TableRow_default","hover","linkToFile","TableCell_default","last_activity","fileTable","heading","fileTablePaper","Table_default","TableHead_default","TableBody_default","renderTableRow","deepOrange","fetchFileList","changeCurrentDirectory","DirectoryView","substr","components_FileTable","fetchAgentsBegin","fetchAgentsSuccess","fetchAgentsError","fetchAgents","PersonAgentList","person","ExpansionPanel_default","agentHeader","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","detailsBoxHeader","Face_default","slug","nameHeader","ExpansionPanelDetails_default","detailsBox","gutterBottom","institution","email","homepage","href","rel","content","paperLayout","renderPerson","lineHeight","SoftwareAgentList","sw","Laptop_default","version","root","renderSoftware","flexGrow","org","Business_default","api","AgentListView","components_PersonAgentList","components_SoftwareAgentList","OrganizationAgentList","fetchProvBegin","fetchProvSuccess","fetchProvError","addProvBegin","addProvSuccess","addProvError","removeProvBegin","removeProvSuccess","removeProvError","lightCyan","cyan","darkCyan","highlight","red","sourceBlueGrey","blueGrey","generateLabel","activity","fileName","getFilename","activitySplit","options","layout","improvedLayout","hierarchical","sortMethod","levelSeparation","edges","smooth","arrows","to","nodes","shape","shadow","font","multi","groups","source","background","border","primarySource","EventNetwork","DataSet","provDict","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","flatProvData","err","return","currentNodes","getIds","group","status","update","start","ended_at","primary_sources","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","ps","from","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","source_data","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","iterProvData","add","forEach","node","network","Network","refs","eventNetwork","on","getNodeAt","pointer","DOM","isProvEvent","changeProvEvent","networkUpdated","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","nodeId","remove","currentEdges","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","edgeId","buildEdgeList","keys","constructor","selectNodes","networkPaper","networkContainer","ref","height","eventNetworkContainer","eventTimelineContainer","EventTimeline","timeline","Timeline","eventTimeline","verticalScroll","currentIds","allGroups","indexOf","setGroups","fit","setSelection","AgentIcon","PersonAgentProfile","AgentDialog","hideAgentDialog","components_PersonAgentProfile","SoftwareAgentProfile","components_OrgAgentProfile","renderPersonAgentDialog","renderOrgAgentDialog","renderSoftwareAgentDialog","handleClose","components_AgentIcon","DialogContentText_default","renderAgentDialog","autoFocus","EventDetails","handleAgentIconClick","agentSlug","setCurrentAgent","eventData","getEventData","agentIcon","agentData","agentSlugs","alignLeft","activity_desc","renderAgent","components_AgentDialog","paddingRight","AgentDropdown","modelValue","agentType","slugs","_arr","_i","select","textField","SelectProps","MenuProps","menuItem","e","MenuItem_default","AddProvForm","toggle","_this$props3","Date","toISOString","formGrid","defaultValue","substring","components_AgentDropdown","concat","agentColumn","formDialog","ProvForm","buttonColumn","DeleteEventChip","removeProv","handleClickOpen","Remove_default","handleDelete","changeCurrentFile","fetchProv","addProv","agentDialog","toggleAddProvForm","agentApi","resetFileState","FileView","allAgents","replace","splitFilepath","fileViewContainer","container_AddProvForm","breadcrumbs","provButtons","components_DeleteEventChip","file_components_EventTimeline","components_EventNetwork","components_EventDetails","fileView","marginBottom","vertialAlign","Menu","AppBar_default","Toolbar_default","title","menu","withRouter","createMuiTheme","palette","primary","secondary","grey","App","es","CssBaseline_default","core_styles","BrowserRouter","src_Menu","Switch","Route","exact","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6TAAMA,EAAe,CACjBC,UAAW,GACXC,SAAS,EACTC,MAAO,KACPC,SAAS,GAmCEC,EAhCO,WAAmC,IAAjCC,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBP,EAAcU,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrD,OAAQC,EAAOC,MACX,IAAK,qBACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIJ,SAAS,EACTC,MAAO,OAEf,IAAK,uBACD,OAAOS,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIJ,SAAS,EACTD,UAAWS,EAAOI,QAAQC,OAAOC,aAEzC,IAAK,qBACD,OAAOJ,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIJ,SAAS,EACTD,UAAW,GACXE,MAAOO,EAAOI,QAAQX,QAE9B,IAAK,oBACD,OAAOS,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIF,SAAS,EACTH,UAAWS,EAAOI,QAAQb,YAElC,QACI,OAAOK,ICnCbN,EAAe,CACjBE,SAAS,EACTC,MAAO,KACPc,YAAa,IAmEFC,EAhEK,WAAgC,IAA/BZ,EAA+BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBP,EAAcU,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChD,OAAQC,EAAOC,MACX,IAAK,0BACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIJ,SAAS,EACTC,MAAO,KACPc,YAAa,KAErB,IAAK,4BACD,OAAOL,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIJ,SAAS,EACTC,MAAO,KACPc,YAAaP,EAAOI,QAAQG,cAEpC,IAAK,0BACD,OAAOL,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIJ,SAAS,EACTC,MAAOO,EAAOI,QAAQX,MACtBc,YAAa,KAErB,IAAK,2BACD,OAAOL,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIJ,SAAS,IAEjB,IAAK,6BACD,OAAOU,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIJ,SAAS,EACTe,YAAaP,EAAOI,QAAQG,cAEpC,IAAK,2BACD,OAAOL,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIJ,SAAS,EACTC,MAAOO,EAAOI,QAAQX,MACtBc,YAAa,KAErB,IAAK,sBACD,OAAOL,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIJ,SAAS,IAEjB,IAAK,wBACD,OAAOU,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIJ,SAAS,EACTe,YAAaP,EAAOI,QAAQG,cAEpC,IAAK,sBACD,OAAOL,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIJ,SAAS,EACTC,MAAOO,EAAOI,QAAQX,MACtBc,YAAa,KAErB,QACI,OAAOX,IClEbN,EAAe,CACjBmB,iBAAkB,KAClBC,SAAU,GACVlB,SAAS,EACTC,MAAO,MAkCIkB,EA/BU,WAAgC,IAA/Bf,EAA+BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBP,EAAcU,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrD,OAAQC,EAAOC,MACX,IAAK,wBACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIJ,SAAS,EACTC,MAAO,OAEf,IAAK,0BACD,OAAOS,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIJ,SAAS,EACTkB,SAAUV,EAAOI,QAAQM,WAEjC,IAAK,wBACD,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIJ,SAAS,EACTC,MAAOO,EAAOI,QAAQX,MACtBiB,SAAU,KAElB,IAAK,2BACD,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIa,iBAAkBT,EAAOI,QAAQQ,YAEzC,QACI,OAAOhB,IClCbN,EAAe,CACjBuB,QAAS,GACTC,SAAU,GACVC,cAAe,GACfvB,SAAS,EACTC,MAAO,MA+BIuB,EA5BO,WAAgC,IAA/BpB,EAA+BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBP,EAAcU,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAClD,OAAQC,EAAOC,MACX,IAAK,qBACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIJ,SAAS,EACTC,MAAO,OAEf,IAAK,uBACD,OAAOS,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIJ,SAAS,EACTC,MAAO,KACPoB,QAASb,EAAOI,QAAQa,OAAOC,OAC/BJ,SAAUd,EAAOI,QAAQa,OAAOE,SAChCJ,cAAef,EAAOI,QAAQa,OAAOG,eAE7C,IAAK,qBACD,OAAOlB,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIJ,SAAS,EACTC,MAAOO,EAAOI,QAAQX,QAE9B,QACI,OAAOG,IChCbyB,EAAc,CAChBC,KAAM,GACNL,OAAQ,GACRM,SAAS,EACTC,YAAa,GACbC,iBAAkB,GAClBjC,SAAS,EACTC,MAAO,KACPiC,eAAe,EACfC,gBAAgB,EAChBC,iBAAiB,EACjBC,aAAc,GACdC,iBAAiB,EACjBC,iBAAiB,GAyHNC,EAtHK,WAA+B,IAA9BpC,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAxBwB,EAAarB,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQC,EAAOC,MACX,IAAK,mBACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEI0B,KAAM,GACNW,MAAO,GACPT,YAAa,GACbC,iBAAkB,GAClBI,aAAc,GACdC,iBAAiB,EACjBtC,SAAS,EACTC,MAAO,OAEf,IAAK,qBACD,OAAOS,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEI2B,QAASvB,EAAOI,QAAQ8B,KAAKX,QAC7BD,KAAMtB,EAAOI,QAAQ8B,KAAKZ,KAC1BL,OAAQjB,EAAOI,QAAQ8B,KAAKjB,OAC5BQ,iBAAkBzB,EAAOI,QAAQ8B,KAAKZ,KAAKa,IAC3C3C,SAAS,EACTkC,eAAe,IAEvB,IAAK,mBACD,OAAOxB,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIJ,SAAS,EACTC,MAAOO,EAAOI,QAAQX,QAE9B,IAAK,iBACD,MAAO,CACHsC,iBAAiB,EACjBT,KAAM,GACNW,MAAO,GACPT,YAAa,GACbC,iBAAkB,GAClBI,aAAc,GACdC,iBAAiB,EACjBtC,SAAS,EACTC,MAAO,MAEf,IAAK,mBACD,OAAOS,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIJ,SAAS,EACT+B,QAASvB,EAAOI,QAAQ8B,KAAKX,QAC7BD,KAAMtB,EAAOI,QAAQ8B,KAAKZ,KAC1BE,YAAaxB,EAAOI,QAAQ8B,KAAKZ,KAAKc,SACtCnB,OAAQjB,EAAOI,QAAQ8B,KAAKjB,OAC5BQ,iBAAkBzB,EAAOI,QAAQ8B,KAAKZ,KAAKa,IAC3CT,eAAe,EACfC,gBAAgB,IAExB,IAAK,oBACD,MAAO,CACHI,iBAAiB,EACjBT,KAAM,GACNW,MAAO,GAEPR,iBAAkB,GAClBI,aAAc,GACdC,iBAAiB,EACjBtC,SAAS,EACTC,MAAO,MAEf,IAAK,sBAED,OADA4C,QAAQC,IAAItC,EAAOI,SACZF,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIJ,SAAS,EACT+B,QAASvB,EAAOI,QAAQ8B,KAAKX,QAC7BD,KAAMtB,EAAOI,QAAQ8B,KAAKZ,KAE1BL,OAAQjB,EAAOI,QAAQ8B,KAAKjB,OAC5BQ,iBAAkB,GAClBC,eAAe,EACfC,gBAAgB,IAExB,IAAK,sBACD,OAAOzB,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEI4B,YAAaxB,EAAOI,QAAQoB,cAEpC,IAAK,oBACD,OAAOtB,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEI6B,iBAAkBzB,EAAOI,QAAQqB,mBAEzC,IAAK,kBACD,OAAOvB,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEI8B,eAAe,EACfC,gBAAgB,IAExB,IAAK,oBACD,OAAOzB,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIiC,aAAc7B,EAAOI,QAAQyB,aAC7BC,iBAAiB,IAEzB,IAAK,oBACD,OAAO5B,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIkC,iBAAiB,IAEzB,IAAK,uBACD,OAAO5B,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEImC,iBAAkBnC,EAAMmC,kBAEhC,IAAK,mBACD,OAAOV,EACX,QACI,OAAOzB,YCzHJ2C,EATY,CACvBC,aAAc,GACdC,QAAS,GACTxB,OAAQ,CAAC,IACTyB,UAAW,GACXC,QAAS,GACTC,eAAgB,ICDLC,EALiB,CAC5BjC,UAAW,GACX6B,QAAS,ICWPK,EAAWC,0BAAgB7C,OAAAC,EAAA,EAAAD,CAAA,CAC7B8C,KAAMxC,EACNH,OAAQV,EACRiB,UAAWD,EACXM,OAAQD,EACRiC,KAAMjB,GACHkB,sBAAY,CACXC,oBAAqBC,EACrBC,aAAcd,MASPe,EALDC,sBACVT,EACAU,0BAAgBC,0DC3BPC,EAAmB,iBAAO,CACnCzD,KAAM,uBAGG0D,EAAqB,SAACtD,GAAD,MAAa,CAC3CJ,KAAM,uBACNG,QAAS,CAAEC,YAGFuD,EAAmB,SAACnE,GAAD,MAAY,CACxCQ,KAAM,qBACNG,QAAS,CAAEX,0FCIToE,6MAMFC,aAAe,kBAAM,SAAAC,GACjBC,EAAKC,MAAMC,gBAAgBH,EAAMI,OAAOC,WAG5CC,iBAAmB,SAACC,GAChB,OAAIN,EAAKC,MAAMvE,QAEP6E,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAQG,QAAQ,aAAhB,gBAOAJ,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAQI,UAAQ,EAACD,QAAQ,aAAzB,oGAjBRE,KAAKZ,MAAMa,+CAyBL,IACEC,EAAYF,KAAKZ,MAAjBc,QACR,OACIR,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMS,WAAS,EAACC,QAAS,IACrBX,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,IACXb,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CAAOc,UAAWP,EAAQQ,SAC1BhB,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,CACIiB,GAAG,wBACHC,MAAM,wBACNC,MAAO,CAAEC,OAAQ,GACjBC,YAAY,cACZC,WAAS,EACT1B,MAAOS,KAAKZ,MAAM1E,UAClBqG,OAAO,SACPG,gBAAiB,CACbC,QAAQ,GAGZC,SAAUpB,KAAKf,iBAEjBe,KAAKR,iBAAiBQ,KAAKZ,MAAMvE,oBAjDlCwG,aA4DVC,uBAnEA,SAAAC,GAAK,MAAK,CACrBb,QAAS,CACPc,QAA8B,EAArBD,EAAMlB,QAAQoB,KACvBC,UAAgC,EAArBH,EAAMlB,QAAQoB,QAgEhBH,CAAoBtC,GCjE7B2C,EAAqB,CACvB1B,YCTG,WACH,OAAO,SAAU2B,GAGb,OAFApE,QAAQC,IAAI,gBACZmE,EAAS/C,KACFgD,MAAM,gCACRC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAE,GAGF,OAFAxE,QAAQC,IAAIuE,GACZJ,EAAS9C,EAAmBkD,EAAKxG,SAC1BwG,EAAKxG,SAEnByG,MAAO,SAAArH,GAAK,OAAIgH,EAAS7C,EAAiBnE,QDD/CyE,gBFE2B,SAAC3E,GAAD,MAAgB,CAC3CU,KAAM,oBACNG,QAAS,CAAEb,gBECAwH,EAFIC,kBAVK,SAACpH,GAAD,MAAY,CAChCL,UAAWK,EAAMS,OAAOd,UACxBG,QAASE,EAAMS,OAAOX,UAQkB8G,EAAzBQ,CAA8CnD,GEfpDoD,EAAwB,iBAAO,CACxChH,KAAM,4BAGGiH,EAA0B,SAAC3G,GAAD,MAAmB,CACtDN,KAAM,4BACNG,QAAS,CAAEG,iBAGF4G,GAAwB,SAAC1H,GAAD,MAAY,CAC7CQ,KAAM,0BACNG,QAAS,CAAEX,WAGF2H,GAAuB,iBAAO,CACvCnH,KAAM,2BAGGoH,GAAyB,SAAC9G,GAAD,MAAkB,CACpDN,KAAM,6BACNG,QAAS,CAAEG,iBAGF+G,GAAuB,SAAC7H,GAAD,MAAY,CAC5CQ,KAAM,yBACNG,QAAS,CAAEX,WAGF8H,GAAoB,iBAAO,CACpCtH,KAAM,wBAGGuH,GAAsB,SAACjH,GAAD,MAAkB,CACjDN,KAAM,wBACNG,QAAS,CAAEG,iBAGFkH,GAAoB,SAAChI,GAAD,MAAY,CACzCQ,KAAM,sBACNG,QAAS,CAAEX,oHCdA0G,wBAnBA,SAAAC,GAAK,MAAK,CACrBsB,gBAAiB,CACbC,gBAAiB,mBACjBC,OAAQ,aAgBDzB,CAZS,SAAClC,GAAD,OACpBM,EAAAC,EAAAC,cAACoD,GAAArD,EAAD,CACIkB,MAAQzB,EAAMyB,MACdoC,OAAS7D,EAAM6D,OACfxC,UAAYrB,EAAMc,QAAQ2C,oBCwB5BK,uLAEWnH,GACTiE,KAAKZ,MAAM+D,gBAAgBpH,oCAGrB,IAAAoD,EAAAa,KAAAoD,EAC2BpD,KAAKZ,MAA9B1D,EADF0H,EACE1H,YAAawE,EADfkD,EACelD,QAErB,OADA1C,QAAQC,IAAI/B,GAERgE,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMS,WAAS,EAACK,UAAYP,EAAQmD,eAC9B3H,EAAY4H,IAAK,SAAChD,EAAMiD,GAAP,OACf7D,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,GAAIiD,IAAKD,GACpB7D,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CAAOc,UAAYP,EAAQuD,UACvB/D,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMS,WAAS,EACPK,UAAYP,EAAQwD,gBAExBhE,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,GAAIE,UAAYP,EAAQyD,WACnCjE,EAAAC,EAAAC,cAAA,OACIa,UAAYP,EAAQ0D,GACpBC,QAAU,WAAQ1E,EAAKC,MAAM0E,QAAQC,KAAK,CAAEC,SAAU,cAAeC,OAAQ3D,EAAKvE,cAElF2D,EAAAC,EAAAC,cAACsE,GAAD,CAEIjB,OACIvD,EAAAC,EAAAC,cAACuE,GAAAxE,EAAD,KACID,EAAAC,EAAAC,cAACwE,GAAAzE,EAAD,OAIRc,UAAYP,EAAQmE,OAEpBxD,MAAQP,EAAKvE,aAGrB2D,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYG,QAAQ,UAAUW,UAAYP,EAAQqE,gBAC5CjE,EAAK1C,WAInB8B,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,EAAGE,UAAYP,EAAQsE,YAClC9E,EAAAC,EAAAC,cAAC6E,GAAA9E,EAAD,CAAY+E,aAAW,SAAUb,QAAU,kBAAM1E,EAAKwF,YAAYrE,KAC7DZ,EAAAC,EAAAC,cAACgF,GAAAjF,EAAD,CAAYkF,KAAK,yBA3C9BxD,aAwDbC,wBApFA,SAACC,GAAD,MAAY,CACvB8B,cAAe,CACb7B,QAA8B,EAArBD,EAAMlB,QAAQoB,KACvBC,UAAgC,EAArBH,EAAMlB,QAAQoB,MAE3BgC,SAAU,CACNjC,QAA6B,EAApBD,EAAMlB,QAAQoB,KACvBC,UAAWH,EAAMlB,QAAQoB,MAE7BiC,eAAgB,CACZC,UAAW,OACXmB,cAAe,UAEnBN,WAAY,CACRb,UAAW,SAEfU,OAAQ,CACJtD,OAAQQ,EAAMlB,QAAQoB,MAE1BmC,GAAI,GAGJW,eAAgB,CACZQ,WAAiC,EAArBxD,EAAMlB,QAAQoB,KAC1BC,UAAgC,GAArBH,EAAMlB,QAAQoB,QA4DlBH,CAAoB4B,+MCrE7B8B,0LAEc,IAAA5B,EAC0DpD,KAAKZ,MAAnEzC,EADIyG,EACJzG,YAAasI,EADT7B,EACS6B,KAAMC,EADf9B,EACe8B,YAAaC,EAD5B/B,EAC4B+B,KAAMjF,EADlCkD,EACkClD,QAASkF,EAD3ChC,EAC2CgC,WACvD,OAAIzI,IAAgBsI,EAEZvF,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACI0F,MAAM,UACNR,KAAK,QACLhB,QAAU,WAAYuB,GAAYF,EAAYD,GAAM,KAEpDvF,EAAAC,EAAAC,cAACwE,GAAAzE,EAAD,CAAYkF,KAAK,QAAQpE,UAAYP,EAAQoF,OAC3CH,GAKNzF,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACIkF,KAAK,QACLhB,QAAU,WAAauB,GAAYF,EAAYD,GAAM,KAErDvF,EAAAC,EAAAC,cAACwE,GAAAzE,EAAD,CAAYkF,KAAK,QAAQpE,UAAYP,EAAQoF,OAC3CH,oCAKP,IAAAI,EAC6BvF,KAAKZ,MAAjCc,EADDqF,EACCrF,QAAS+E,EADVM,EACUN,KAAMO,EADhBD,EACgBC,SAEvB,OACI9F,EAAAC,EAAAC,cAAA,OAAKa,UAAYP,EAAQuF,WAEnBzF,KAAK0F,eAEPhG,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACIkF,KAAK,QACLhB,QAAW,WAAQ2B,EAASP,KAE5BvF,EAAAC,EAAAC,cAAC+F,GAAAhG,EAAD,CAAekF,KAAK,mBAvCbxD,aAqDZC,wBAnEA,SAAAC,GAAK,MAAK,CACrBkE,UAAW,CACP9B,UAAW,OACXiC,MAAO,QAEX3E,UAAW,CACP2E,MAAO,QAEXN,KAAM,CACFO,YAAatE,EAAMlB,QAAQoB,QA0DpBH,CAAoB0D,yBCrD7Bc,0LAEc,IAAA1C,EAC8CpD,KAAKZ,MAAvDzC,EADIyG,EACJzG,YAAasI,EADT7B,EACS6B,KAAMC,EADf9B,EACe8B,YAAaC,EAD5B/B,EAC4B+B,KAAMjF,EADlCkD,EACkClD,QAC9C,OAAIvD,IAAgBsI,EAEZvF,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACI0F,MAAM,UACNR,KAAK,QACLhB,QAAU,WAAQqB,EAAYD,GAAM,KAEpCvF,EAAAC,EAAAC,cAACmG,GAAApG,EAAD,CAAiBkF,KAAK,QAAQpE,UAAYP,EAAQoF,OAChDH,GAKNzF,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACIkF,KAAK,QACLhB,QAAU,WAAQqB,EAAYD,GAAM,KAEpCvF,EAAAC,EAAAC,cAACmG,GAAApG,EAAD,CAAiBkF,KAAK,QAAQpE,UAAYP,EAAQoF,OAChDH,oCAKP,IACCjF,EAAYF,KAAKZ,MAAjBc,QAER,OACIR,EAAAC,EAAAC,cAAA,OAAKa,UAAYP,EAAQuF,WACnBzF,KAAK0F,uBAhCDrE,aA6CPC,wBA3DA,SAAAC,GAAK,MAAK,CACrBkE,UAAW,CACP9B,UAAW,OACXiC,MAAO,QAEX3E,UAAW,CACP2E,MAAO,QAEXN,KAAM,CACFO,YAAatE,EAAMlB,QAAQoB,QAkDpBH,CAAoBwE,ICrB7BE,eAEF,SAAAA,EAAa5G,GAAO,IAAAD,EAAA9D,OAAA4K,EAAA,EAAA5K,CAAA2E,KAAAgG,GAChB7G,EAAA9D,OAAA6K,EAAA,EAAA7K,CAAA2E,KAAA3E,OAAA8K,EAAA,EAAA9K,CAAA2K,GAAAI,KAAApG,KAAMZ,IADU,IAGViH,EAAcjH,EAAdiH,UAHU,OAKZA,IADAA,EAKJlH,EAAKpE,MAAQ,CACTuL,YAAY,EACZC,WAAY,GACZF,UAAWA,EACXG,MAAO,GACPC,KAAM,GACNlH,MAAO,IAKXJ,EAAK+F,YAAc/F,EAAK+F,YAAYwB,KAAjBrL,OAAAsL,GAAA,EAAAtL,QAAAsL,GAAA,EAAAtL,CAAA8D,KACnBA,EAAKqG,SAAWrG,EAAKqG,SAASkB,KAAdrL,OAAAsL,GAAA,EAAAtL,QAAAsL,GAAA,EAAAtL,CAAA8D,KArBAA,mFAwBC,IACTpD,EAAciE,KAAKZ,MAAnBrD,UACRiE,KAAK4G,SAAS,CACVL,WAAYxK,IAEhBiE,KAAKwF,SAASzJ,oCAGR8K,GAAK,IAAAC,EAAA9G,KAEX6B,MAAM,oCAAoC,CACtCkF,OAAQ,OACRC,QAAS,CACLC,OAAU,mBACVC,eAAgB,oBAEpBC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CAAEvL,UAAW8K,EAAKR,UAAWrG,KAAKjF,MAAMsL,UAAWkB,YAAY,MAEnFzF,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAE,GAQF,OAPAxE,QAAQC,IAAIuE,GACZ8E,EAAKF,SAALvL,OAAAC,EAAA,EAAAD,CAAA,GACOyL,EAAK/L,MADZ,CAEI0L,KAAMzE,EAAKyE,KACXD,MAAOxE,EAAKwE,MACZD,WAAYM,KAET7E,EAAKvF,OAEfwF,MAAM,SAAArH,GAAK,OAAI4C,QAAQC,IAAI7C,0CAI5BoF,KAAK4G,SAAS,CACVN,YAAY,0CAKpBtG,KAAK4G,SAAS,CACVN,YAAY,wCAIP/G,EAAOiI,GAAO,IAAApE,EACKpD,KAAKZ,MAAzBqI,EADerE,EACfqE,MAAO7F,EADQwB,EACRxB,SACT0E,GAAckB,EAEpBxH,KAAK4G,SAAS,CACVrH,QACA+G,eAEJ1E,EAAS8F,UAAQC,OAAOF,EAAOlI,qCAGzB,IAAAqI,EAAA5H,KAAAuF,EAEmCvF,KAAKZ,MAAtCrD,EAFFwJ,EAEExJ,UAAWmE,EAFbqF,EAEarF,QAAS2H,EAFtBtC,EAEsBsC,SAFtBC,EAGiD9H,KAAKjF,MAApDuL,EAHFwB,EAGExB,WAAYG,EAHdqB,EAGcrB,KAAMD,EAHpBsB,EAGoBtB,MAAOD,EAH3BuB,EAG2BvB,WAAYhH,EAHvCuI,EAGuCvI,MACvCwI,EAAYxB,EAAWyB,MAAM/C,KAAKgD,KACxCF,EAAUG,QAAQ,EAAG,GACrB,IAAMC,EAAYlD,KAAKmD,QAALC,MAAApD,KAAI5J,OAAAiN,GAAA,EAAAjN,CAAa0M,IAE7BQ,EADoBvI,KAAKjF,MAAMwE,MAAMyI,MAAM/C,KAAKgD,KACfO,MAEjCC,GAAyBzI,KAAKjF,MAAMsL,UAE1C,OACI3G,EAAAC,EAAAC,cAAA,WAEIF,EAAAC,EAAAC,cAAC8I,GAAA/I,EAAD,CACIsB,WAAY,EACZ0H,SAAS,KACTC,KAAOtC,EACPuC,OAAO,QACPpI,UAAYP,EAAQ4I,kBACpB5I,QAAU,CAAE6I,MAAO7I,EAAQ8I,aAC3BC,QAAU,kBAAMrB,EAAK1C,YAAY,IAAI,KAErCxF,EAAAC,EAAAC,cAACsJ,GAAAvJ,EAAD,KACID,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYG,QAAQ,cAApB,IAAoCyG,KAGxC7G,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,KACID,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACIkF,KAAK,QACLhB,QAAU,kBAAM+D,EAAKpC,SAAS2C,KAE9BzI,EAAAC,EAAAC,cAACwJ,GAAAzJ,EAAD,CAAiBkF,KAAK,WAGxB4B,EAAKnD,IAAK,SAACuD,EAAKtD,GAAN,OACR7D,EAAAC,EAAAC,cAACyJ,GAAD,CACI7F,IAAK,YAAYD,EACjB4B,KAAM0B,EAAIyC,QACVrE,KAAM4B,EAAI0C,QACVnE,WAAaqD,EACbvD,YAAc0C,EAAK1C,YACnBM,SAAWoC,EAAKpC,SAChB7I,YAAc4C,MAGpBiH,EAAMlD,IAAK,SAAClF,EAAMmF,GAAP,OACT7D,EAAAC,EAAAC,cAAC4J,GAAD,CACIhG,IAAK,OAAOD,EACZ4B,KAAM/G,EAAKqL,SACXxE,KAAM7G,EAAKsL,SACXxE,YAAc0C,EAAK1C,YACnBvI,YAAc4C,OAI1BG,EAAAC,EAAAC,cAAC+J,GAAAhK,EAAD,KACID,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACI0F,MAAM,UACNvF,QAAQ,YACR+D,QAAU,kBAAM+D,EAAKgC,gBAHzB,UAOAlK,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACI0F,MAAM,YACNvF,QAAQ,YACR+D,QAAU,kBAAM+D,EAAK1C,YAAY,IAAI,KAHzC,WAURxF,EAAAC,EAAAC,cAAC6E,GAAA9E,EAAD,CACIG,QAAQ,YACR+D,QAAU,kBAAM+D,EAAKiC,WAAW9N,KAEhC2D,EAAAC,EAAAC,cAACwE,GAAAzE,EAAD,CAAYkF,KAAK,WAEjBnF,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAASkE,QAAU,kBAAM+D,EAAKiC,WAAW9N,KAAgBwM,GAAgBV,WApKpExG,aAiLVC,wBAhMA,SAAAC,GAAK,MAAK,CACrBuH,kBAAmB,CACftH,QAA4B,EAAnBD,EAAMlB,QAAQoB,MAE3BuH,YAAa,CACTc,UAAW,OACXC,UAAW,QAEflC,SAAU,CACNxC,MAAO,OACP2E,KAAM,WAsLC1I,CAAoB0E,IC1M7BiE,eAEF,SAAAA,EAAa7K,GAAO,IAAAD,EAAA,OAAA9D,OAAA4K,EAAA,EAAA5K,CAAA2E,KAAAiK,IAChB9K,EAAA9D,OAAA6K,EAAA,EAAA7K,CAAA2E,KAAA3E,OAAA8K,EAAA,EAAA9K,CAAA4O,GAAA7D,KAAApG,KAAMZ,KACDrE,MAAQ,CACT6N,MAAM,GAHMzJ,4EAONpD,GAAW,IACZmO,EAAiBlK,KAAKZ,MAAtB8K,aACT1M,QAAQC,IAAK1B,GACbmO,EAAanO,GACbiE,KAAK4J,qDAIL5J,KAAK4G,SAAS,CACVgC,MAAO5I,KAAKjF,MAAM6N,8CAMtBhH,EADqB5B,KAAKZ,MAAlBwC,UACC8F,UAAQyC,MAAM,wBACvBnK,KAAKoK,gDAGC,IAAAtD,EAAA9G,KAAAoD,EACwBpD,KAAKZ,MAA3Bc,EADFkD,EACElD,QAAS0B,EADXwB,EACWxB,SAEjB,OACIlC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC8I,GAAA/I,EAAD,CAAQiJ,KAAO5I,KAAKjF,MAAM6N,KAAOK,QAAU,kBAAMnC,EAAK8C,gBAClDlK,EAAAC,EAAAC,cAACyK,EAAA,KAAD,CACI5C,MAAM,sBACN6C,SAAU,SAACzD,GAAD,OAASC,EAAKoD,aAAarD,KAErCnH,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMS,WAAS,EAACK,UAAYP,EAAQqK,eAChC7K,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,GAAIE,UAAYP,EAAQsK,UAEnC9K,EAAAC,EAAAC,cAAC6K,GAAD,CACI7J,GAAG,gCACH6G,MAAM,gCACNI,SAAS,mBACTxB,WAAY,EACZtK,UAAY,GACZ6F,SAAWA,KAKnBlC,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,GAAIE,UAAYP,EAAQsK,UACnC9K,EAAAC,EAAAC,cAACyK,EAAA,QAAD,CACI5J,UAAYP,EAAQwK,WACpBC,UAAWC,IACXnD,MAAM,8BACN7G,GAAG,8BACHC,MAAM,UACNgK,WAAS,EACTC,QAAQ,IACRhL,QAAQ,eAKpBJ,EAAAC,EAAAC,cAAC+J,GAAAhK,EAAD,KACID,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAQvE,KAAK,SAASiK,MAAM,UAAUvF,QAAQ,aAA9C,UAOZJ,EAAAC,EAAAC,cAACmL,GAAApL,EAAD,CACI0F,MAAM,UACNX,aAAW,MACXjE,UAAWP,EAAQ8K,IACnBnH,QAAU,kBAAMiD,EAAKsD,iBAErB1K,EAAAC,EAAAC,cAACqL,GAAAtL,EAAD,eAhFkB0B,aAuFhC6J,GAAc5J,qBAnGL,SAACC,GAAD,MAAY,CACvBgJ,cAAe,CACX/I,QAA4B,EAAnBD,EAAMlB,QAAQoB,MAE3B+I,SAAU,CACNhJ,QAA4B,EAAnBD,EAAMlB,QAAQoB,MAE3BiJ,WAAY,CACR9E,MAAO,UA2FKtE,CAAoB2I,IAEzB9H,qBAAS,SAAAgJ,GAAA,MAA8B,CAAC7M,oBAA/B6M,EAAE7M,sBAAX6D,CAAiE+I,ICvG1EvJ,GAAqB,CACvByJ,iBCRG,WACH,OAAO,SAAUxJ,GAGb,OAFApE,QAAQC,IAAI,qBACZmE,EAASQ,KACFP,MAAM,qCACRC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAE,GAEF,OADAJ,EAASS,EAAwBL,EAAKtG,cAC/BsG,EAAKtG,cAEnBuG,MAAO,SAAArH,GAAK,OAAIgH,EAASU,GAAsB1H,QDDpDuI,gBCKG,SAA0BpH,GAC7B,OAAO,SAAU6F,GAGb,OAFApE,QAAQC,IAAI,oBAAoB1B,GAChC6F,EAASW,MACFV,MAAM,2CAA2C,CACpDkF,OAAQ,OACRC,QAAS,CACLC,OAAU,mBACVC,eAAgB,oBAEpBC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CAAEvL,gBAEtB+F,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAE,GAEF,OADAJ,EAASY,GAAuBR,EAAKtG,cAC9BsG,EAAKtG,cAEfuG,MAAM,SAAArH,GAAK,OAAIgH,EAASa,GAAqB7H,QDtBtDyQ,aC0BG,SAAuBtP,GAC1B,OAAO,SAAU6F,GAGb,OAFApE,QAAQC,IAAI,iBAAiB1B,GAC7B6F,EAASc,MACFb,MAAM,oCAAoC,CAC7CkF,OAAQ,OACRC,QAAS,CACLC,OAAU,mBACVC,eAAgB,oBAEpBC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CAAEvL,gBAEtB+F,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAE,GAEF,OADAJ,EAASe,GAAoBX,EAAKtG,cAC3BsG,EAAKtG,cAEfuG,MAAM,SAAArH,GAAK,OAAIgH,EAASgB,GAAkBhI,SDzCjD0Q,+LAGEtL,KAAKZ,MAAMgM,oDAIX,OACI1L,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC2L,GAAD,CACI7P,YAAcsE,KAAKZ,MAAM1D,YACzByH,gBAAkBnD,KAAKZ,MAAM+D,gBAC7BW,QAAU9D,KAAKZ,MAAM0E,UAEzBpE,EAAAC,EAAAC,cAAC4L,GAAD,CACItB,aAAelK,KAAKZ,MAAMiM,uBAfvBhK,aAuBRc,qBAnCS,SAACpH,GAAD,MAAY,CAChCW,YAAaX,EAAMoD,KAAKzC,YACxBf,QAASI,EAAMoD,KAAKxD,QACpBC,MAAOG,EAAMoD,KAAKvD,QAgCkB+G,GAAzBQ,CAA8CmJ,IE1ChDG,GAAqB,iBAAO,CACrCrQ,KAAM,0BAGGsQ,GAAuB,SAAC7P,GAAD,MAAe,CAC/CT,KAAM,0BACNG,QAAS,CAAEM,cAGF8P,GAAqB,SAAC/Q,GAAD,MAAY,CAC1CQ,KAAM,wBACNG,QAAS,CAAEX,4ICqBTgR,sLAGUtL,GACRN,KAAKZ,MAAM0E,QAAQC,KAAK,CAAEC,SAAU,SAAUC,OAAQ3D,EAAKoJ,kDAG/CpJ,EAAMiD,GAAG,IAAApE,EAAAa,KAEjB6L,EADgB7L,KAAKZ,MAAjBc,QACS4L,kBAKjB,OAJKxL,EAAK7D,OACNoP,EAAK7L,KAAKZ,MAAMc,QAAQ6L,qBAIxBrM,EAAAC,EAAAC,cAACoM,GAAArM,EAAD,CACIsM,OAAK,EACLxL,UAAYoL,EACZrI,IAAM,YAAYD,EAClBM,QAAU,kBAAM1E,EAAK+M,WAAW5L,KAEhCZ,EAAAC,EAAAC,cAACuM,GAAAxM,EAAD,KAAYW,EAAKmJ,UACjB/J,EAAAC,EAAAC,cAACuM,GAAAxM,EAAD,SAAcW,EAAK7D,KAAO6D,EAAK7D,KAAK2P,cAAgB,uCAApD,KACA1M,EAAAC,EAAAC,cAACuM,GAAAxM,EAAD,SAAcW,EAAK7D,KAAO6D,EAAK7D,KAAKoB,UAAY,GAAhD,uCAKF,IAAAiJ,EAAA9G,KACEE,EAAYF,KAAKZ,MAAjBc,QACR,OACIR,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,GAAIE,UAAYP,EAAQmM,WACnC3M,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYG,QAAQ,KAAKW,UAAYP,EAAQoM,SACxCtM,KAAKZ,MAAMrD,WAEhB2D,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CAAOc,UAAYP,EAAQqM,gBACvB7M,EAAAC,EAAAC,cAAC4M,GAAA7M,EAAD,KACID,EAAAC,EAAAC,cAAC6M,GAAA9M,EAAD,KACID,EAAAC,EAAAC,cAACoM,GAAArM,EAAD,KACID,EAAAC,EAAAC,cAACuM,GAAAxM,EAAD,aACAD,EAAAC,EAAAC,cAACuM,GAAAxM,EAAD,iCACAD,EAAAC,EAAAC,cAACuM,GAAAxM,EAAD,oCAGRD,EAAAC,EAAAC,cAAC8M,GAAA/M,EAAD,KACMK,KAAKZ,MAAMvD,SAASyH,IAAK,SAAChD,EAAMiD,GAAP,OAAauD,EAAK6F,eAAerM,EAAMiD,gBA7CtElC,aAsDTC,wBAzEA,SAACC,GAAD,MAAY,CACvB8K,UAAW,CACT7K,QAA8B,EAArBD,EAAMlB,QAAQoB,KACvBC,UAAgC,EAArBH,EAAMlB,QAAQoB,MAE3B8K,eAAgB,CACZ/K,QAA4B,EAAnBD,EAAMlB,QAAQoB,MAE3BsK,oBAAqB,CACjBjJ,gBAAiB8J,KAAW,KAEhCd,kBAAmB,CACfhJ,gBAAiB,MAErBwJ,QAAS,CACL9K,QAA4B,EAAnBD,EAAMlB,QAAQoB,QA0DhBH,CAAoBsK,IC3E7BjK,GAAqB,CACvBkL,cCVG,SAAwB9Q,GAC3B,OAAO,SAAU6F,GAGb,OAFApE,QAAQC,IAAI,kBACZmE,EAAS6J,MACF5J,MAAM,kCAAkC,CAC3CkF,OAAQ,OACRC,QAAS,CACLC,OAAU,mBACVC,eAAgB,oBAEpBC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CAAEvL,gBAEtB+F,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAE,GAGF,OAFAxE,QAAQC,IAAIuE,GACZJ,EAAS8J,GAAqB1J,EAAKwE,QAC5BxE,EAAKwE,QAEfvE,MAAM,SAAArH,GAAK,OAAIgH,EAAS+J,GAAmB/Q,QDRpDkS,uBFCkC,SAAC/Q,GAAD,MAAgB,CAClDX,KAAM,2BACNG,QAAS,CAAEQ,gBECTgR,+LAGE,IAAMhR,EAAYiE,KAAKZ,MAAM7B,SAAS0G,OAAO+I,OAAO,GACpDxP,QAAQC,IAAI1B,GACZiE,KAAKZ,MAAMyN,cAAc9Q,GACzBiE,KAAKZ,MAAM0N,uBAAuB/Q,gDAKlC,IAAMA,EAAYiE,KAAKZ,MAAM7B,SAAS0G,OAAO+I,OAAO,GAChDjR,IAAciE,KAAKZ,MAAMxD,mBACzBoE,KAAKZ,MAAMyN,cAAc9Q,GACzBiE,KAAKZ,MAAM0N,uBAAuB/Q,qCAKtC,OACI2D,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACqN,GAAD,CACIpR,SAAUmE,KAAKZ,MAAMvD,SACrBiI,QAAS9D,KAAKZ,MAAM0E,QACpB/H,UAAWiE,KAAKZ,MAAMxD,2BAxBdyF,aA+Bbc,qBA1CS,SAACpH,GAAD,MAAY,CAChCc,SAAUd,EAAMgB,UAAUF,SAC1BD,iBAAkBb,EAAMgB,UAAUH,mBAwCE+F,GAAzBQ,CAA8C4K,IEhDhDG,GAAmB,iBAAO,CACnC9R,KAAM,uBAGG+R,GAAqB,SAAC/Q,GAAD,MAAa,CAC3ChB,KAAM,uBACNG,QAAS,CAAEa,YAGFgR,GAAmB,SAACxS,GAAD,MAAY,CACxCQ,KAAM,qBACNG,QAAS,CAAEX,WCTR,SAASyS,KACZ,OAAO,SAAUzL,GAGb,OAFApE,QAAQC,IAAI,gBACZmE,EAASsL,MACFrL,MAAM,gCACRC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAE,GAGF,OAFAxE,QAAQC,IAAIuE,GACZJ,EAASuL,GAAmBnL,EAAK5F,SAC1B4F,EAAK5F,SAEnB6F,MAAO,SAAArH,GAAK,OAAIgH,EAASwL,GAAiBxS,+GCuB7C0S,wLAEWC,EAAQhK,GAAG,IACZrD,EAAYF,KAAKZ,MAAjBc,QAER,OACIR,EAAAC,EAAAC,cAAA,OAAK4D,IAAM,SAASD,GAChB7D,EAAAC,EAAAC,cAAC4N,GAAA7N,EAAD,CAAgBc,UAAYP,EAAQuN,aAChC/N,EAAAC,EAAAC,cAAC8N,GAAA/N,EAAD,CAAuBgO,WAAYjO,EAAAC,EAAAC,cAACgO,GAAAjO,EAAD,OACnCD,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMS,WAAS,GACXV,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACG,UAAYP,EAAQ2N,kBAC/BnO,EAAAC,EAAAC,cAACoD,GAAArD,EAAD,CACIsD,OACAvD,EAAAC,EAAAC,cAACuE,GAAAxE,EAAD,KACID,EAAAC,EAAAC,cAACkO,GAAAnO,EAAD,OAGJkB,MAAQ0M,EAAOQ,QAGnBrO,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACG,UAAYP,EAAQ2N,kBAC/BnO,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYc,UAAYP,EAAQ8N,YAAeT,EAAOpI,KAAK,OAI/DzF,EAAAC,EAAAC,cAACqO,GAAAtO,EAAD,KACID,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMS,WAAS,GAEXV,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,EAAGE,UAAYP,EAAQgO,YAClCxO,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYG,QAAQ,UAAUqO,cAAY,GAA1C,QAEJzO,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,GAAIE,UAAYP,EAAQgO,YACnCxO,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYwO,cAAY,GAAGZ,EAAOjQ,MAGtCoC,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,EAAGE,UAAYP,EAAQgO,YAClCxO,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYG,QAAQ,UAAUqO,cAAY,GAA1C,SAEJzO,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,GAAIE,UAAYP,EAAQgO,YACnCxO,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYgL,UAAW,OAAQwD,cAAY,GACrCZ,EAAOpI,KAAK7B,IAAK,SAAChD,EAAMiD,GAAP,OAAa7D,EAAAC,EAAAC,cAAA,OAAK4D,IAAM,QAAQD,GAAMjD,EAAKZ,EAAAC,EAAAC,cAAA,gBAItEF,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,EAAGE,UAAYP,EAAQgO,YAClCxO,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYG,QAAQ,UAAUqO,cAAY,GAA1C,gBAEJzO,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,GAAIE,UAAYP,EAAQgO,YACnCxO,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAagL,UAAW,OAAQwD,cAAY,GACtCZ,EAAOa,YAAY9K,IAAK,SAAChD,EAAMiD,GAAP,OAAa7D,EAAAC,EAAAC,cAAA,OAAK4D,IAAM,eAAeD,GAAMjD,EAAKZ,EAAAC,EAAAC,cAAA,gBAIpFF,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,EAAGE,UAAYP,EAAQgO,YAClCxO,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYG,QAAQ,UAAUqO,cAAY,GAA1C,UAEJzO,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,GAAIE,UAAYP,EAAQgO,YACnCxO,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAagL,UAAW,OAAQwD,cAAY,GACtCZ,EAAOc,MAAM/K,IAAK,SAAChD,EAAMiD,GAAP,OAAa7D,EAAAC,EAAAC,cAAA,OAAK4D,IAAM,SAASD,GAAMjD,EAAKZ,EAAAC,EAAAC,cAAA,gBAIxEF,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,EAAGE,UAAYP,EAAQgO,YAClCxO,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYG,QAAQ,UAAUqO,cAAY,GAA1C,aAEJzO,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,GAAIE,UAAYP,EAAQgO,YACnCxO,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAagL,UAAW,OAAQwD,cAAY,GACtCZ,EAAOe,SAAShL,IAAK,SAAChD,EAAMiD,GAAP,OAAa7D,EAAAC,EAAAC,cAAA,OAAK4D,IAAM,YAAYD,GAAK7D,EAAAC,EAAAC,cAAA,KAAG2O,KAAMjO,EAAMhB,OAAO,OAAQkP,IAAI,uBAAuBlO,GAASZ,EAAAC,EAAAC,cAAA,qDAWxJ,IAAAT,EAAAa,KAAAoD,EACuBpD,KAAKZ,MAA1BpD,EADFoH,EACEpH,QAASkE,EADXkD,EACWlD,QAEjB,OACIR,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMS,WAAS,GACXV,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,GAAIE,UAAYP,EAAQuO,SAAvC,UAEI/O,EAAAC,EAAAC,cAAA,OAAKa,UAAYP,EAAQwO,aACnB1S,EAAQsH,IAAK,SAACA,EAAKC,GAAN,OAAYpE,EAAKwP,aAAarL,EAAKC,eAtF5ClC,aA8FfC,wBArHA,SAAAC,GAAK,MAAK,CACrBkN,QAAS,CACPjN,QAA8B,EAArBD,EAAMlB,QAAQoB,KACvBC,UAAgC,EAArBH,EAAMlB,QAAQoB,MAE3BiN,YAAa,CACTlN,QAA8B,EAArBD,EAAMlB,QAAQoB,MAE3ByM,WAAY,CACRvK,UAAW,QAEfkK,iBAAkB,CACdlK,UAAW,OACXkC,YAAgC,EAAnBtE,EAAMlB,QAAQoB,MAE/BgM,YAAa,CACTjM,QAAQD,EAAMlB,QAAQoB,MAE1BuM,WAAY,CACRY,WAAW,OAkGJtN,CAAoBgM,wBC3F7BuB,0LAEaC,EAAIvL,GAAG,IACVrD,EAAYF,KAAKZ,MAAjBc,QACR,OACIR,EAAAC,EAAAC,cAAA,OAAK4D,IAAM,KAAKD,GACZ7D,EAAAC,EAAAC,cAAC4N,GAAA7N,EAAD,KACID,EAAAC,EAAAC,cAAC8N,GAAA/N,EAAD,CAAuBgO,WAAYjO,EAAAC,EAAAC,cAACgO,GAAAjO,EAAD,OACnCD,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMS,WAAS,GACXV,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACG,UAAYP,EAAQ2N,kBAC/BnO,EAAAC,EAAAC,cAACoD,GAAArD,EAAD,CACIsD,OACAvD,EAAAC,EAAAC,cAACuE,GAAAxE,EAAD,KACID,EAAAC,EAAAC,cAACmP,GAAApP,EAAD,OAGJkB,MAAQiO,EAAGf,QAGfrO,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACG,UAAYP,EAAQ2N,kBAC/BnO,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYc,UAAYP,EAAQ8N,YAAec,EAAG3J,KAAK,GAAvD,MAAgE2J,EAAGE,QAAQ,OAI/EtP,EAAAC,EAAAC,cAACqO,GAAAtO,EAAD,KACID,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMS,WAAS,GACXV,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,EAAGE,UAAYP,EAAQgO,YAClCxO,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYG,QAAQ,UAAUqO,cAAY,GAA1C,QAEJzO,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,GAAIE,UAAYP,EAAQgO,YACnCxO,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYwO,cAAY,GAAGW,EAAGxR,MAGlCoC,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,EAAGE,UAAYP,EAAQgO,YAClCxO,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYG,QAAQ,UAAUqO,cAAY,GAA1C,SAEJzO,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,GAAIE,UAAYP,EAAQgO,YACnCxO,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAagL,UAAW,OAAQwD,cAAY,GACtCW,EAAG3J,KAAK7B,IAAK,SAAChD,EAAMiD,GAAP,OAAa7D,EAAAC,EAAAC,cAAA,OAAM4D,IAAM,SAASD,GAAMjD,EAAKZ,EAAAC,EAAAC,cAAA,gBAIpEF,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,EAAGE,UAAYP,EAAQgO,YAClCxO,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYG,QAAQ,UAAUqO,cAAY,GAA1C,YAEJzO,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,GAAIE,UAAYP,EAAQgO,YACnCxO,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAagL,UAAW,OAAQwD,cAAY,GACtCW,EAAGE,QAAQ1L,IAAK,SAAChD,EAAMiD,GAAP,OAAa7D,EAAAC,EAAAC,cAAA,OAAM4D,IAAM,YAAYD,GAAMjD,EAAKZ,EAAAC,EAAAC,cAAA,gBAI1EF,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,EAAGE,UAAYP,EAAQgO,YAClCxO,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYG,QAAQ,UAAUqO,cAAY,GAA1C,YAEJzO,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,GAAIE,UAAYP,EAAQgO,YACnCxO,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAagL,UAAW,OAAQwD,cAAY,GACtCW,EAAGR,SAAShL,IAAK,SAAChD,EAAMiD,GAAP,OAAa7D,EAAAC,EAAAC,cAAA,OAAK4D,IAAM,aAAaD,GAAK7D,EAAAC,EAAAC,cAAA,KAAG2O,KAAMjO,EAAMhB,OAAO,OAAQkP,IAAI,uBAAuBlO,GAASZ,EAAAC,EAAAC,cAAA,qDAWrJ,IAAAT,EAAAa,KAAAoD,EACwBpD,KAAKZ,MAA3BnD,EADFmH,EACEnH,SAAUiE,EADZkD,EACYlD,QAElB,OACIR,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMS,WAAS,EAACK,UAAYP,EAAQ+O,MAChCvP,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,GAAIE,UAAYP,EAAQuO,SAAvC,WAEI/O,EAAAC,EAAAC,cAAA,OAAKa,UAAYP,EAAQwO,aACnBzS,EAASqH,IAAK,SAAChD,EAAMiD,GAAP,OAAapE,EAAK+P,eAAe5O,EAAMiD,eA3E/ClC,aAmFjBC,wBA7GA,SAAAC,GAAK,MAAK,CACrB0N,KAAM,CACFE,SAAU,GAEdV,QAAS,CACPjN,QAA8B,EAArBD,EAAMlB,QAAQoB,KACvBC,UAAgC,EAArBH,EAAMlB,QAAQoB,MAE3BiN,YAAa,CACTlN,QAA8B,EAArBD,EAAMlB,QAAQoB,MAE3ByM,WAAY,CACRvK,UAAW,QAEfkK,iBAAkB,CACdlK,UAAW,OACXkC,YAAgC,EAAnBtE,EAAMlB,QAAQoB,MAE/BgM,YAAa,CACTjM,QAAQD,EAAMlB,QAAQoB,MAE1BuM,WAAY,CACRY,WAAY,OAuFLtN,CAAoBuN,wBCnF7BA,0LAEaO,EAAK7L,GAAG,IACXrD,EAAYF,KAAKZ,MAAjBc,QACR,OACIR,EAAAC,EAAAC,cAAA,OAAK4D,IAAM,MAAMD,GACb7D,EAAAC,EAAAC,cAAC4N,GAAA7N,EAAD,KACID,EAAAC,EAAAC,cAAC8N,GAAA/N,EAAD,CAAuBgO,WAAYjO,EAAAC,EAAAC,cAACgO,GAAAjO,EAAD,OACnCD,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMS,WAAS,GACXV,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACG,UAAYP,EAAQ2N,kBAC/BnO,EAAAC,EAAAC,cAACoD,GAAArD,EAAD,CACIsD,OACAvD,EAAAC,EAAAC,cAACuE,GAAAxE,EAAD,KACID,EAAAC,EAAAC,cAACyP,GAAA1P,EAAD,OAGJkB,MAAQuO,EAAIrB,QAGhBrO,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACG,UAAYP,EAAQ2N,kBAC/BnO,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYc,UAAYP,EAAQ8N,YAAgBoB,EAAIjK,KAAK,OAI7DzF,EAAAC,EAAAC,cAACqO,GAAAtO,EAAD,KACID,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMS,WAAS,GACXV,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,EAAGE,UAAYP,EAAQgO,YAClCxO,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYG,QAAQ,UAAUqO,cAAY,GAA1C,QAEJzO,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,GAAIE,UAAYP,EAAQgO,YACnCxO,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYwO,cAAY,GAAGiB,EAAI9R,MAGnCoC,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,EAAGE,UAAYP,EAAQgO,YAClCxO,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYG,QAAQ,UAAUqO,cAAY,GAA1C,SAEJzO,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,GAAIE,UAAYP,EAAQgO,YACnCxO,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYgL,UAAW,OAAQwD,cAAY,GAAGiB,EAAIjK,KAAK7B,IAAK,SAAChD,EAAMiD,GAAP,OAAa7D,EAAAC,EAAAC,cAAA,OAAK4D,IAAK,UAAUD,GAAKjD,EAAKZ,EAAAC,EAAAC,cAAA,gBAG3GF,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,EAAGE,UAAYP,EAAQgO,YAClCxO,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYG,QAAQ,UAAUqO,cAAY,GAA1C,YAEJzO,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,GAAIE,UAAYP,EAAQgO,YACnCxO,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYwO,cAAY,GAACzO,EAAAC,EAAAC,cAAA,KAAG2O,KAAOa,EAAId,SAAWhP,OAAO,SAAUkP,IAAI,uBAAwBY,EAAId,iDAUrH,IAAAnP,EAAAa,KAAAoD,EAC6BpD,KAAKZ,MAAhClD,EADFkH,EACElH,cAAegE,EADjBkD,EACiBlD,QAEvB,OACIR,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMS,WAAS,EAACK,UAAYP,EAAQ+O,MAChCvP,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,GAAIE,UAAYP,EAAQuO,SAAvC,gBAEI/O,EAAAC,EAAAC,cAAA,OAAKa,UAAYP,EAAQwO,aACnBxS,EAAcoH,IAAK,SAAChD,EAAMiD,GAAP,OAAapE,EAAK+P,eAAe5O,EAAMiD,eA9DpDlC,aAsEjBC,wBAhGA,SAAAC,GAAK,MAAK,CACrB0N,KAAM,CACFE,SAAU,GAEdV,QAAS,CACPjN,QAA8B,EAArBD,EAAMlB,QAAQoB,KACvBC,UAAgC,EAArBH,EAAMlB,QAAQoB,MAE3BiN,YAAa,CACTlN,QAA8B,EAArBD,EAAMlB,QAAQoB,MAE3ByM,WAAY,CACRvK,UAAW,QAEfkK,iBAAkB,CACdlK,UAAW,OACXkC,YAAgC,EAAnBtE,EAAMlB,QAAQoB,MAE/BgM,YAAa,CACTjM,QAAQD,EAAMlB,QAAQoB,MAE1BuM,WAAY,CACRY,WAAY,OA0ELtN,CAAoBuN,IC/F7BlN,GAAqB,CACvB0L,YAAaiC,IAGXC,+LAEEvP,KAAKZ,MAAMiO,+CAIX,OACI3N,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC4P,GAAD,CAAiBxT,QAAUgE,KAAKZ,MAAMpD,UACtC0D,EAAAC,EAAAC,cAAC6P,GAAD,CAAmBxT,SAAW+D,KAAKZ,MAAMnD,WACzCyD,EAAAC,EAAAC,cAAC8P,GAAD,CAAuBxT,cAAgB8D,KAAKZ,MAAMlD,wBAVtCmF,aAgBbc,qBA1BS,SAACpH,GAAD,MAAY,CAChCiB,QAASjB,EAAMqB,OAAOJ,QACtBC,SAAUlB,EAAMqB,OAAOH,SACvBC,cAAenB,EAAMqB,OAAOF,gBAuBQyF,GAAzBQ,CAA8CoN,IClChDI,GAAiB,iBAAO,CACjCvU,KAAM,qBAGGwU,GAAmB,SAACvS,GAAD,MAAW,CACvCjC,KAAM,qBACNG,QAAS,CAAE8B,UAGFwS,GAAiB,SAACjV,GAAD,MAAY,CACtCQ,KAAM,mBACNG,QAAS,CAAEX,WAGFkV,GAAe,iBAAO,CAC/B1U,KAAM,mBAGG2U,GAAiB,SAAC1S,GAAD,MAAW,CACrCjC,KAAM,mBACNG,QAAS,CAAE8B,UAGF2S,GAAe,SAACpV,GAAD,MAAY,CACpCQ,KAAM,iBACNG,QAAS,CAAEX,WAGFqV,GAAkB,iBAAO,CAClC7U,KAAM,sBAGG8U,GAAoB,SAAC7S,GAAD,MAAW,CACxCjC,KAAM,sBACNG,QAAS,CAAE8B,UAGF8S,GAAkB,SAACvV,GAAD,MAAY,CACvCQ,KAAM,oBACNG,QAAS,CAAEX,uFCZTwV,WAAYC,KAAK,MACjBC,GAAWD,KAAK,KAChBE,GAAYC,KAAI,KAChBC,GAAiBC,KAAS,KAM1BC,GAAgB,SAACzR,GAAU,IACrB3B,EAAuB2B,EAAvB3B,SAAUqT,EAAa1R,EAAb0R,SACZC,EANU,SAACtT,GACjB,OAAOA,EAASyK,MAAM,KAAKQ,MAKVsI,CAAYvT,GACvBwT,EAAgBH,EAAS5I,MAAM,KAErC,MAAO,MADc+I,EAAcA,EAAc9V,OAAS,GAC5B,SAAW4V,GAGvCG,GAAU,CACZC,OAAQ,CACJC,gBAAgB,EAChBC,aAAc,CACVC,WAAY,WACZC,gBAAiB,MAIzBC,MAAO,CACLC,QAAQ,EACRC,OAAQ,CAACC,IAAK,GACdpM,MAAO,CACHA,MAAOiL,KAGboB,MAAO,CACHC,MAAO,MACPC,QAAQ,EACRC,KAAM,CACFC,OAAO,IAGfC,OAAQ,CACJC,OAAQ,CACJH,KAAM,CACFxM,MAAO,SAEbA,MAAO,CACL4M,WAAYxB,GACZyB,OAAQ5B,GACRC,UAAW,CACP0B,WAAY1B,GACZ2B,OAAQ,aAIhB9T,KAAM,CACFyT,KAAM,CACFxM,MAAO,SAEXA,MAAO,CACL4M,WAAY3B,GACZ4B,OAAQ9B,GACRG,UAAW,CACT0B,WAAY1B,GACZ2B,OAAQ,aAIhBC,cAAe,CACX9M,MAAO,CACH4M,WAAY,cAMtBG,eAkFF,SAAAA,EAAahT,GAAO,IAAAD,EAAA,OAAA9D,OAAA4K,EAAA,EAAA5K,CAAA2E,KAAAoS,IAChBjT,EAAA9D,OAAA6K,EAAA,EAAA7K,CAAA2E,KAAA3E,OAAA8K,EAAA,EAAA9K,CAAA+W,GAAAhM,KAAApG,KAAMZ,KACDsS,MAAQ,IAAIW,WACjBlT,EAAKmS,MAAQ,IAAIe,WAHDlT,4EAhFN9B,GACV2C,KAAKsS,SAASjV,EAAKC,KAAOD,EADV,IAAAkV,GAAA,EAAAC,GAAA,EAAAC,OAAAvX,EAAA,IAEhB,QAAAwX,EAAAC,EAAqBtV,EAAKS,QAA1B8U,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAmC,KAAxBP,EAAwBU,EAAAnT,MAC/BS,KAAKgT,aAAahB,IAHN,MAAAiB,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,YAAAV,GAAA,MAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,yCAONxD,GACVzR,QAAQC,IAAIwR,EAAK1R,UACjB,IAAM4V,EAAenT,KAAK0R,MAAM0B,SAC1BpB,EAAS/C,EAAK3R,IACdmM,EAAWzJ,KAAKZ,MAAM3C,KAAKc,SAC7B8V,EAAQ,SAIZ,GAHIpE,EAAK1R,WAAakM,IAClB4J,EAAQ,QAEQ,WAAhBpE,EAAKqE,OACT,CAWI,GATAH,EAAapP,KAAKiO,GAClBhS,KAAK0R,MAAM6B,OAAO,CACd3S,GAAIoR,EACJnR,MAAO8P,GAAc1B,GACrBoE,MAAOA,EACPG,MAAOvE,EAAKwE,SACZhF,QAASkC,GAAc1B,KAGvBA,EAAKyE,gBAAiB,KAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAA3Y,EAAA,IACtB,QAAA4Y,EAAAC,EAAiB9E,EAAKyE,gBAAtBd,OAAAC,cAAAc,GAAAG,EAAAC,EAAAjB,QAAAC,MAAAY,GAAA,EAAuC,KAA5BK,EAA4BF,EAAAvU,MACnCS,KAAK0R,MAAM6B,OAAO,CACd3S,GAAIoT,EAAG1W,IACPuD,MAAO,sBAAsBmT,EAAGjG,KAAK,OACrCsF,MAAO,kBAEXrT,KAAKsR,MAAMiC,OAAO,CACdU,KAAMjC,EACNP,GAAIuC,EAAG1W,IACPkU,OAAQ,UAVM,MAAAyB,GAAAW,GAAA,EAAAC,EAAAZ,EAAA,YAAAU,GAAA,MAAAI,EAAAb,QAAAa,EAAAb,SAAA,WAAAU,EAAA,MAAAC,IAgB1B,GAAI5E,EAAKnR,QAAS,KAAAoW,GAAA,EAAAC,GAAA,EAAAC,OAAAlZ,EAAA,IACd,QAAAmZ,EAAAC,EAA0BrF,EAAKnR,QAA/B8U,OAAAC,cAAAqB,GAAAG,EAAAC,EAAAxB,QAAAC,MAAAmB,GAAA,EAAwC,KAA7BK,EAA6BF,EAAA9U,MAC9BD,EAASiV,EAAYjX,IAErBmM,EAAWzJ,KAAKZ,MAAM3C,KAAKc,SAC7B8V,EAAQ,SACRkB,EAAYhX,WAAakM,IACzB4J,EAAQ,QAEZF,EAAapP,KAAKzE,GAClBU,KAAK0R,MAAM6B,OAAO,CACd3S,GAAItB,EACJuB,MAAO8P,GAAc4D,GACrBlB,MAAOA,EACPG,MAAOe,EAAYd,SACnBhF,QAASkC,GAAc4D,KAG3BvU,KAAKsR,MAAMiC,OAAO,CACdU,KAAMjC,EACNP,GAAInS,EACJkS,OAAQ,UArBF,MAAAyB,GAAAkB,GAAA,EAAAC,EAAAnB,EAAA,YAAAiB,GAAA,MAAAI,EAAApB,QAAAoB,EAAApB,SAAA,WAAAiB,EAAA,MAAAC,GAAA,IAAAI,GAAA,EAAAC,GAAA,EAAAC,OAAAxZ,EAAA,IAwBd,QAAAyZ,EAAAC,EAA0B3F,EAAKnR,QAA/B8U,OAAAC,cAAA2B,GAAAG,EAAAC,EAAA9B,QAAAC,MAAAyB,GAAA,EAAwC,KAA7BD,EAA6BI,EAAApV,MACpCS,KAAK6U,aAAaN,IAzBR,MAAAtB,GAAAwB,GAAA,EAAAC,EAAAzB,EAAA,YAAAuB,GAAA,MAAAI,EAAA1B,QAAA0B,EAAA1B,SAAA,WAAAuB,EAAA,MAAAC,4CA+BXjY,GACXuD,KAAK6U,aAAapY,wDAWT6D,GACT,IAAIwU,GAAM,EAKV,OAJA9U,KAAK0R,MAAMqD,QAAQ,SAACC,GACZA,EAAKpU,KAAON,GAAuB,kBAAf0U,EAAK3B,QACzByB,GAAM,KAEPA,8CAGU,IAAAhO,EAAA9G,KAEjBA,KAAKiV,QAAU,IAAIC,WAAQlV,KAAKmV,KAAKC,aAAc,CAAE1D,MAAO1R,KAAK0R,MAAOJ,MAAOtR,KAAKsR,OAAQN,IAC5FhR,KAAKiV,QAAQI,GAAG,QAAS,SAACnW,GACtB,IAAMoB,EAAOwG,EAAKmO,QAAQK,UAAUpW,EAAMqW,QAAQC,KAC9C1O,EAAK2O,YAAYnV,GACjBwG,EAAK1H,MAAMsW,gBAAgBpV,GAE3BwG,EAAK1H,MAAMsW,gBAAgB,mDAIjB,IAAAtS,EACgEpD,KAAKZ,MAA/E3C,EADU2G,EACV3G,KAAMG,EADIwG,EACJxG,iBAAkBC,EADduG,EACcvG,cAAeC,EAD7BsG,EAC6BtG,eAAgB6Y,EAD7CvS,EAC6CuS,eAE/D,GAAI7Y,EAAgB,CAMhB,IAAMqW,EAAenT,KAAK0R,MAAM0B,SANhBwC,GAAA,EAAAC,GAAA,EAAAC,OAAA5a,EAAA,IAOhB,QAAA6a,EAAAC,EAAqB7C,EAArBP,OAAAC,cAAA+C,GAAAG,EAAAC,EAAAlD,QAAAC,MAAA6C,GAAA,OAAWK,EAAXF,EAAAxW,MACIS,KAAK0R,MAAMwE,OAAOD,IARN,MAAAhD,GAAA4C,GAAA,EAAAC,EAAA7C,EAAA,YAAA2C,GAAA,MAAAI,EAAA9C,QAAA8C,EAAA9C,SAAA,WAAA2C,EAAA,MAAAC,GAShB,IAAMK,EAAenW,KAAKsR,MAAM8B,SAThBgD,GAAA,EAAAC,GAAA,EAAAC,OAAApb,EAAA,IAUhB,QAAAqb,EAAAC,EAAqBL,EAArBvD,OAAAC,cAAAuD,GAAAG,EAAAC,EAAA1D,QAAAC,MAAAqD,GAAA,OAAWK,EAAXF,EAAAhX,MACIS,KAAKsR,MAAM4E,OAAOO,IAXN,MAAAxD,GAAAoD,GAAA,EAAAC,EAAArD,EAAA,YAAAmD,GAAA,MAAAI,EAAAtD,QAAAsD,EAAAtD,SAAA,WAAAmD,EAAA,MAAAC,GAahBtW,KAAK0W,cAAcja,GAIa,IAA7BpB,OAAOsb,KAAKla,GAAMxB,QAAgBwB,EAAKma,cAAgBvb,SAAWwB,IACrEW,QAAQC,IAAI,cACZuC,KAAK0W,cAAcja,GACnBkZ,KAGqB,KAArB/Y,GAA2BA,EAC3BoD,KAAKiV,QAAQ4B,YAAa,CAACja,IAE3BoD,KAAKiV,QAAQ4B,YAAa,qCAIxB,IACE3W,EAAYF,KAAKZ,MAAjBc,QACR,OACIR,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CAAOc,UAAYP,EAAQ4W,cACvBpX,EAAAC,EAAAC,cAAA,OAAKa,UAAYP,EAAQ6W,iBAAmBC,IAAI,0BApJzC3V,aA2JZC,wBAvPA,SAAAC,GAAK,MAAK,CACrBwV,iBAAkB,CAChBnR,MAAO,OACPqR,OAAQ,KAEVC,sBAAuB,CACnBxV,UAAgC,EAArBH,EAAMlB,QAAQoB,MAE7B0V,uBAAwB,CACpBvR,MAAO,OACPqR,OAAQ,KAEZH,aAAc,CACVjR,YAAa,MA0ONvE,CAAoB8Q,ICnP7BtB,WAAc,SAACvT,GACjB,OAAOA,EAASyK,MAAM,KAAKQ,QAGzBmI,GAAgB,SAACzR,GAAU,IAEvB6R,EADe7R,EAAb0R,SACuB5I,MAAM,KAErC,OADqB+I,EAAcA,EAAc9V,OAAS,IAKxDmc,eAEF,SAAAA,EAAahY,GAAO,IAAAD,EAAA,OAAA9D,OAAA4K,EAAA,EAAA5K,CAAA2E,KAAAoX,IAChBjY,EAAA9D,OAAA6K,EAAA,EAAA7K,CAAA2E,KAAA3E,OAAA8K,EAAA,EAAA9K,CAAA+b,GAAAhR,KAAApG,KAAMZ,KACDsS,MAAQ,IAAIW,WAFDlT,4EAMN8P,GAEV,IAAMkE,EAAenT,KAAK0R,MAAM0B,SAE1BpB,EAAS/C,EAAK3R,IAapB,GAVA6V,EAAapP,KAAKiO,GAClBhS,KAAK0R,MAAM6B,OAAO,CACd3S,GAAIoR,EACJnR,MAAO8P,GAAc1B,GACrBoE,MAAOvC,GAAY7B,EAAK1R,UACxBiW,MAAOvE,EAAKwE,SACZhF,QAASkC,GAAc1B,KAIvBA,EAAKnR,QAAS,KAAAyU,GAAA,EAAAC,GAAA,EAAAC,OAAAvX,EAAA,IACd,QAAAwX,EAAAC,EAA0B1D,EAAKnR,QAA/B8U,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAwC,KAA7BgC,EAA6B7B,EAAAnT,MAC9BD,EAASiV,EAAYjX,IAIvB6V,EAAapP,KAAKzE,GAClBU,KAAK0R,MAAM6B,OAAO,CACd3S,GAAItB,EACJuB,MAAO8P,GAAc4D,GACrBlB,MAAOvC,GAAYyD,EAAYhX,UAC/BiW,MAAOe,EAAYd,SACnBhF,QAASkC,GAAc4D,MAZrB,MAAAtB,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,YAAAV,GAAA,MAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,GAAA,IAAAkB,GAAA,EAAAC,GAAA,EAAAC,OAAA3Y,EAAA,IAiBd,QAAA4Y,EAAAC,EAA0B9E,EAAKnR,QAA/B8U,OAAAC,cAAAc,GAAAG,EAAAC,EAAAjB,QAAAC,MAAAY,GAAA,EAAwC,KAA7BY,EAA6BT,EAAAvU,MACpCS,KAAK6U,aAAaN,IAlBR,MAAAtB,GAAAW,GAAA,EAAAC,EAAAZ,EAAA,YAAAU,GAAA,MAAAI,EAAAb,QAAAa,EAAAb,SAAA,WAAAU,EAAA,MAAAC,iDAwBD,IAAA/M,EAAA9G,KAOjBA,KAAKqX,SAAW,IAAIC,YAAStX,KAAKmV,KAAKoC,cAAevX,KAAK0R,MAL3C,CACZ8F,gBAAgB,EAChBzN,UAAW,MAIf/J,KAAKqX,SAAShC,GAAG,QAAS,SAACnW,GACvB,IAAMoB,EAAOpB,EAAMoB,KACnBwG,EAAK1H,MAAMsW,gBAAgBpV,GAC3BwG,EAAKuQ,SAAShC,GAAG,QAAS,SAACnW,GACvB,IAAMoB,EAAOpB,EAAMoB,KACnBwG,EAAK1H,MAAMsW,gBAAgBpV,oDAKjB,IAAA8C,EACiBpD,KAAKZ,MAAhC3C,EADU2G,EACV3G,KAAMG,EADIwG,EACJxG,iBACdY,QAAQC,IAAI,yBAGZ,IAAMga,EAAazX,KAAK0R,MAAM0B,SALZc,GAAA,EAAAC,GAAA,EAAAC,OAAAlZ,EAAA,IAMlB,QAAAmZ,EAAAC,EAAqBmD,EAArB7E,OAAAC,cAAAqB,GAAAG,EAAAC,EAAAxB,QAAAC,MAAAmB,GAAA,OAAW+B,EAAX5B,EAAA9U,MACIS,KAAK0R,MAAMwE,OAAOD,IAPJ,MAAAhD,GAAAkB,GAAA,EAAAC,EAAAnB,EAAA,YAAAiB,GAAA,MAAAI,EAAApB,QAAAoB,EAAApB,SAAA,WAAAiB,EAAA,MAAAC,GAWlB,GAAoC,IAA7B/Y,OAAOsb,KAAKla,GAAMxB,QAAgBwB,EAAKma,cAAgBvb,OAQ1D,GAPAmC,QAAQC,IAAI,mBAIZD,QAAQC,IAAIuC,KAAK0R,OACjB1R,KAAK6U,aAAapY,GAEQ,IAAtBuD,KAAK0R,MAAMzW,YAIV,CACD,IAAMyc,EAAY1X,KAAK0R,MAAMpO,IAAK,SAAC0R,EAAKzR,GAAN,OAAayR,EAAK3B,QAC9CA,EAAQ,GACRN,EAAO,GACb,IAAK,IAAMxP,KAAKmU,EACR3E,EAAK4E,QAAQD,EAAUnU,IAAM,IAC7B8P,EAAMtP,KAAK,CACPnD,GAAI8W,EAAUnU,GACdkL,QAASiJ,EAAUnU,KAEvBwP,EAAKhP,KAAK2T,EAAUnU,KAG5BvD,KAAKqX,SAASO,UAAUvE,GACxBrT,KAAKqX,SAASQ,MAGlBjb,EACAoD,KAAKqX,SAASS,aAAalb,GAE3BoD,KAAKqX,SAASS,aAAa,qCAIzB,IACE5X,EAAYF,KAAKZ,MAAjBc,QACR,OACIR,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKa,UAAYP,EAAQiX,uBAAyBH,IAAI,0BAtH1C3V,aA6HbC,wBAhJA,SAAAC,GAAK,MAAK,CACrB4V,uBAAwB,CACpBvR,MAAO,OACPqR,OAAQ,OA6ID3V,CAAoB8V,ICpFpBW,oLAzDD,IAAA3U,EACiBpD,KAAKZ,MAApBhE,EADFgI,EACEhI,KAAM2S,EADR3K,EACQ2K,KAEd,OAAQ3S,GACJ,IAAK,SACD,OACIsE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACoD,GAAArD,EAAD,CACIkE,QAAU,aACVZ,OACAvD,EAAAC,EAAAC,cAACuE,GAAAxE,EAAD,KACID,EAAAC,EAAAC,cAACkO,GAAAnO,EAAD,OAGJkB,MAAQkN,KAIpB,IAAK,eACD,OACIrO,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACoD,GAAArD,EAAD,CACIkE,QAAU,aACVZ,OACAvD,EAAAC,EAAAC,cAACuE,GAAAxE,EAAD,KACID,EAAAC,EAAAC,cAACyP,GAAA1P,EAAD,OAGJkB,MAAQkN,KAIpB,IAAK,WACD,OACIrO,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACoD,GAAArD,EAAD,CACIkE,QAAU,aACVZ,OACAvD,EAAAC,EAAAC,cAACuE,GAAAxE,EAAD,KACID,EAAAC,EAAAC,cAACmP,GAAApP,EAAD,OAGJkB,MAAQkN,KAIpB,QACI,MAAO,WAhDC1M,kCCkDT2W,GArDY,SAAC5Y,GAAU,IAC1BmO,EAAYnO,EAAZmO,OAER,OACI7N,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMS,WAAS,GAEXV,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,GACXb,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYG,QAAQ,UAAUqO,cAAY,GAA1C,QAEJzO,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,IACXb,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYwO,cAAY,GAAGZ,EAAOjQ,MAGtCoC,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,GACXb,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYG,QAAQ,UAAUqO,cAAY,GAA1C,SAEJzO,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,IACXb,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYgL,UAAW,OAAQwD,cAAY,GACrCZ,EAAOpI,KAAK7B,IAAK,SAAChD,EAAMiD,GAAP,OAAa7D,EAAAC,EAAAC,cAAA,OAAK4D,IAAM,QAAQD,GAAMjD,EAAKZ,EAAAC,EAAAC,cAAA,gBAItEF,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,GACXb,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYG,QAAQ,UAAUqO,cAAY,GAA1C,gBAEJzO,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,IACXb,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAagL,UAAW,OAAQwD,cAAY,GACtCZ,EAAOa,YAAY9K,IAAK,SAAChD,EAAMiD,GAAP,OAAa7D,EAAAC,EAAAC,cAAA,OAAK4D,IAAM,eAAeD,GAAMjD,EAAKZ,EAAAC,EAAAC,cAAA,gBAIpFF,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAAEC,GAAI,GACZb,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYG,QAAQ,UAAUqO,cAAY,GAA1C,UAEJzO,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,IACXb,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAagL,UAAW,OAAQwD,cAAY,GACtCZ,EAAOc,MAAM/K,IAAK,SAAChD,EAAMiD,GAAP,OAAa7D,EAAAC,EAAAC,cAAA,OAAK4D,IAAM,SAASD,GAAMjD,EAAKZ,EAAAC,EAAAC,cAAA,gBAIxEF,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,GACXb,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYG,QAAQ,UAAUqO,cAAY,GAA1C,aAEJzO,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,IACXb,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAagL,UAAW,OAAQwD,cAAY,GACtCZ,EAAOe,SAAShL,IAAK,SAAChD,EAAMiD,GAAP,OAAa7D,EAAAC,EAAAC,cAAA,OAAK4D,IAAM,YAAYD,GAAK7D,EAAAC,EAAAC,cAAA,KAAG2O,KAAMjO,EAAMhB,OAAO,OAAQkP,IAAI,uBAAuBlO,GAASZ,EAAAC,EAAAC,cAAA,kBCXvI0B,wBAlCA,SAAAC,GAAK,MAAK,IAkCVD,CA9BS,SAAClC,GAAU,IACvBgQ,EAAShQ,EAATgQ,IAER,OACI1P,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMS,WAAS,GACXV,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,GACXb,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYG,QAAQ,UAAUqO,cAAY,GAA1C,QAEJzO,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,IACXb,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYwO,cAAY,GAAGiB,EAAI9R,MAGnCoC,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,GACXb,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYG,QAAQ,UAAUqO,cAAY,GAA1C,SAEJzO,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,IACXb,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYgL,UAAW,OAAQwD,cAAY,GAAGiB,EAAIjK,KAAK7B,IAAK,SAAChD,EAAMiD,GAAP,OAAa7D,EAAAC,EAAAC,cAAA,OAAK4D,IAAK,UAAUD,GAAKjD,EAAKZ,EAAAC,EAAAC,cAAA,gBAG3GF,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,GACXb,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYG,QAAQ,UAAUqO,cAAY,GAA1C,YAEJzO,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,IACXb,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYwO,cAAY,GAACzO,EAAAC,EAAAC,cAAA,KAAG2O,KAAOa,EAAId,SAAWhP,OAAO,SAAUkP,IAAI,uBAAwBY,EAAId,eCuBpGhN,wBAlDA,SAAAC,GAAK,MAAK,IAkDVD,CA9CY,SAAClC,GAAU,IAC1B0P,EAAQ1P,EAAR0P,GAER,OACIpP,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMS,WAAS,GACXV,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMS,WAAS,GACXV,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,GACXb,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYG,QAAQ,UAAUqO,cAAY,GAA1C,QAEJzO,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,IACXb,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYwO,cAAY,GAAGW,EAAGxR,MAGlCoC,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,GACXb,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYG,QAAQ,UAAUqO,cAAY,GAA1C,SAEJzO,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,IACXb,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAagL,UAAW,OAAQwD,cAAY,GACtCW,EAAG3J,KAAK7B,IAAK,SAAChD,EAAMiD,GAAP,OAAa7D,EAAAC,EAAAC,cAAA,OAAM4D,IAAM,SAASD,GAAMjD,EAAKZ,EAAAC,EAAAC,cAAA,gBAIpEF,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,GACXb,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYG,QAAQ,UAAUqO,cAAY,GAA1C,YAEJzO,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,IACXb,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAagL,UAAW,OAAQwD,cAAY,GACtCW,EAAGE,QAAQ1L,IAAK,SAAChD,EAAMiD,GAAP,OAAa7D,EAAAC,EAAAC,cAAA,OAAM4D,IAAM,YAAYD,GAAMjD,EAAKZ,EAAAC,EAAAC,cAAA,gBAI1EF,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,GACXb,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYG,QAAQ,UAAUqO,cAAY,GAA1C,YAEJzO,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,IACXb,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAagL,UAAW,OAAQwD,cAAY,GACtCW,EAAGR,SAAShL,IAAK,SAAChD,EAAMiD,GAAP,OAAa7D,EAAAC,EAAAC,cAAA,OAAK4D,IAAM,aAAaD,GAAK7D,EAAAC,EAAAC,cAAA,KAAG2O,KAAMjO,EAAMhB,OAAO,OAAQkP,IAAI,uBAAuBlO,GAASZ,EAAAC,EAAAC,cAAA,oBC6CxIqY,yLA3EPjY,KAAKZ,MAAM8Y,oEAGY,IACf7a,EAAS2C,KAAKZ,MAAd/B,KACR,OACIqC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACuY,GAAD,CAAoB5K,OAASlQ,yDAKZ,IACjBA,EAAS2C,KAAKZ,MAAd/B,KACR,OACIqC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACwY,GAAD,CAAsBtJ,GAAKzR,oDAKf,IACZA,EAAS2C,KAAKZ,MAAd/B,KACR,OACIqC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACyY,GAAD,CAAiBjJ,IAAM/R,iDAO/B,OADkB2C,KAAKZ,MAAf/B,KACKjC,MACT,IAAK,SACD,OAAO4E,KAAKsY,0BAChB,IAAK,eACD,OAAOtY,KAAKuY,uBAChB,IAAK,WACD,OAAOvY,KAAKwY,4BAChB,QACI,MAAO,qCAIT,IAAArZ,EAAAa,KAAAoD,EACiBpD,KAAKZ,MAApBwJ,EADFxF,EACEwF,KAAMvL,EADR+F,EACQ/F,KAEd,OACIqC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC8I,GAAA/I,EAAD,CACIsJ,QAAU,kBAAM9J,EAAKsZ,eACrB7P,KAAMA,GAENlJ,EAAAC,EAAAC,cAACsJ,GAAAvJ,EAAD,KACID,EAAAC,EAAAC,cAAC8Y,GAAD,CACItd,KAAMiC,EAAKjC,KACX2S,KAAM1Q,EAAK0Q,QAGnBrO,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,KACID,EAAAC,EAAAC,cAAC+Y,GAAAhZ,EAAD,CAAmBgL,UAAU,QACvB3K,KAAK4Y,sBAGflZ,EAAAC,EAAAC,cAAC+J,GAAAhK,EAAD,KACID,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAQkE,QAAU,WAAQ1E,EAAKsZ,eAAkBpT,MAAM,UAAUwT,WAAS,GAA1E,mBApEExX,aCKpByX,eAEF,SAAAA,EAAa1Z,GAAO,IAAAD,EAAA,OAAA9D,OAAA4K,EAAA,EAAA5K,CAAA2E,KAAA8Y,IAChB3Z,EAAA9D,OAAA6K,EAAA,EAAA7K,CAAA2E,KAAA3E,OAAA8K,EAAA,EAAA9K,CAAAyd,GAAA1S,KAAApG,KAAMZ,KAeV2Z,qBAAuB,SAACC,GACpB7Z,EAAKC,MAAM6Z,gBAAgBD,IAf3B7Z,EAAK+Z,UAAY,GAFD/Z,4EAKN8P,GAAM,IACRrS,EAAqBoD,KAAKZ,MAA1BxC,iBACR,GAAIqS,EAAK3R,MAAQV,EACboD,KAAKkZ,UAAYjK,OAEjB,GAAIA,EAAKnR,QAAT,KAAAyU,GAAA,EAAAC,GAAA,EAAAC,OAAAvX,EAAA,IACI,QAAAwX,EAAAC,EAAqB1D,EAAKnR,QAA1B8U,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,OAAWP,EAAXU,EAAAnT,MACIS,KAAKmZ,aAAanH,IAF1B,MAAAiB,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,YAAAV,GAAA,MAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,yCAUK1E,GAAM,IAAAjH,EAAA9G,KAAAoD,EACapD,KAAKZ,MAAzBhD,EADOgH,EACPhH,OAAQ8D,EADDkD,EACClD,QAChB,OAAI6N,KAAQ3R,EAEJsD,EAAAC,EAAAC,cAAA,OAAKa,UAAYP,EAAQkZ,UAAY5V,IAAM,YAAYuK,EAAOlK,QAAU,WAAQiD,EAAKiS,qBAAqBhL,KACtGrO,EAAAC,EAAAC,cAAC8Y,GAAD,CACItd,KAAMgB,EAAO2R,GAAM3S,KACnB2S,KAAMA,KAOdrO,EAAAC,EAAAC,cAAA,OAAK4D,IAAK,gBAAgBuK,GAAOA,oCAKnC,IAAAnG,EAAA5H,KAAAuF,EAE4DvF,KAAKZ,MAA/Dc,EAFFqF,EAEErF,QAASzD,EAFX8I,EAEW9I,KAAMG,EAFjB2I,EAEiB3I,iBAAkBI,EAFnCuI,EAEmCvI,aACnCqc,EAHA9T,EAEiDnJ,OAC9BY,GACrBsc,EAAa,GAWjB,OATI1c,GACAoD,KAAKmZ,aAAa1c,GAClB6c,EAAatZ,KAAKkZ,UAAU9b,MAAMkG,IAAK,SAAChD,GAAD,OAAUA,EAAK0H,MAAM,KAAK1H,EAAK0H,MAAM,KAAK/M,OAAQ,MAIzF+E,KAAKkZ,UAAY,GAIjBxZ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CAAOc,UAAYP,EAAQqZ,WAEvB7Z,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYG,QAAQ,UAAUqO,cAAY,GACtCzO,EAAAC,EAAAC,cAAA,uBAEJF,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAaG,QAAQ,UAAUqO,cAAY,GACtCnO,KAAKkZ,UAAU5b,KAGpBoC,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYG,QAAQ,UAAUqO,cAAY,GACtCzO,EAAAC,EAAAC,cAAA,uBAEJF,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAaG,QAAQ,UAAUqO,cAAY,GACtCnO,KAAKkZ,UAAUzF,UAGpB/T,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYG,QAAQ,UAAUqO,cAAY,GACtCzO,EAAAC,EAAAC,cAAA,yBAEJF,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAaG,QAAQ,UAAUqO,cAAY,GACtCnO,KAAKkZ,UAAUM,eAGpB9Z,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYG,QAAQ,UAAUqO,cAAY,EAAC1N,UAAU,SACjDf,EAAAC,EAAAC,cAAA,2BAEJF,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAaG,QAAQ,UAAUqO,cAAY,GACtCnO,KAAKkZ,UAAU3b,UAGpBmC,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYG,QAAQ,UAAUqO,cAAY,GACtCzO,EAAAC,EAAAC,cAAA,oBAEJF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKa,UAAU,iBACd6Y,EAAWhW,IAAK,SAAChD,GAAD,OAAUsH,EAAK6R,YAAYnZ,OAIhDZ,EAAAC,EAAAC,cAAA,OAAKa,UAAU,UACbzD,EACE0C,EAAAC,EAAAC,cAAC8Z,GAAD,CACI9Q,KAAM5I,KAAKZ,MAAMnC,gBACjBib,gBAAiBlY,KAAKZ,MAAM8Y,gBAC5B7a,KAAMgc,IACL,YAvGFhY,aA+GZC,wBAzHA,SAAAC,GAAK,MAAK,CACrBgY,UAAW,CACP5V,UAAW,OACXnC,QAA6B,EAApBD,EAAMlB,QAAQoB,MAE3B2X,UAAW,CACPO,aAAcpY,EAAMlB,QAAQoB,QAmHrBH,CAAoBwX,yBCvG7Bc,eAEF,SAAAA,EAAaxa,GAAO,IAAAD,EAAA,OAAA9D,OAAA4K,EAAA,EAAA5K,CAAA2E,KAAA4Z,IAChBza,EAAA9D,OAAA6K,EAAA,EAAA7K,CAAA2E,KAAA3E,OAAA8K,EAAA,EAAA9K,CAAAue,GAAAxT,KAAApG,KAAMZ,KAEDrE,MAAQ,CACT8e,WAAY,IAJA1a,4EASND,GAAO,IAAAkE,EACWpD,KAAKZ,MAAzBqI,EADSrE,EACTqE,MAAO7F,EADEwB,EACFxB,SAETrC,EAAQL,EAAMI,OAAOC,MAC3BS,KAAK4G,SAAS,CACViT,WAAYta,IAEhBqC,EAAS8F,UAAQC,OAAOF,EAAOlI,4CAGlBua,GAGb,IAHwB,IAChB1d,EAAW4D,KAAKZ,MAAhBhD,OACF2d,EAAQ,GAFUC,EAGL3e,OAAOsb,KAAKva,GAA/B6d,EAAA,EAAAA,EAAAD,EAAA/e,OAAAgf,IAAwC,CAAnC,IAAMlM,EAAIiM,EAAAC,GACP7d,EAAO2R,GAAM3S,OAAS0e,GACtBC,EAAMhW,KAAKgK,GAEnB,OAAOgM,mCAGD,IAAAjT,EAAA9G,KAAAuF,EACsBvF,KAAKZ,MAAzBc,EADFqF,EACErF,QAAS9D,EADXmJ,EACWnJ,OAEjB,OACIsD,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,CACIua,QAAM,EACNnZ,OAAO,SACPxB,MAAOS,KAAKjF,MAAM8e,WAClBpZ,UAAWP,EAAQia,UACnBC,YAAa,CACTC,UAAW,CAAE5Z,UAAWP,EAAQoa,WAEpClZ,SAAW,SAACmZ,GAAD,OAAOzT,EAAK7H,aAAasb,KAElCne,EAAOJ,QAAQsH,IAAK,SAAClG,EAAMmG,GAAP,OAClB7D,EAAAC,EAAAC,cAAC4a,GAAA7a,EAAD,CAAU6D,IAAMpG,EAAM2Q,KAAOxO,MAAQnC,EAAM2Q,KAAOtN,UAAYP,EAAQoa,UAClE5a,EAAAC,EAAAC,cAACsE,GAAD,CACIjB,OACAvD,EAAAC,EAAAC,cAACuE,GAAAxE,EAAD,KACID,EAAAC,EAAAC,cAACkO,GAAAnO,EAAD,OAGJkB,MAAQzD,EAAM2Q,UAIxB3R,EAAOH,SAASqH,IAAK,SAACwL,EAAGvL,GAAJ,OACnB7D,EAAAC,EAAAC,cAAC4a,GAAA7a,EAAD,CAAU6D,IAAMsL,EAAGf,KAAOxO,MAAQuP,EAAGf,KAAOtN,UAAYP,EAAQoa,UAC5D5a,EAAAC,EAAAC,cAACsE,GAAD,CACIjB,OACAvD,EAAAC,EAAAC,cAACuE,GAAAxE,EAAD,KACID,EAAAC,EAAAC,cAACmP,GAAApP,EAAD,OAGJkB,MAAQiO,EAAGf,UAIrB3R,EAAOF,cAAcoH,IAAK,SAACwL,EAAGvL,GAAJ,OACxB7D,EAAAC,EAAAC,cAAC4a,GAAA7a,EAAD,CAAU6D,IAAMsL,EAAGf,KAAOxO,MAAQuP,EAAGf,KAAOtN,UAAYP,EAAQoa,UAC5D5a,EAAAC,EAAAC,cAACsE,GAAD,CACIjB,OACAvD,EAAAC,EAAAC,cAACuE,GAAAxE,EAAD,KACID,EAAAC,EAAAC,cAACyP,GAAA1P,EAAD,OAGJkB,MAAQiO,EAAGf,kBA7EX1M,aA4FbC,wBAxGA,SAACC,GAAD,MAAY,CACvB4Y,UAAW,CACPvU,MAAO,QAEX0U,SAAU,CACN1U,MAAO,OACPpE,QAASD,EAAMlB,QAAQoB,QAkGhBH,CAAoBsY,ICjF7Ba,wLAEYhe,GAAM,IAAA2G,EAC6BpD,KAAKZ,MAA1C8K,EADQ9G,EACR8G,aAAcR,EADNtG,EACMsG,SAAU9H,EADhBwB,EACgBxB,SAChCpE,QAAQC,IAAIhB,GACZyN,EAAaR,EAAUjN,GACvBmF,EAAS8F,UAAQyC,MAAM,uDAGZ,IAAA5E,EACkBvF,KAAKZ,MAA1Bsb,EADGnV,EACHmV,QACR9Y,EAFW2D,EACK3D,UACP8F,UAAQyC,MAAM,iBACvBuQ,qCAGK,IAAAvb,EAAAa,KAAA2a,EAC+D3a,KAAKZ,MAAjEwJ,EADH+R,EACG/R,KAAM1I,EADTya,EACSza,QAAS0B,EADlB+Y,EACkB/Y,SAAUpD,EAD5Bmc,EAC4Bnc,aAAckL,EAD1CiR,EAC0CjR,SAAUtN,EADpDue,EACoDve,OAKnDyB,GADO,IAAI+c,MACMC,cAEvB,OACInb,EAAAC,EAAAC,cAAC8I,GAAA/I,EAAD,CAAQiJ,KAAMA,EAAMC,OAAO,QAAQI,QAAU,kBAAM9J,EAAKsZ,gBACpD/Y,EAAAC,EAAAC,cAACyK,EAAA,KAAD,CACI5C,MAAM,eACN6C,SAAU,SAAC7N,GAAD,OAAU0C,EAAK+K,aAAazN,KAEtCiD,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,KACID,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMS,WAAS,EAACK,UAAYP,EAAQ4a,UAChCpb,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,GAAIE,UAAYP,EAAQsK,UACnC9K,EAAAC,EAAAC,cAACyK,EAAA,QAAD,CACI5J,UAAYP,EAAQwK,WACpBC,UAAWC,IACXnD,MAAM,4BACN7G,GAAG,4BACHC,MAAM,mBAIdnB,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,GAAIE,UAAYP,EAAQsK,UACnC9K,EAAAC,EAAAC,cAACyK,EAAA,QAAD,CACI5J,UAAYP,EAAQwK,WACpBC,UAAWC,IACXnD,MAAM,uBACN7G,GAAG,uBACHC,MAAM,UACNgK,WAAS,EACTC,QAAQ,IACRhL,QAAQ,cAIhBJ,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,GAAIE,UAAYP,EAAQsK,UACnC9K,EAAAC,EAAAC,cAACyK,EAAA,QAAD,CACIM,UAAWC,IACXxP,KAAK,iBACLqM,MAAM,yBACN7G,GAAG,yBACHC,MAAM,YACNka,aAAcld,EAAUmd,UAAU,EAAGnd,EAAU5C,OAAO,MAK9DyE,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACI0F,MAAM,UACNX,aAAW,MACXG,KAAK,QACLhB,QAAS,kBAAMjC,EAAS8F,UAAQ3D,KAAK,sBAzDpD,OA2DerE,EAAAC,EAAAC,cAACqL,GAAAtL,EAAD,MANJ,UAUJD,EAAAC,EAAAC,cAAA,MAAIa,UAAYP,EAAQwK,YAElBlM,EAAapC,OAAOkH,IAAK,SAAClG,EAAOmG,GAAR,OACvB7D,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMS,WAAS,EAACoD,IAAK,YAAYD,GAC7B7D,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,GAAIE,UAAYP,EAAQsK,UACnC9K,EAAAC,EAAAC,cAACqb,GAAD,CACI7e,OAASA,EACTqL,MAAK,uBAAAyT,OAAyB3X,EAAzB,KACL3B,SAAWA,UAQnClC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACI0F,MAAM,UACNX,aAAW,MACXG,KAAK,QACLhB,QAAS,kBAAMjC,EAAS8F,UAAQ3D,KAAK,uBApFnD,OAsFcrE,EAAAC,EAAAC,cAACqL,GAAAtL,EAAD,MANJ,WAUJD,EAAAC,EAAAC,cAAA,MAAIa,UAAYP,EAAQib,aAElB3c,EAAaV,QAAQwF,IAAK,SAAC0O,EAAQzO,GAAT,OACxB7D,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMS,WAAS,EAACoD,IAAK,aAAaD,GAC9B7D,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,GAAIE,UAAYP,EAAQsK,UAEnC9K,EAAAC,EAAAC,cAAC6K,GAAD,CACIpE,WAAS,EACTwB,SAAS,cACTJ,MAAK,wBAAAyT,OAA2B3X,EAA3B,KACLxH,UAAYkJ,KAAKqE,QAAQI,GACzB9H,SAAWA,UAQnClC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACI0F,MAAM,UACNX,aAAW,MACXG,KAAK,QACLhB,QAAS,kBAAMjC,EAAS8F,UAAQ3D,KAAK,8BAnHnD,OAqHcrE,EAAAC,EAAAC,cAACqL,GAAAtL,EAAD,MANJ,mBAUJD,EAAAC,EAAAC,cAAA,MAAIa,UAAYP,EAAQib,aAElB3c,EAAaT,eAAeuF,IAAK,SAAC0O,EAAQzO,GAAT,OAC/B7D,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMS,WAAS,EAACoD,IAAK,aAAaD,GAC9B7D,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,GAAIE,UAAYP,EAAQsK,UACnC9K,EAAAC,EAAAC,cAACqb,GAAD,CACI7e,OAASA,EACTqL,MAAK,+BAAAyT,OAAkC3X,EAAlC,KACL3B,SAAWA,cAa/ClC,EAAAC,EAAAC,cAAC+J,GAAAhK,EAAD,CAAgBc,UAAYP,EAAQkb,YAChC1b,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAQvE,KAAK,SAASiK,MAAM,UAAUvF,QAAQ,aAA9C,wCAjKEuB,aA4KpBga,GAAW/Z,qBAjMF,SAAAC,GAAK,MAAK,CACrB6Z,WAAY,CACR5Z,QAA4B,EAAnBD,EAAMlB,QAAQoB,MAE3BqZ,SAAU,CACNtZ,QAA4B,EAAnBD,EAAMlB,QAAQoB,MAE3B+I,SAAU,CACNhJ,QAASD,EAAMlB,QAAQoB,MAE3BiJ,WAAY,CACR9E,MAAO,QAEXuV,YAAa,CACTvV,MAAO,OAEX0V,aAAc,CACV1V,MAAO,SAgLEtE,CAAqBmZ,IAEvBtY,qBAAS,SAAAgJ,GAAA,MAAuB,CAAC3M,aAAxB2M,EAAE3M,eAAX2D,CAAmDkZ,yBChM5DE,8MACFxgB,MAAQ,CACJ6N,MAAM,oFAIN5I,KAAK4G,SAAS,CAAEgC,MAAM,0CAItB5I,KAAK4G,SAAS,CAAEgC,MAAM,2CAGV,IAAAxF,EACwBpD,KAAKZ,OACzCoc,EAFYpY,EACJoY,YADIpY,EACQzG,aAEpBqD,KAAKyY,+CAGC,IAAA3R,EAAA9G,KAEEE,EAAYF,KAAKZ,MAAjBc,QAER,OACIR,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAACoD,GAAArD,EAAD,CACIkF,KAAK,QACLpE,UAAYP,EAAQsb,WACpB3X,QAAU,kBAAMiD,EAAK2U,mBACrBpW,MAAM,YACNpC,OACAvD,EAAAC,EAAAC,cAACuE,GAAAxE,EAAD,KACID,EAAAC,EAAAC,cAAC8b,GAAA/b,EAAD,OAGJkB,MAAM,iBAEVnB,EAAAC,EAAAC,cAAC8I,GAAA/I,EAAD,CACIiJ,KAAO5I,KAAKjF,MAAM6N,KAClBK,QAAU,kBAAMnC,EAAK2R,gBAErB/Y,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,gEAGAD,EAAAC,EAAAC,cAAC+J,GAAAhK,EAAD,KACID,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACI0F,MAAM,UACNvF,QAAQ,YACR+D,QAAU,kBAAMiD,EAAK6U,iBAHzB,UAOAjc,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACI0F,MAAM,YACNvF,QAAQ,YACR+D,QAAU,kBAAMiD,EAAK2R,gBAHzB,oBApDMpX,aAuEfC,wBA7EA,SAACC,GAAD,MAAY,CACvBia,WAAY,CACRzW,WAA+B,EAAnBxD,EAAMlB,QAAQoB,QA2EnBH,CAAoBia,ICzD7B5Z,GAAqB,CACvBia,kBZQ6B,SAACjf,GAAD,MAAkB,CAC/CvB,KAAM,sBACNG,QAAS,CAAEoB,iBYTXkf,UC7BG,SAAoBnS,GACvB,OAAO,SAAU9H,GAGb,OAFApE,QAAQC,IAAI,0BACZmE,EAAS+N,MACF9N,MAAM,6BAA6B,CACtCkF,OAAQ,OACRC,QAAS,CACLC,OAAU,mBACVC,eAAgB,oBAEpBC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CAAEoC,eAEtB5H,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAE,GAGF,OAFAxE,QAAQC,IAAIuE,GACZJ,EAASgO,GAAiB5N,IACnBA,EAAKvF,OAEfwF,MAAM,SAAArH,GAAK,OAAIgH,EAASiO,GAAejV,QDWhDkhB,QCPG,SAAkBpS,EAAUjN,GAC/B,OAAO,SAAUmF,GAGb,OAFApE,QAAQC,IAAI,wBACZmE,EAASkO,MACFjO,MAAM,iCAAiC,CAC1CkF,OAAQ,OACRC,QAAS,CACLC,OAAU,mBACVC,eAAgB,oBAEpBC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CAAEoC,WAAUjN,WAEhCqF,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAE,GAGF,OAFAxE,QAAQC,IAAIuE,GACZJ,EAASmO,GAAe/N,IACjBA,EAAKvF,OAEfwF,MAAM,SAAArH,GAAK,OAAIgH,EAASoO,GAAapV,QDX9C4gB,WCeG,SAAqB9R,GACxB,OAAO,SAAU9H,GAGb,OAFApE,QAAQC,IAAI,2BACZmE,EAASqO,MACFpO,MAAM,oCAAoC,CAC7CkF,OAAQ,OACRC,QAAS,CACLC,OAAU,mBACVC,eAAgB,oBAEpBC,KAAM,OACNC,KAAMC,KAAKC,UAAU,CAAEoC,eAEtB5H,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAE,GAGF,OAFAxE,QAAQC,IAAIuE,GACZJ,EAASsO,GAAkBlO,IACpBA,EAAKvF,OAEfwF,MAAM,SAAArH,GAAK,OAAIgH,EAASuO,GAAgBvV,QDjCjD8a,gBZS2B,SAAC9Y,GAAD,MAAuB,CAClDxB,KAAM,oBACNG,QAAS,CAAEqB,sBYVX+Y,eZa0B,iBAAO,CACjCva,KAAM,oBYbN6d,gBZgB2B,SAACjc,GAAD,MAAmB,CAC9C5B,KAAM,oBACNG,QAAS,CAAEyB,kBYjBXkb,gBZoB2B,SAAC6D,GAAD,MAAkB,CAC7C3gB,KAAM,sBYpBN4gB,kBZuB6B,iBAAO,CACpC5gB,KAAM,yBYvBNiS,YAAa4O,GACbC,eZyB0B,iBAAO,CACjC9gB,KAAM,sBYQJ+gB,+LAGE,IAAMzS,EAAW1J,KAAKZ,MAAM7B,SAAS0G,OAAO+I,OAAO,GAC/CtD,IAAa1J,KAAKZ,MAAMzC,cACxBqD,KAAKZ,MAAMyc,UAAUnS,GACrB1J,KAAKZ,MAAMwc,kBAAkBlS,IAEjClM,QAAQC,IAAIuC,KAAKZ,OAG2B,IAAxCY,KAAKZ,MAAMgd,UAAUpgB,QAAQf,QAC7B+E,KAAKZ,MAAMiO,2DAIf,IAAM3D,EAAW1J,KAAKZ,MAAM7B,SAAS0G,OAAO+I,OAAO,GAC/CtD,IAAa1J,KAAKZ,MAAMzC,aACxBqD,KAAKZ,MAAMwc,kBAAkBlS,kDAKjC1J,KAAKZ,MAAM8c,kDAGN,IAGDxS,EAHCvK,EAAAa,KAAAoD,EACoFpD,KAAKZ,MAAtFc,EADHkD,EACGlD,QAASvD,EADZyG,EACYzG,YAAaO,EADzBkG,EACyBlG,gBAAiB8e,EAD1C5Y,EAC0C4Y,kBAAmBI,EAD7DhZ,EAC6DgZ,UAAWN,EADxE1Y,EACwE0Y,QAO7E,OAJInf,IACA+M,EAtCU,SAACA,GACnB,IAAM1B,EAAQ0B,EAAS1B,MAAM,KACvB+F,EAAO/F,EAAMA,EAAM/M,OAAO,GAEhC,MAAO,CADKyO,EAAS2S,QAAQtO,EAAM,IACtBA,GAkCMuO,CAAc3f,IAIzB+C,EAAAC,EAAAC,cAAA,OAAKa,UAAYP,EAAQqc,mBAErB7c,EAAAC,EAAAC,cAAC4c,GAAD,CACI5T,KAAO1L,EACPgN,aAAe4R,EACfpB,OAASsB,EACT5f,OAASggB,EACT1S,SAAW/M,IAGf+C,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMS,WAAS,GACXV,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMS,WAAS,EAACK,UAAYP,EAAQuc,aAChC/c,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,GACT5D,EACF+C,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMS,WAAS,GACXV,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACG,UAAYP,EAAQnE,WAC3B2D,EAAAC,EAAAC,cAACoD,GAAArD,EAAD,CACIkE,QAAU,WAAQ1E,EAAKC,MAAM0E,QAAQC,KAAK,CACtCC,SAAU,cACVC,OAAQyF,EAAS,MAErB7I,MAAQ6I,EAAS,MAEzBhK,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,GACNZ,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYG,QAAQ,YAAYqO,cAAY,EAAC1N,UAAYP,EAAQuJ,UAC3DC,EAAS,MAIrB,IAGNhK,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,EAAGE,UAAYP,EAAQwc,aAClChd,EAAAC,EAAAC,cAACoD,GAAArD,EAAD,CACIkF,KAAK,QACLpE,UAAYP,EAAQ4b,QACpBjY,QAAU,WAAQ1E,EAAKC,MAAM4c,qBAC7B3W,MAAM,UACNpC,OACAvD,EAAAC,EAAAC,cAACuE,GAAAxE,EAAD,KACID,EAAAC,EAAAC,cAACqL,GAAAtL,EAAD,OAGJkB,MAAM,cAEVnB,EAAAC,EAAAC,cAAC+c,GAAD,CACIhgB,YAAcA,EACd6e,WAAaxb,KAAKZ,MAAMoc,eAOpC9b,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMS,WAAS,GACXV,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,IACPb,EAAAC,EAAAC,cAACgd,GAAD,CACIngB,KAAMuD,KAAKZ,MAAM3C,KAAOuD,KAAKZ,MAAM3C,KAAO,GAC1CiZ,gBAAiB1V,KAAKZ,MAAMsW,gBAC5B9Y,iBAAkBoD,KAAKZ,MAAMxC,iBAC7BE,eAAgBkD,KAAKZ,MAAMtC,kBAGvC4C,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,GAEPb,EAAAC,EAAAC,cAACid,GAAD,CACIpgB,KAAMuD,KAAKZ,MAAM3C,KAAOuD,KAAKZ,MAAM3C,KAAO,GAC1CiZ,gBAAiB1V,KAAKZ,MAAMsW,gBAC5B9Y,iBAAkBoD,KAAKZ,MAAMxC,iBAC7BC,cAAemD,KAAKZ,MAAMvC,cAC1BC,eAAgBkD,KAAKZ,MAAMtC,eAC3B6Y,eAAgB3V,KAAKZ,MAAMuW,kBAGvCjW,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMW,MAAI,EAACC,GAAI,GACTP,KAAKZ,MAAMxC,iBACT8C,EAAAC,EAAAC,cAACkd,GAAD,CACIrgB,KAAMuD,KAAKZ,MAAM3C,KAAOuD,KAAKZ,MAAM3C,KAAO,GAC1CL,OAAQ4D,KAAKZ,MAAMhD,OACnBQ,iBAAkBoD,KAAKZ,MAAMxC,iBAC7BI,aAAcgD,KAAKZ,MAAMpC,aACzBF,eAAgBkD,KAAKZ,MAAMtC,eAC3BG,gBAAiB+C,KAAKZ,MAAMnC,gBAC5Bib,gBAAiBlY,KAAKZ,MAAM8Y,gBAC5Be,gBAAiBjZ,KAAKZ,MAAM6Z,kBAElC,cAzHP5X,aAmIjB0b,GAAWzb,qBAlKF,SAAAC,GAAK,MAAK,CACrBgb,kBAAmB,CACf7a,UAAW,IAEf+a,YAAa,CACTO,aAAiC,EAAnBzb,EAAMlB,QAAQoB,KAC5BkC,UAAW,QAEf5H,UAAW,CACP4d,aAAiC,EAAnBpY,EAAMlB,QAAQoB,MAEhCgI,SAAU,CACNmF,WAAW,EACXqO,aAAc,UAElBnB,QAAS,CACL/W,WAAY,IAEhB2X,YAAa,CACTM,aAAczb,EAAMlB,QAAQoB,KAC5BkC,UAAW,WA8IFrC,CAAoB6a,IAEtBha,qBAhMS,SAACpH,GAAD,MAAY,CAChC2B,QAAS3B,EAAMqD,KAAK1B,QACpBD,KAAM1B,EAAMqD,KAAK3B,KACjBE,YAAa5B,EAAMqD,KAAKzB,YACxBP,OAAQrB,EAAMqD,KAAKhC,OACnBggB,UAAWrhB,EAAMqB,OACjBQ,iBAAkB7B,EAAMqD,KAAKxB,iBAC7BC,cAAe9B,EAAMqD,KAAKvB,cAC1BC,eAAgB/B,EAAMqD,KAAKtB,eAC3BE,aAAcjC,EAAMqD,KAAKpB,aACzBC,gBAAiBlC,EAAMqD,KAAKnB,gBAC5BC,gBAAiBnC,EAAMqD,KAAKlB,kBAqLQyE,GAAzBQ,CAA6C4a,wDEpMtDG,oLAGQ,IAAA/d,EAAAa,KACN,OACIN,EAAAC,EAAAC,cAACud,GAAAxd,EAAD,KACID,EAAAC,EAAAC,cAACwd,GAAAzd,EAAD,KACID,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAY0F,MAAM,UAAUsF,UAAU,KAAK7K,QAAQ,WAAWW,UAAYT,KAAKZ,MAAMc,QAAQmd,OAA7F,UAIA3d,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAQ0F,MAAM,UAAUxB,QAAU,WAAQ1E,EAAKC,MAAM0E,QAAQC,KAAK,OAAlE,SAGArE,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAQ0F,MAAM,UAAUxB,QAAU,WAAQ1E,EAAKC,MAAM0E,QAAQC,KAAK,cAAlE,UAGArE,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAQ0F,MAAM,UAAUxB,QAAU,WAAQ1E,EAAKC,MAAM0E,QAAQC,KAAK,cAAlE,mBAjBD1C,aA0Bbic,GAAOhc,qBAhCE,SAACC,GAAD,MAAY,CACvB8b,MAAO,CACHxX,YAAkC,EAArBtE,EAAMlB,QAAQoB,QA8BtBH,CAAoB4b,IAElBK,gBAAWD,8CCpBpB/b,GAAQic,yBAAe,CACzBC,QAAS,CACPC,QAAShN,KACTiN,UAAWC,QAwCFC,oLA/BX,OACEne,EAAAC,EAAAC,cAACke,EAAA,SAAD,CAAUrf,MAAOA,GACfiB,EAAAC,EAAAC,cAACme,GAAApe,EAAD,MACAD,EAAAC,EAAAC,cAACoe,EAAA,iBAAD,CAAkBzc,MAAOA,IACvB7B,EAAAC,EAAAC,cAAA,OAAKa,UAAU,OACbf,EAAAC,EAAAC,cAAA,UAAQa,UAAU,cAChBf,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAYgL,UAAU,KAAK7K,QAAQ,YAAnC,WAGFJ,EAAAC,EAAAC,cAACqe,EAAA,EAAD,KACEve,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAACse,GAAD,MAEAxe,EAAAC,EAAAC,cAACue,EAAA,EAAD,KACEze,EAAAC,EAAAC,cAACwe,EAAA,EAAD,CAAOC,OAAK,EAACpZ,KAAK,IAAI0F,UAAYW,KAClC5L,EAAAC,EAAAC,cAACwe,EAAA,EAAD,CAAOnZ,KAAK,UAAU0F,UAAYzI,IAClCxC,EAAAC,EAAAC,cAACwe,EAAA,EAAD,CAAOnZ,KAAK,aAAa0F,UAAYoC,KACrCrN,EAAAC,EAAAC,cAACwe,EAAA,EAAD,CAAOnZ,KAAK,UAAU0F,UAAY4E,KAClC7P,EAAAC,EAAAC,cAACwe,EAAA,EAAD,CAAOnZ,KAAK,QAAQ0F,UAAYwR,kBAvBhC9a,aCnBEid,QACW,cAA7BC,OAAOhhB,SAASihB,UAEe,UAA7BD,OAAOhhB,SAASihB,UAEhBD,OAAOhhB,SAASihB,SAASC,MACvB,2DCZNC,IAASC,OAAOjf,EAAAC,EAAAC,cAACgf,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnd,KAAK,SAAAod,GACjCA,EAAaC","file":"static/js/main.332ec46b.chunk.js","sourcesContent":["const initialState = {\n    provitDir: \"\",\n    loading: false,\n    error: null,\n    changed: false\n}\n\nconst ConfigReducer = ( state = initialState, action) => {\n    switch (action.type) {\n        case 'FETCH_CONFIG_BEGIN':\n            return {\n                ...state,\n                loading: true,\n                error: null\n            }\n        case 'FETCH_CONFIG_SUCCESS':\n            return {\n                ...state,\n                loading: false,\n                provitDir: action.payload.config.provit_dir\n            }\n        case 'FETCH_CONFIG_ERROR':\n            return {\n                ...state,\n                loading: false,\n                provitDir: \"\",\n                error: action.payload.error\n            }\n        case 'UPDATE_PROVIT_DIR':\n            return {\n                ...state,\n                changed: true,\n                provitDir: action.payload.provitDir\n            }\n        default:\n            return state\n    }\n}\n\nexport default ConfigReducer","const initialState = {\n    loading: false,\n    error: null,\n    directories: []\n}\n\nconst HomeReducer = (state=initialState, action) => {\n    switch (action.type) {\n        case 'FETCH_DIRECTORIES_BEGIN':\n            return {\n                ...state,\n                loading: true,\n                error: null,\n                directories: []\n            }\n        case 'FETCH_DIRECTORIES_SUCCESS':\n            return {\n                ...state,\n                loading: false,\n                error: null, \n                directories: action.payload.directories\n            }\n        case 'FETCH_DIRECTORIES_ERROR':\n            return {\n                ...state,\n                loading: false,\n                error: action.payload.error,\n                directories: []\n            }\n        case 'REMOVE_DIRECTORIES_BEGIN':\n            return {\n                ...state,\n                loading: true\n            }\n        case 'REMOVE_DIRECTORIES_SUCCESS':\n            return {\n                ...state,\n                loading: false,\n                directories: action.payload.directories\n            }\n        case 'REMOVE_DIRECTORIES_ERROR':\n            return {\n                ...state,\n                loading: false,\n                error: action.payload.error,\n                directories: []\n            }\n        case 'ADD_DIRECTORY_BEGIN':\n            return {\n                ...state,\n                loading: true,\n            }\n        case 'ADD_DIRECTORY_SUCCESS':\n            return {\n                ...state,\n                loading: false,\n                directories: action.payload.directories\n            }\n        case 'ADD_DIRECTORY_ERROR':\n            return {\n                ...state,\n                loading: false,\n                error: action.payload.error,\n                directories: []\n            }\n        default:\n            return state\n    }\n} \n\nexport default HomeReducer","const initialState = {\n    currentDirectory: null,\n    fileList: [],\n    loading: false,\n    error: null,\n}\n\nconst DirectoryReducer = (state=initialState, action) => {\n    switch (action.type) {\n        case 'FETCH_FILE_LIST_BEGIN':\n            return {\n                ...state,\n                loading: true,\n                error: null\n            }\n        case 'FETCH_FILE_LIST_SUCCESS':\n            return {\n                ...state,\n                loading: false,\n                fileList: action.payload.fileList\n            }\n        case 'FETCH_FILE_LIST_ERROR':\n            return {\n                ...state,\n                loading: false,\n                error: action.payload.error,\n                fileList: []\n            }\n        case 'CHANGE_CURRENT_DIRECTORY':\n            return {\n                ...state,\n                currentDirectory: action.payload.directory\n            }\n        default:\n            return state\n    }\n}\n\nexport default DirectoryReducer","const initialState = {\n    persons: [],\n    software: [],\n    organizations: [],\n    loading: false,\n    error: null\n}\n\nconst AgentsReducer = (state=initialState, action) => {\n    switch (action.type) {\n        case 'FETCH_AGENTS_BEGIN':\n            return {\n                ...state, \n                loading: true,\n                error: null,\n            }\n        case 'FETCH_AGENTS_SUCCESS':\n            return {\n                ...state,\n                loading: false,\n                error: null,\n                persons: action.payload.agents.Person,\n                software: action.payload.agents.Software,\n                organizations: action.payload.agents.Organization\n            }\n        case 'FETCH_AGENTS_ERROR':\n            return {\n                ...state,\n                loading: false,\n                error: action.payload.error\n            }\n        default:\n            return state\n    }\n}\n\nexport default AgentsReducer","const initalState = {\n    prov: {},\n    agents: [],\n    hasProv: false,\n    currentFile: \"\",\n    currentProvEvent: \"\",\n    loading: false,\n    error: null,\n    updateNetwork: false,\n    rebuildNetwork: false,\n    rebuildTimeline: false,\n    currentAgent: \"\",\n    showAgentDialog: false,\n    showAddProvForm: false\n}\n\nconst FileReducer = (state=initalState, action) => {\n    switch (action.type) {\n        case 'FETCH_PROV_BEGIN':\n            return {\n                ...state,\n                prov: {},\n                agent: [],\n                currentFile: \"\",\n                currentProvEvent: \"\",\n                currentAgent: \"\",\n                showAgentDialog: false,\n                loading: true,\n                error: null\n            }\n        case 'FETCH_PROV_SUCCESS':\n            return {\n                ...state,\n                hasProv: action.payload.data.hasProv,\n                prov: action.payload.data.prov,\n                agents: action.payload.data.agents,\n                currentProvEvent: action.payload.data.prov.uri,\n                loading: false,\n                updateNetwork: true\n            }\n        case 'FETCH_PROV_ERROR':\n            return {\n                ...state,\n                loading: false,\n                error: action.payload.error\n            }\n        case 'ADD_PROV_BEGIN': \n            return {\n                showAddProvForm: false,\n                prov: {},\n                agent: [],\n                currentFile: \"\",\n                currentProvEvent: \"\",\n                currentAgent: \"\",\n                showAgentDialog: false,                \n                loading: true,\n                error: null\n            }\n        case 'ADD_PROV_SUCCESS':\n            return {\n                ...state,\n                loading: false,\n                hasProv: action.payload.data.hasProv,\n                prov: action.payload.data.prov,\n                currentFile: action.payload.data.prov.location,\n                agents: action.payload.data.agents,\n                currentProvEvent: action.payload.data.prov.uri,\n                updateNetwork: true,\n                rebuildNetwork: true            \n            }\n        case 'REMOVE_PROV_BEGIN':\n            return {\n                showAddProvForm: false,\n                prov: {},\n                agent: [],\n                //currentFile: \"\",\n                currentProvEvent: \"\",\n                currentAgent: \"\",\n                showAgentDialog: false,                \n                loading: true,\n                error: null,\n            }        \n        case 'REMOVE_PROV_SUCCESS':\n            console.log(action.payload)\n            return {\n                ...state,\n                loading: false,\n                hasProv: action.payload.data.hasProv,\n                prov: action.payload.data.prov,\n                //currentFile: \"\",\n                agents: action.payload.data.agents,\n                currentProvEvent: \"\",\n                updateNetwork: true,\n                rebuildNetwork: true,             \n            }        \n        case 'CHANGE_CURRENT_FILE':\n            return {\n                ...state,\n                currentFile: action.payload.currentFile\n            }\n        case 'CHANGE_PROV_EVENT':\n            return {\n                ...state,\n                currentProvEvent: action.payload.currentProvEvent\n            }\n        case 'NETWORK_UPDATED':\n            return {\n                ...state,\n                updateNetwork: false,\n                rebuildNetwork: false\n            }\n        case 'SET_CURRENT_AGENT':\n            return {\n                ...state,\n                currentAgent: action.payload.currentAgent,\n                showAgentDialog: true\n            }\n        case 'HIDE_AGENT_DIALOG':\n            return {\n                ...state,\n                showAgentDialog: false\n            }   \n        case 'TOGGLE_ADD_PROV_FORM':\n            return {\n                ...state,\n                showAddProvForm: !state.showAddProvForm\n            }\n        case 'RESET_FILE_STATE':\n            return initalState\n        default:\n            return state\n    }\n}\n\nexport default FileReducer","const AddProvFormReducer = {\n    activitySlug: '',\n    comment: '',\n    agents: [''],\n    timestamp: '',\n    sources: [],\n    primarySources: []\n}\n\nexport default AddProvFormReducer","const AddDirectoryFormReducer = {\n    directory: '',\n    comment: ''\n}\n\nexport default AddDirectoryFormReducer","import {createStore, combineReducers, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\n\nimport ConfigReducer from './config/reducers'\nimport HomeReducer from './home/reducers'\nimport DirectoryReducer from './directory/reducers'\nimport AgentsReducer from './agents/reducers'\nimport FileReducer from './file/reducers'\n\nimport { createForms } from 'react-redux-form'\nimport AddProvFormReducer from './forms/reducers/AddProvFormReducer'\nimport AddProjectDirectoryFormReducer from './forms/reducers/AddProjectDirectoryFormReducer'\n\nconst reducers = combineReducers({\n    home: HomeReducer,\n    config: ConfigReducer,\n    directory: DirectoryReducer,\n    agents: AgentsReducer,\n    file: FileReducer,\n    ...createForms({\n        addProjectDirectory: AddProjectDirectoryFormReducer,\n        addProvEvent: AddProvFormReducer,\n        })\n    })\n\nconst store = createStore(\n    reducers,\n    applyMiddleware(thunk)\n)\n\nexport default store","export const fetchConfigBegin = () => ({\n    type: 'FETCH_CONFIG_BEGIN'\n})\n\nexport const fetchConfigSuccess = (config) => ({\n    type: 'FETCH_CONFIG_SUCCESS',\n    payload: { config }\n})\n\nexport const fetchConfigError = (error) => ({\n    type: 'FETCH_CONFIG_ERROR',\n    payload: { error }\n})\n\nexport const updateProvitDir = (provitDir) => ({\n    type: 'UPDATE_PROVIT_DIR',\n    payload: { provitDir }\n})","import React, { Component } from 'react'\n\nimport TextField from '@material-ui/core/TextField'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = theme => ({\n    control: {\n      padding: theme.spacing.unit * 4,\n      marginTop: theme.spacing.unit * 8,\n    },\n})\n\nclass ConfigForm extends Component {\n\n    componentDidMount() {\n        this.props.fetchConfig()\n    }\n\n    handleChange = () => event => {\n        this.props.updateProvitDir(event.target.value)\n    }\n\n    renderSaveButton = (enabled) => {\n        if (this.props.changed) {\n            return (\n                <Button variant=\"contained\">\n                    Save changes\n                </Button>\n            )\n        }\n        else {\n            return (\n                <Button disabled variant=\"contained\">\n                    Save changes\n                </Button>\n            )            \n        }\n    }\n\n\n    render () {\n        const { classes } = this.props\n        return (\n            <div>\n                <Grid container spacing={24}>\n                    <Grid item xs={12}>\n                        <Paper className={classes.control}>\n                        <TextField\n                            id=\"provit-home-directory\"\n                            label=\"Provit Home Directory\"\n                            style={{ margin: 8 }}\n                            placeholder=\"Placeholder\"\n                            fullWidth\n                            value={this.props.provitDir}\n                            margin=\"normal\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n\n                            onChange={this.handleChange()}\n                        />\n                        { this.renderSaveButton(this.props.changed) }\n\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n}\n\n\nexport default withStyles(styles) (ConfigForm)","import { connect } from 'react-redux'\nimport * as api from '../api'\nimport * as actions from '../actions'\nimport ConfigForm from '../components/ConfigForm'\n\nconst mapStateToProps = (state) => ({\n    provitDir: state.config.provitDir,\n    changed: state.config.changed\n})\n\nconst mapDispatchToProps = {\n    fetchConfig: api.fetchConfig,\n    updateProvitDir: actions.updateProvitDir\n}\n\nconst ConfigView = connect(mapStateToProps, mapDispatchToProps) (ConfigForm)\n\nexport default ConfigView","import { fetchConfigBegin, fetchConfigSuccess, fetchConfigError } from '../actions'\n\nexport function fetchConfig () {\n    return function (dispatch) {\n        console.log(\"fetch config\")\n        dispatch(fetchConfigBegin())\n        return fetch('http://localhost:5555/config')\n            .then(res => res.json())\n            .then(json => {\n                console.log(json)\n                dispatch(fetchConfigSuccess(json.config))\n                return json.config\n            })\n        .catch( error => dispatch(fetchConfigError(error)))  \n    }\n} ","export const fetchDirectoriesBegin = () => ({\n    type: 'FETCH_DIRECTORIES_BEGIN'\n})\n\nexport const fetchDirectoriesSuccess = (directories)  => ({\n    type: 'FETCH_DIRECTORIES_SUCCESS',\n    payload: { directories }\n})\n\nexport const fetchDirectoriesError = (error) => ({\n    type: 'FETCH_DIRECTORIES_ERROR',\n    payload: { error }\n})\n\nexport const removeDirectoryBegin = () => ({\n    type: 'REMOVE_DIRECTORY_BEGIN'\n})\n\nexport const removeDirectorySuccess = (directories) => ({\n    type: 'REMOVE_DIRECTORIES_SUCCESS',\n    payload: { directories }\n})\n\nexport const removeDirectoryError = (error) => ({\n    type: 'REMOVE_DIRECTORY_ERROR',\n    payload: { error }\n})\n\nexport const addDirectoryBegin = () => ({\n    type: 'ADD_DIRECTORY_BEGIN'\n})\n\nexport const addDirectorySuccess = (directories) => ({\n    type: 'ADD_DIRECTORY_SUCCESS',\n    payload: { directories }\n})\n\nexport const addDirectoryError = (error) => ({\n    type: 'ADD_DIRECTORY_ERROR',\n    payload: { error}\n})","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport Chip from '@material-ui/core/Chip'\n\nconst styles = theme => ({\n    transparentChip: {\n        backgroundColor: 'rgba(0,0,0,0.0);',\n        cursor: 'pointer'\n    }\n})\n\nconst TransparentChip = (props) => (\n    <Chip   \n        label={ props.label }\n        avatar={ props.avatar }\n        className={ props.classes.transparentChip }\n    />\n)\nTransparentChip.propTypes = {\n    label: PropTypes.string.isRequired,\n    avatar: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles) (TransparentChip)","import React, { Component } from 'react'\n\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Avatar from '@material-ui/core/Avatar'\nimport { withStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport FolderIcon from '@material-ui/icons/Folder'\n\nimport TransparentChip from '../../common/components/TransparentChip'\n\nconst styles = (theme) => ({\n    directoryList: {\n      padding: theme.spacing.unit * 4,\n      marginTop: theme.spacing.unit * 8,\n    },\n    listItem: {\n        padding: theme.spacing.unit *2,\n        marginTop: theme.spacing.unit\n    },\n    directoryTitle: {\n        textAlign: 'left',\n        verticalAlign: 'middle' \n    },\n    alignRight: {\n        textAlign: 'right'\n    },\n    button: {\n        margin: theme.spacing.unit,\n    },\n    tp: {\n       \n    },\n    projectComment: {\n        marginLeft: theme.spacing.unit * 5,\n        marginTop: theme.spacing.unit * 0.5\n    }\n})\n\nclass DirectoryList extends Component {\n\n    removeClick (directory) {\n        this.props.removeDirectory(directory)\n    } \n\n    render () {\n        const { directories, classes } = this.props\n        console.log(directories)\n        return (\n            <Grid container className={ classes.directoryList }>\n                { directories.map( (item, i) => (\n                    <Grid item xs={12} key={i} >\n                        <Paper className={ classes.listItem }>\n                            <Grid container\n                                    className={ classes.directoryTitle } \n                            >\n                                <Grid item xs={11} className={ classes.textAlign} >\n                                    <div \n                                        className={ classes.tp } \n                                        onClick={ () => { this.props.history.push({ pathname: '/directory/', search: item.directory }) } }\n                                    >\n                                        <TransparentChip\n                                            \n                                            avatar={\n                                                <Avatar>\n                                                    <FolderIcon/>\n                                                </Avatar>\n                                                }                                                                                       \n\n                                            className={ classes.button }\n                                            \n                                            label={ item.directory }  \n                                        />\n                                    </div>\n                                    <div>\n                                        <Typography variant=\"caption\" className={ classes.projectComment }>\n                                            { item.comment }\n                                        </Typography>\n                                    </div>\n                                </Grid>\n                                <Grid item xs={1} className={ classes.alignRight }>\n                                    <IconButton aria-label=\"Delete\"  onClick={ () => this.removeClick(item) }>\n                                         <DeleteIcon size=\"small\"  />\n                                    </IconButton>\n                                </Grid>\n                            </Grid>\n                        </Paper>\n                    </Grid> \n                ) )}\n            </Grid>\n        )\n    }\n}\n\n\nexport default withStyles(styles) (DirectoryList)","/*\n*\n*  Directory display element for FilePicker Component\n*\n*/\n\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport FolderIcon from '@material-ui/icons/Folder'\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz'\n\nconst styles = theme => ({\n    leftAlign: {\n        textAlign: 'left',\n        width: '100%'\n    },\n    fullWidth: {\n        width: '100%'\n    },\n    icon: {\n        marginRight: theme.spacing.unit\n    }\n})\n\n\nclass DirectoryRow extends Component {\n\n    renderButton () {\n        const { currentFile, path, changeValue, name, classes, selectable } = this.props\n        if (currentFile === path) \n            return (\n                <Button \n                    color=\"primary\"\n                    size=\"small\"\n                    onClick={ () => { if (selectable) changeValue(path, false) } }\n                >\n                    <FolderIcon size=\"small\" className={ classes.icon } />\n                    { name }\n                </Button>\n            )\n        else\n            return (\n                <Button \n                    size=\"small\"\n                    onClick={ () => {  if (selectable) changeValue(path, false) } }\n                >\n                    <FolderIcon size=\"small\" className={ classes.icon }  />\n                    { name }\n                </Button>                \n            )\n    }\n\n    render ()  {\n        const { classes, path, fetchDir } = this.props\n        \n        return (\n            <div className={ classes.leftAlign } >\n\n                { this.renderButton() }\n\n                <Button \n                    size=\"small\"\n                    onClick={  () => { fetchDir(path) }  }\n                >\n                    <MoreHorizIcon size=\"small\" />\n                </Button>\n            </div>\n        )\n    }\n}\n\nDirectoryRow.propTypes = {\n    name: PropTypes.string.isRequired,\n    path: PropTypes.string.isRequired,\n    currentFile: PropTypes.string.isRequired,\n    fetchDir: PropTypes.func.isRequired,\n}\n\nexport default withStyles(styles) (DirectoryRow)\n\n","/*\n*\n*  File display element for FilePicker Component\n*\n*/\n\n\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport DescriptionIcon from '@material-ui/icons/Description'\n\nconst styles = theme => ({\n    leftAlign: {\n        textAlign: 'left',\n        width: '100%'\n    },\n    fullWidth: {\n        width: '100%'\n    },\n    icon: {\n        marginRight: theme.spacing.unit\n    }\n})\n\n\nclass FileRow extends Component {\n\n    renderButton () {\n        const { currentFile, path, changeValue, name, classes } = this.props\n        if (currentFile === path) \n            return (\n                <Button \n                    color=\"primary\"\n                    size=\"small\"\n                    onClick={ () => { changeValue(path, false) } }\n                >\n                    <DescriptionIcon size=\"small\" className={ classes.icon } />\n                    { name }\n                </Button>\n            )\n        else\n            return (\n                <Button \n                    size=\"small\"\n                    onClick={ () => { changeValue(path, false) } }\n                >\n                    <DescriptionIcon size=\"small\" className={ classes.icon }  />\n                    { name }\n                </Button>                \n            )\n    }\n\n    render ()  {\n        const { classes } = this.props\n        \n        return (\n            <div className={ classes.leftAlign } >\n                { this.renderButton() }\n            </div>\n        )\n    }\n}\n\nFileRow.propTypes = {\n    currentFile: PropTypes.string,\n    path: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    changeValue: PropTypes.func.isRequired\n}\n\nexport default withStyles(styles) (FileRow)\n\n","/*\n\nFilePicker Component\n\nOpens Dialog representing the contents of the workstations file system\nMove up and down the file system\nSelect a file, which will be stored in the components value state and updates the model\n\nTODO:\n* show only directories\n* allow to select directories\n\nProps:\n- directory: starting directory\n- model: name of forms model\n\n*/\n\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { actions } from 'react-redux-form'\nimport path from 'path'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport IconButton from '@material-ui/core/IconButton'\nimport FolderIcon from '@material-ui/icons/Folder'\nimport Typography from '@material-ui/core/Typography'\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\n\nimport DirectoryRow from './DirectoryRow'\nimport FileRow from './FileRow'\n\nconst styles = theme => ({\n    filebrowserDialog: {\n        padding: theme.spacing.unit*2,\n    },\n    dialogPaper: {\n        minHeight: '70vh',\n        maxHeight: '70vh',\n    },\n    helptext: {\n        color: '#999',\n        text: '0.8em'\n    }\n})\n\n\nclass FilePicker extends Component {\n\n    constructor (props) {\n        super(props)\n\n        let { withFiles } = props\n        if (withFiles)\n            withFiles = true\n        else\n            withFiles = false\n\n        this.state = {\n            showDialog: false,\n            currentDir: \"\",\n            withFiles: withFiles,\n            files: [],\n            dirs: [],\n            value: \"\"\n        }\n\n\n\n        this.changeValue = this.changeValue.bind(this)\n        this.fetchDir = this.fetchDir.bind(this)\n    }\n\n    componentDidMount () {\n        const { directory } = this.props\n        this.setState({\n            currentDir: directory\n        })\n        this.fetchDir(directory)\n    }\n\n    fetchDir (dir) {\n\n        fetch('http://localhost:5555/filebrowser',{\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              },            \n            mode: 'cors',\n            body: JSON.stringify({ directory: dir, withFiles: this.state.withFiles, withHidden: false })\n            })\n            .then(res => res.json())\n            .then(json => {\n                console.log(json)\n                this.setState({\n                    ...this.state,\n                    dirs: json.dirs,\n                    files: json.files,\n                    currentDir: dir\n                })\n                return json.prov\n            })\n            .catch(error => console.log(error))        \n    }\n\n    openDialog () {\n            this.setState({\n                showDialog: true\n            })\n    }\n\n    closeDialog () {\n        this.setState({\n            showDialog: false\n        })\n    }\n\n    changeValue (value, close) {\n        const { model, dispatch } = this.props\n        const showDialog = !close\n\n        this.setState({\n            value,\n            showDialog\n        })\n        dispatch(actions.change(model, value))\n    }\n\n    render () {\n\n        const { directory, classes, helptext } = this.props\n        const { showDialog, dirs, files, currentDir, value } = this.state\n        const pathSplit = currentDir.split(path.sep)\n        pathSplit.splice(-1, 1)\n        const parentDir = path.resolve( ...pathSplit)\n        const currentValueSplit = this.state.value.split(path.sep)\n        const currentValue = currentValueSplit.pop()\n\n        const selectableDirectories = !this.state.withFiles\n\n        return (\n            <div>\n                \n                <Dialog\n                    fullWidth={ true }\n                    maxWidth=\"sm\"\n                    open={ showDialog }\n                    scroll=\"paper\"\n                    className={ classes.filebrowserDialog }\n                    classes={ { paper: classes.dialogPaper } }\n                    onClose={ () => this.changeValue(\"\", true) }\n                >\n                    <DialogTitle>\n                        <div>\n                        <Typography variant=\"subheading\"> { currentDir }</Typography>\n                        </div>\n                    </DialogTitle>\n                    <DialogContent>\n                        <Button \n                            size=\"small\"\n                            onClick={ () => this.fetchDir(parentDir) }\n                        >\n                            <ArrowUpwardIcon size=\"small\" />\n                        </Button>\n\n                        { dirs.map( (dir, i) => \n                            <DirectoryRow \n                                key={'directory'+i} \n                                name={dir.dirname} \n                                path={dir.dirpath}\n                                selectable={ selectableDirectories }\n                                changeValue={ this.changeValue }\n                                fetchDir={ this.fetchDir }\n                                currentFile={ value }\n                            /> \n                        ) }\n                        { files.map( (file, i) => \n                            <FileRow \n                                key={'file'+i} \n                                name={file.filename} \n                                path={file.filepath}\n                                changeValue={ this.changeValue }\n                                currentFile={ value }\n                            /> \n                        ) }\n                    </DialogContent>\n                    <DialogActions>\n                        <Button \n                            color=\"primary\" \n                            variant=\"contained\" \n                            onClick={ () => this.closeDialog() }\n                        >\n                            Select\n                        </Button>\n                        <Button \n                            color=\"secondary\" \n                            variant=\"contained\" \n                            onClick={ () => this.changeValue(\"\", true) }\n                        >\n                            Close\n                        </Button>\n                    </DialogActions>                    \n                </Dialog>\n\n                <IconButton\n                    variant=\"contained\"\n                    onClick={ () => this.openDialog(directory) }\n                >\n                    <FolderIcon size=\"small\" />\n                </IconButton>            \n                    <Button  onClick={ () => this.openDialog(directory) } >{ currentValue || helptext  }</Button> \n  \n            </div>\n        )\n    }\n}\n\nFilePicker.propTypes = {\n    directory: PropTypes.string,\n    model: PropTypes.string,\n    dispatch: PropTypes.func\n}\n\nexport default withStyles(styles) (FilePicker)\n\n","import React, { Component } from 'react'\nimport { Control, Form, actions } from 'react-redux-form'\nimport { connect } from 'react-redux'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport Dialog from '@material-ui/core/Dialog'\nimport Fab from '@material-ui/core/Fab'\nimport AddIcon from '@material-ui/icons/Add'\nimport Button from '@material-ui/core/Button'\nimport DialogActions from '@material-ui/core/DialogActions'\n\nimport FilePicker from '../components/FilePicker'\n\nconst styles = (theme) => ({\n    formContainer: {\n        padding: theme.spacing.unit*2\n    },\n    formItem: {\n        padding: theme.spacing.unit*2\n    },\n    inputField: {\n        width: '100%'\n    }\n})\n\nclass AddProjectDirectoryForm extends Component {\n\n    constructor (props) {\n        super(props)\n        this.state = {\n            open: false\n        }\n    }\n\n    handleSubmit (directory) {\n        const  { handleSubmit } = this.props\n        console.log (directory)\n        handleSubmit(directory)\n        this.closeDialog()\n    }\n\n    toggleDialog () {\n        this.setState({\n            open: !this.state.open\n        })\n    }\n\n    closeDialog () {\n        const { dispatch } = this.props\n        dispatch(actions.reset(\"addProjectDirectory\"))\n        this.toggleDialog()\n    }\n\n    render () {\n        const { classes, dispatch } = this.props\n\n        return (\n            <div>\n                <Dialog open={ this.state.open } onClose={ () => this.closeDialog() }>\n                    <Form\n                        model=\"addProjectDirectory\"\n                        onSubmit={(dir) => this.handleSubmit(dir)}\n                    >\n                        <Grid container className={ classes.formContainer }>\n                            <Grid item xs={12} className={ classes.formItem }>\n\n                                <FilePicker \n                                    id=\"addProjectDirectory.directory\"\n                                    model=\"addProjectDirectory.directory\"  \n                                    helptext=\"Select directory\"\n                                    withFiles={ false }\n                                    directory={ '' } \n                                    dispatch={ dispatch } \n                                /> \n\n                            </Grid>\n\n                            <Grid item xs={12} className={ classes.formItem }>\n                                <Control  \n                                    className={ classes.inputField }\n                                    component={TextField} \n                                    model=\"addProjectDirectory.comment\" \n                                    id=\"addProjectDirectory.comment\" \n                                    label=\"Comment\" \n                                    multiline \n                                    rowsMax=\"4\" \n                                    variant=\"outlined\" \n                                />\n                            </Grid>\n                        </Grid>\n\n                        <DialogActions>\n                            <Button type=\"submit\" color=\"primary\" variant=\"contained\" >\n                                Add\n                            </Button>\n                        </DialogActions>   \n                    </Form>                   \n                </Dialog>\n                  \n                <Fab \n                    color=\"primary\" \n                    aria-label=\"Add\" \n                    className={classes.fab} \n                    onClick={ () => this.toggleDialog() }\n                >\n                    <AddIcon />\n                </Fab>           \n            </div>\n        )\n    }\n}\n\nconst projectForm = withStyles(styles) (AddProjectDirectoryForm)\n\nexport default connect( ({addProjectDirectory})  =>  ({addProjectDirectory}) ) (projectForm)\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport * as api from '../api'\n\nimport DirectoryList from '../components/DirectoryList'\nimport AddDirectoryProjectForm from '../../forms/container/AddProjectDirectoryForm'\n\nconst mapStateToProps = (state) => ({\n    directories: state.home.directories,\n    loading: state.home.loading,\n    error: state.home.error\n})\n\nconst mapDispatchToProps = {\n    fetchDirectories: api.fetchDirectories,\n    removeDirectory: api.removeDirectory,\n    addDirectory: api.addDirectory\n}\n\nclass HomeView extends Component {\n\n    componentDidMount () {\n        this.props.fetchDirectories()\n    }\n\n    render () {\n        return (\n            <div>\n                <DirectoryList \n                    directories={ this.props.directories } \n                    removeDirectory={ this.props.removeDirectory } \n                    history={ this.props.history } />\n                \n                <AddDirectoryProjectForm \n                    handleSubmit={ this.props.addDirectory }\n                />\n            </div>\n        )\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps) (HomeView)","import { \n    fetchDirectoriesBegin, fetchDirectoriesSuccess, fetchDirectoriesError,\n    removeDirectoryBegin, removeDirectorySuccess, removeDirectoryError,\n    addDirectoryBegin, addDirectorySuccess, addDirectoryError\n } from '../actions'\n\nexport function fetchDirectories () {\n    return function (dispatch) {\n        console.log(\"fetch directories\")\n        dispatch(fetchDirectoriesBegin())\n        return fetch('http://localhost:5555/directories')\n            .then(res => res.json())\n            .then(json => {\n                dispatch(fetchDirectoriesSuccess(json.directories))\n                return json.directories\n            })\n        .catch( error => dispatch(fetchDirectoriesError(error)))  \n    }\n} \n\nexport function removeDirectory (directory) {\n    return function (dispatch) {\n        console.log(\"remove directory \"+directory)\n        dispatch(removeDirectoryBegin())\n        return fetch('http://localhost:5555/directories/remove',{\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              },            \n            mode: 'cors',\n            body: JSON.stringify({ directory })\n            })\n            .then(res => res.json())\n            .then(json => {\n                dispatch(removeDirectorySuccess(json.directories))\n                return json.directories\n            })\n            .catch(error => dispatch(removeDirectoryError(error)))\n    }\n}\n\nexport function addDirectory (directory) {\n    return function (dispatch) {\n        console.log(\"add directory \"+directory)\n        dispatch(addDirectoryBegin())\n        return fetch('http://localhost:5555/directories',{\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              },            \n            mode: 'cors',\n            body: JSON.stringify({ directory })\n            })\n            .then(res => res.json())\n            .then(json => {\n                dispatch(addDirectorySuccess(json.directories))\n                return json.directories\n            })\n            .catch(error => dispatch(addDirectoryError(error)))\n    }\n}","export const fetchFileListBegin = () => ({\n    type: 'FETCH_FILE_LIST_BEGIN'\n})\n\nexport const fetchFileListSuccess = (fileList) => ({\n    type: 'FETCH_FILE_LIST_SUCCESS',\n    payload: { fileList }\n}) \n\nexport const fetchFileListError = (error) => ({\n    type: 'FETCH_FILE_LIST_ERROR',\n    payload: { error }\n})\n\nexport const changeCurrentDirectory = (directory) => ({\n    type: 'CHANGE_CURRENT_DIRECTORY',\n    payload: { directory }\n})","import React, { Component } from 'react'\n\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { withStyles } from '@material-ui/core/styles'\nimport deepOrange from '@material-ui/core/colors/deepOrange'\n\nconst styles = (theme) => ({\n    fileTable: {\n      padding: theme.spacing.unit * 4,\n      marginTop: theme.spacing.unit * 3,\n    },\n    fileTablePaper: {\n        padding: theme.spacing.unit*2\n    },\n    rowBackgroundNoProv: {\n        backgroundColor: deepOrange[50]\n    },\n    rowBackgroundProv: {\n        backgroundColor: null\n    },\n    heading: {\n        padding: theme.spacing.unit*3\n    }\n})\n\nclass FileTable extends Component {\n\n\n    linkToFile (item) {\n        this.props.history.push({ pathname: \"/file/\", search: item.filepath })\n    }\n\n    renderTableRow (item, i) {\n        const { classes } = this.props\n        let cl = classes.rowBackgroundProv\n        if (!item.prov) {\n            cl = this.props.classes.rowBackgroundNoProv\n        }\n\n        return (\n            <TableRow \n                hover\n                className={ cl } \n                key={ \"filetable\"+i } \n                onClick={ () => this.linkToFile(item) } \n            >\n                <TableCell>{item.filename}</TableCell>\n                <TableCell> { item.prov ? item.prov.last_activity : \"No provenance information available!\"} </TableCell>   \n                <TableCell> { item.prov ? item.prov.timestamp : \"\"} </TableCell>   \n            </TableRow>         \n        )\n    }\n\n    render () {\n        const { classes } = this.props\n        return (\n            <Grid item xs={12} className={ classes.fileTable }>\n                <Typography variant=\"h6\" className={ classes.heading }>\n                    {this.props.directory}\n                </Typography>\n                <Paper className={ classes.fileTablePaper }>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>File</TableCell>\n                                <TableCell>Last Provenance Activity</TableCell>\n                                <TableCell>Last Provenance Timestamp</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            { this.props.fileList.map( (item, i) => this.renderTableRow(item, i) ) }                            \n                        </TableBody>\n                    </Table>\n                </Paper>\n            </Grid>\n        )\n    }\n}\n\nexport default withStyles(styles) (FileTable)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport * as api from '../api'\nimport * as actions from '../actions'\nimport FileTable from '../components/FileTable'\n\nconst mapStateToProps = (state) => ({\n    fileList: state.directory.fileList,\n    currentDirectory: state.directory.currentDirectory\n}) \n\nconst mapDispatchToProps = {\n    fetchFileList: api.fetchFileList,\n    changeCurrentDirectory: actions.changeCurrentDirectory\n}\n\n\nclass DirectoryView extends Component {\n\n    componentDidMount () {\n        const directory = this.props.location.search.substr(1)\n        console.log(directory)\n        this.props.fetchFileList(directory)\n        this.props.changeCurrentDirectory(directory)\n    }\n\n    componentDidUpdate () {\n        // fetch file list if location search path is changed\n        const directory = this.props.location.search.substr(1)\n        if (directory !== this.props.currentDirectory) {\n            this.props.fetchFileList(directory)\n            this.props.changeCurrentDirectory(directory)        \n        }\n    }\n\n    render () {\n        return (\n            <div>\n                <FileTable \n                    fileList={this.props.fileList} \n                    history={this.props.history} \n                    directory={this.props.currentDirectory} \n                />\n            </div>\n        )\n    }\n} \n\nexport default connect(mapStateToProps, mapDispatchToProps) (DirectoryView)","import { fetchFileListBegin, fetchFileListSuccess, fetchFileListError } from '../actions'\n\nexport function fetchFileList (directory) {\n    return function (dispatch) {\n        console.log(\"fetch filelist\")\n        dispatch(fetchFileListBegin())\n        return fetch('http://localhost:5555/directory',{\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              },            \n            mode: 'cors',\n            body: JSON.stringify({ directory })\n            })\n            .then(res => res.json())\n            .then(json => {\n                console.log(json)\n                dispatch(fetchFileListSuccess(json.files))\n                return json.files\n            })\n            .catch(error => dispatch(fetchFileListError(error)))\n    }\n} ","export const fetchAgentsBegin = () => ({\n    type: 'FETCH_AGENTS_BEGIN'\n})\n\nexport const fetchAgentsSuccess = (agents) => ({\n    type: 'FETCH_AGENTS_SUCCESS',\n    payload: { agents }\n})\n\nexport const fetchAgentsError = (error) => ({\n    type: 'FETCH_AGENTS_ERROR',\n    payload: { error }\n})","import { fetchAgentsBegin, fetchAgentsSuccess, fetchAgentsError } from '../actions'\n\nexport function fetchAgents () {\n    return function (dispatch) {\n        console.log(\"fetch agents\")\n        dispatch(fetchAgentsBegin())\n        return fetch('http://localhost:5555/agents')\n            .then(res => res.json())\n            .then(json => {\n                console.log(json)\n                dispatch(fetchAgentsSuccess(json.agents))\n                return json.agents\n            })\n        .catch( error => dispatch(fetchAgentsError(error)))  \n    }\n} ","import React, { Component } from 'react'\n\nimport Grid from '@material-ui/core/Grid'\nimport { withStyles } from '@material-ui/core/styles'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport Chip from '@material-ui/core/Chip';\nimport Typography from '@material-ui/core/Typography'\nimport FaceIcon from '@material-ui/icons/Face'\nimport Avatar from '@material-ui/core/Avatar'\n\nconst styles = theme => ({\n    content: {\n      padding: theme.spacing.unit * 4,\n      marginTop: theme.spacing.unit * 8,\n    },\n    paperLayout: {\n        padding: theme.spacing.unit * 2\n    },\n    detailsBox: {\n        textAlign: 'left',\n    },\n    detailsBoxHeader: {\n        textAlign: 'left',\n        marginRight: theme.spacing.unit*2\n    },\n    agentHeader: {\n        padding:theme.spacing.unit\n    },\n    nameHeader: {\n        lineHeight:2.3\n    }\n})\n\nclass PersonAgentList extends Component {\n\n    renderPerson(person, i) {\n        const { classes } = this.props\n\n        return (\n            <div key={ \"person\"+i }>\n                <ExpansionPanel className={ classes.agentHeader }>\n                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                    <Grid container>\n                        <Grid item className={ classes.detailsBoxHeader }>\n                        <Chip\n                            avatar={\n                            <Avatar>\n                                <FaceIcon />\n                            </Avatar>\n                            }\n                            label={ person.slug }\n                        />\n                        </Grid>\n                        <Grid item className={ classes.detailsBoxHeader }>\n                        <Typography className={ classes.nameHeader }>{ person.name[0] }</Typography>\n                        </Grid>\n                    </Grid>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <Grid container>\n\n                            <Grid item xs={1} className={ classes.detailsBox }>\n                                <Typography variant=\"caption\" gutterBottom>URI</Typography>\n                            </Grid>\n                            <Grid item xs={11} className={ classes.detailsBox }>\n                                <Typography gutterBottom>{ person.uri }</Typography>\n                            </Grid>\n\n                            <Grid item xs={1} className={ classes.detailsBox }>\n                                <Typography variant=\"caption\" gutterBottom>Name</Typography>\n                            </Grid>\n                            <Grid item xs={11} className={ classes.detailsBox }>\n                                <Typography component={'span'} gutterBottom>\n                                    { person.name.map( (item, i) => <div key={ 'pname'+i } >{item}<br /></div> ) }\n                                </Typography>\n                            </Grid>\n\n                            <Grid item xs={1} className={ classes.detailsBox }>\n                                <Typography variant=\"caption\" gutterBottom>Institution</Typography>\n                            </Grid>\n                            <Grid item xs={11} className={ classes.detailsBox }>\n                                <Typography  component={'span'} gutterBottom>\n                                    { person.institution.map( (item, i) => <div key={ 'pinstitution'+i } >{item}<br /></div> ) }\n                                </Typography>\n                            </Grid>\n\n                            <Grid item xs={1} className={ classes.detailsBox }>\n                                <Typography variant=\"caption\" gutterBottom>Email</Typography>\n                            </Grid>\n                            <Grid item xs={11} className={ classes.detailsBox }>\n                                <Typography  component={'span'} gutterBottom>\n                                    { person.email.map( (item, i) => <div key={ 'pemail'+i } >{item}<br /></div> ) }\n                                </Typography>\n                            </Grid>\n\n                            <Grid item xs={1} className={ classes.detailsBox }>\n                                <Typography variant=\"caption\" gutterBottom>Homepage</Typography>\n                            </Grid>\n                            <Grid item xs={11} className={ classes.detailsBox }>\n                                <Typography  component={'span'} gutterBottom>\n                                    { person.homepage.map( (item, i) => <div key={ 'phomepage'+i } ><a href={item} target=\"_new\"  rel=\"noopener noreferrer\">{item}</a><br /></div> ) }\n                                </Typography>\n                            </Grid>\n\n                        </Grid>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n            </div>\n        )\n    }\n\n    render () {\n        const { persons, classes } = this.props\n\n        return (\n            <Grid container>\n                <Grid item xs={12} className={ classes.content }>\n                    Persons\n                    <div className={ classes.paperLayout }>\n                        { persons.map( (map, i) => this.renderPerson(map, i) ) }\n                    </div>\n                </Grid>\n            </Grid>\n        )\n    }\n}\n\nexport default withStyles(styles) (PersonAgentList)","import React, { Component } from 'react'\n\nimport Grid from '@material-ui/core/Grid'\nimport { withStyles } from '@material-ui/core/styles'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport Typography from '@material-ui/core/Typography'\nimport LaptopIcon from '@material-ui/icons/Laptop'\nimport Avatar from '@material-ui/core/Avatar'\nimport Chip from '@material-ui/core/Chip';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n      },\n    content: {\n      padding: theme.spacing.unit * 4,\n      marginTop: theme.spacing.unit * 4,\n    },\n    paperLayout: {\n        padding: theme.spacing.unit * 2\n    },\n    detailsBox: {\n        textAlign: 'left',\n    },\n    detailsBoxHeader: {\n        textAlign: 'left',\n        marginRight: theme.spacing.unit*2\n    },\n    agentHeader: {\n        padding:theme.spacing.unit\n    },\n    nameHeader: {\n        lineHeight: 2.3\n    }\n})\n\nclass SoftwareAgentList extends Component {\n\n    renderSoftware(sw, i) {\n        const { classes } = this.props\n        return (\n            <div key={ \"sw\"+i }>\n                <ExpansionPanel>\n                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                    <Grid container>\n                        <Grid item className={ classes.detailsBoxHeader }>\n                        <Chip\n                            avatar={\n                            <Avatar>\n                                <LaptopIcon />\n                            </Avatar>\n                            }\n                            label={ sw.slug }\n                        />\n                        </Grid>\n                        <Grid item className={ classes.detailsBoxHeader }>\n                        <Typography className={ classes.nameHeader }>{ sw.name[0] } - { sw.version[0] }</Typography>\n                        </Grid>\n                    </Grid>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <Grid container>\n                            <Grid item xs={1} className={ classes.detailsBox }>\n                                <Typography variant=\"caption\" gutterBottom>URI</Typography>\n                            </Grid>\n                            <Grid item xs={11} className={ classes.detailsBox }>\n                                <Typography gutterBottom>{ sw.uri }</Typography>\n                            </Grid>\n\n                            <Grid item xs={1} className={ classes.detailsBox }>\n                                <Typography variant=\"caption\" gutterBottom>Name</Typography>\n                            </Grid>\n                            <Grid item xs={11} className={ classes.detailsBox }>\n                                <Typography  component={'span'} gutterBottom>\n                                    { sw.name.map( (item, i) => <div  key={ 'swname'+i } >{item}<br /></div> ) }\n                                </Typography>\n                            </Grid>\n\n                            <Grid item xs={1} className={ classes.detailsBox }>\n                                <Typography variant=\"caption\" gutterBottom>Version</Typography>\n                            </Grid>\n                            <Grid item xs={11} className={ classes.detailsBox }>\n                                <Typography  component={'span'} gutterBottom>\n                                    { sw.version.map( (item, i) => <div  key={ 'swversion'+i } >{item}<br /></div> ) }\n                                </Typography>\n                            </Grid>\n\n                            <Grid item xs={1} className={ classes.detailsBox }>\n                                <Typography variant=\"caption\" gutterBottom>Website</Typography>\n                            </Grid>\n                            <Grid item xs={11} className={ classes.detailsBox }>\n                                <Typography  component={'span'} gutterBottom>\n                                    { sw.homepage.map( (item, i) => <div key={ 'swhomepage'+i } ><a href={item} target=\"_new\"  rel=\"noopener noreferrer\">{item}</a><br /></div> ) }\n                                </Typography>\n                            </Grid>\n\n                        </Grid>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n            </div>\n        )\n    }\n\n    render () {\n        const { software, classes } = this.props\n\n        return (\n            <Grid container className={ classes.root }>\n                <Grid item xs={12} className={ classes.content }>\n                    Software\n                    <div className={ classes.paperLayout }>\n                        { software.map( (item, i) => this.renderSoftware(item, i) ) }\n                    </div>\n                </Grid>\n            </Grid>\n        )\n    }\n}\n\nexport default withStyles(styles) (SoftwareAgentList)","import React, { Component } from 'react'\n\nimport Grid from '@material-ui/core/Grid'\nimport { withStyles } from '@material-ui/core/styles'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport Typography from '@material-ui/core/Typography'\nimport BusinessIcon from '@material-ui/icons/Business'\nimport Avatar from '@material-ui/core/Avatar'\nimport Chip from '@material-ui/core/Chip';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n      },\n    content: {\n      padding: theme.spacing.unit * 4,\n      marginTop: theme.spacing.unit * 4,\n    },\n    paperLayout: {\n        padding: theme.spacing.unit * 2\n    },\n    detailsBox: {\n        textAlign: 'left',\n    },\n    detailsBoxHeader: {\n        textAlign: 'left',\n        marginRight: theme.spacing.unit*2\n    },\n    agentHeader: {\n        padding:theme.spacing.unit\n    },\n    nameHeader: {\n        lineHeight: 2.3\n    }\n})\n\nclass SoftwareAgentList extends Component {\n\n    renderSoftware(org, i) {\n        const { classes } = this.props\n        return (\n            <div key={ \"org\"+i }>\n                <ExpansionPanel>\n                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                    <Grid container>\n                        <Grid item className={ classes.detailsBoxHeader }>\n                        <Chip\n                            avatar={\n                            <Avatar>\n                                <BusinessIcon />\n                            </Avatar>\n                            }\n                            label={ org.slug }\n                        />\n                        </Grid>\n                        <Grid item className={ classes.detailsBoxHeader }>\n                        <Typography className={ classes.nameHeader } >{ org.name[0] }</Typography>\n                        </Grid>\n                    </Grid>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <Grid container>\n                            <Grid item xs={1} className={ classes.detailsBox }>\n                                <Typography variant=\"caption\" gutterBottom>URI</Typography>\n                            </Grid>\n                            <Grid item xs={11} className={ classes.detailsBox }>\n                                <Typography gutterBottom>{ org.uri }</Typography>\n                            </Grid>\n\n                            <Grid item xs={1} className={ classes.detailsBox }>\n                                <Typography variant=\"caption\" gutterBottom>Name</Typography>\n                            </Grid>\n                            <Grid item xs={11} className={ classes.detailsBox }>\n                                <Typography component={'span'} gutterBottom>{ org.name.map( (item, i) => <div key={'orgname'+i }>{item}<br /></div> ) }</Typography>\n                            </Grid>\n\n                            <Grid item xs={1} className={ classes.detailsBox }>\n                                <Typography variant=\"caption\" gutterBottom>Website</Typography>\n                            </Grid>\n                            <Grid item xs={11} className={ classes.detailsBox }>\n                                <Typography gutterBottom><a href={ org.homepage } target=\"_blank\"  rel=\"noopener noreferrer\">{ org.homepage }</a></Typography>\n                            </Grid>\n\n                        </Grid>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n            </div>\n        )\n    }\n\n    render () {\n        const { organizations, classes } = this.props\n\n        return (\n            <Grid container className={ classes.root }>\n                <Grid item xs={12} className={ classes.content }>\n                    Organizations\n                    <div className={ classes.paperLayout }>\n                        { organizations.map( (item, i) => this.renderSoftware(item, i) ) }\n                    </div>\n                </Grid>\n            </Grid>\n        )\n    }\n}\n\nexport default withStyles(styles) (SoftwareAgentList)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport * as api from '../api'\n\nimport PersonAgentList from '../components/PersonAgentList'\nimport SoftwareAgentList from '../components/SoftwareAgentList'\nimport OrganizationAgentList from '../components/OrganizationAgentList'\n\nconst mapStateToProps = (state) => ({\n    persons: state.agents.persons,\n    software: state.agents.software,\n    organizations: state.agents.organizations\n})\n\nconst mapDispatchToProps = {\n    fetchAgents: api.fetchAgents\n}\n\nclass AgentListView extends Component {\n    componentDidMount () {\n        this.props.fetchAgents()\n    }\n\n    render () {\n        return (\n            <div>\n                <PersonAgentList persons={ this.props.persons } />\n                <SoftwareAgentList software={ this.props.software } />\n                <OrganizationAgentList organizations={ this.props.organizations } />\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (AgentListView)","export const fetchProvBegin = () => ({\n    type: 'FETCH_PROV_BEGIN'\n})\n\nexport const fetchProvSuccess = (data) => ({\n    type: 'FETCH_PROV_SUCCESS',\n    payload: { data }\n})\n\nexport const fetchProvError = (error) => ({\n    type: 'FETCH_PROV_ERROR',\n    payload: { error }\n})\n\nexport const addProvBegin = () => ({\n    type: 'ADD_PROV_BEGIN'\n})\n\nexport const addProvSuccess = (data) => ({\n    type: 'ADD_PROV_SUCCESS',\n    payload: { data }\n})\n\nexport const addProvError = (error) => ({\n    type: 'ADD_PROV_ERROR',\n    payload: { error }\n})\n\nexport const removeProvBegin = () => ({\n    type: 'REMOVE_PROV_BEGIN',\n})\n\nexport const removeProvSuccess = (data) => ({\n    type: 'REMOVE_PROV_SUCCESS',\n    payload: { data }\n})\n\nexport const removeProvError = (error) => ({\n    type: 'REMOVE_PROV_ERROR',\n    payload: { error }\n})\n\nexport const changeCurrentFile = (currentFile) => ({\n    type: 'CHANGE_CURRENT_FILE',\n    payload: { currentFile }\n})\n\nexport const changeProvEvent = (currentProvEvent) => ({\n    type: 'CHANGE_PROV_EVENT',\n    payload: { currentProvEvent }\n})\n\nexport const networkUpdated = () => ({\n    type: 'NETWORK_UPDATED'\n})\n\nexport const setCurrentAgent = (currentAgent) => ({\n    type: 'SET_CURRENT_AGENT',\n    payload: { currentAgent }\n})\n\nexport const hideAgentDialog = (agentDialog) => ({\n    type: 'HIDE_AGENT_DIALOG'\n})\n\nexport const toggleAddProvForm = () => ({\n    type: 'TOGGLE_ADD_PROV_FORM'\n})\n\nexport const resetFileState = () => ({\n    type: 'RESET_FILE_STATE'\n})","import React, { Component } from 'react'\nimport { Network, DataSet } from 'vis'\nimport { withStyles } from '@material-ui/core/styles'\nimport cyan from '@material-ui/core/colors/cyan'\nimport red from '@material-ui/core/colors/red'\nimport Paper from '@material-ui/core/Paper'\nimport blueGrey from '@material-ui/core/colors/blueGrey'\n// throws error if css is missing\nimport 'vis/dist/vis-timeline-graph2d.min.css'\n\nconst styles = theme => ({\n    networkContainer: {\n      width: '100%',\n      height: 560\n    },\n    eventNetworkContainer: {\n        marginTop: theme.spacing.unit * 8,\n    },\n    eventTimelineContainer: {\n        width: '100%',\n        height: 280\n    },\n    networkPaper: {\n        marginRight: 30\n    }\n})\n\nconst lightCyan = cyan['100'];\nconst darkCyan = cyan['600'];\nconst highlight = red['600'];\nconst sourceBlueGrey = blueGrey['300'];\n\nconst getFilename = (location) => {\n    return location.split(\"/\").pop()\n}\n\nconst generateLabel = (event) => {\n    const { location, activity } = event\n    const fileName = getFilename(location)\n    const activitySplit = activity.split(\"/\")\n    const activitySlug = activitySplit[activitySplit.length - 2]\n    return \"<b>\" + activitySlug + \"</b>\\n\" + fileName \n}\n\nconst options = {\n    layout: {\n        improvedLayout: true,\n        hierarchical: {\n            sortMethod: \"directed\",\n            levelSeparation: 120,\n\n        }\n    },\n    edges: {\n      smooth: true,\n      arrows: {to : true },\n      color: {\n          color: darkCyan\n      }\n    },\n    nodes: {    \n        shape: 'box',\n        shadow: true,\n        font: {\n            multi: true\n        }\n    },\n    groups: {\n        source: {\n            font: {\n                color: 'white',\n            },\n          color: {\n            background: sourceBlueGrey,\n            border: darkCyan,\n            highlight: {\n                background: highlight,\n                border: '#EF5350'\n            }\n          }\n        },\n        file: {\n            font: {\n                color: 'white',\n            },\n            color: {\n              background: darkCyan,\n              border: lightCyan,\n              highlight: {\n                background: highlight,\n                border: '#EF5350'\n                }\n            }\n        },\n        primarySource: {\n            color: {\n                background: '#ffffff',\n            }\n        }\n    }\n}\n   \nclass EventNetwork extends Component {\n\n    flatProvData (data) {\n        this.provDict[data.uri] = data\n        for (const source of data.sources) {\n            this.flatProvData(source)\n        }\n    }\n\n    iterProvData (root) {\n        console.log(root.location)\n        const currentNodes = this.nodes.getIds()\n        const source = root.uri\n        const filename = this.props.prov.location\n        let group = 'source'\n        if (root.location === filename)\n            group = 'file'\n\n        if (root.status === 'active')\n        {\n\n            currentNodes.push(source)\n            this.nodes.update({\n                id: source,\n                label: generateLabel(root),\n                group: group,\n                start: root.ended_at,\n                content: generateLabel(root)\n            })\n        \n            if (root.primary_sources) {\n                for (const ps of root.primary_sources) {\n                    this.nodes.update({\n                        id: ps.uri,\n                        label: \"Primary source\\n<b>\"+ps.slug+\"</b>\",\n                        group: 'primarySource'\n                    })\n                    this.edges.update({\n                        from: source,\n                        to: ps.uri,\n                        arrows: 'from'\n                    })                \n                }\n            }\n        \n        \n            if (root.sources) {\n                for (const source_data of root.sources) {\n                    const target = source_data.uri\n            \n                    const filename = this.props.prov.location\n                    let group = 'source'\n                    if (source_data.location === filename)\n                        group = 'file'\n\n                    currentNodes.push(target)\n                    this.nodes.update({\n                        id: target,\n                        label: generateLabel(source_data),\n                        group: group,\n                        start: source_data.ended_at,\n                        content: generateLabel(source_data)\n                    })\n        \n                    this.edges.update({\n                        from: source,\n                        to: target,\n                        arrows: 'from'\n                    })\n                }\n                for (const source_data of root.sources) {\n                    this.iterProvData(source_data)\n                }\n            }\n        }     \n    }\n\n    buildEdgeList (prov) {\n        this.iterProvData(prov)\n    }\n\n\n    constructor (props) {\n        super(props)\n        this.nodes = new DataSet()\n        this.edges = new DataSet()\n    }\n\n\n    isProvEvent (item) {\n        let add = false\n        this.nodes.forEach((node) => {\n            if (node.id === item && node.group !== \"primarySource\") \n                add = true\n        })\n        return add\n    }\n\n    componentDidMount () {\n\n        this.network = new Network(this.refs.eventNetwork, { nodes: this.nodes, edges: this.edges}, options)\n        this.network.on(\"click\", (event) => {\n            const item = this.network.getNodeAt(event.pointer.DOM)\n            if (this.isProvEvent(item)) \n                this.props.changeProvEvent(item)\n            else\n                this.props.changeProvEvent(\"\")\n        })\n    }\n\n    componentDidUpdate () {\n        const { prov, currentProvEvent, updateNetwork, rebuildNetwork, networkUpdated } = this.props\n\n        if (rebuildNetwork) {\n            // console.log(\"rebuilding network\")\n            // this.network.destroy()\n            // this.nodes = new DataSet()\n            // this.edges = new DataSet()\n            // this.network = new Network(this.refs.eventNetwork, { nodes: this.nodes, edges: this.edges}, options)\n            const currentNodes = this.nodes.getIds()\n            for (const nodeId of currentNodes)\n                this.nodes.remove(nodeId)     \n            const currentEdges = this.edges.getIds()     \n            for (const edgeId of currentEdges)  \n                this.edges.remove(edgeId)\n\n            this.buildEdgeList(prov)\n\n        }\n\n        if (! (Object.keys(prov).length === 0 && prov.constructor === Object) && updateNetwork) {\n            console.log(\"add update\")\n            this.buildEdgeList(prov)\n            networkUpdated()\n        }\n\n        if (currentProvEvent !== \"\" && currentProvEvent)\n            this.network.selectNodes( [currentProvEvent] )\n        else\n            this.network.selectNodes( [] )            \n\n    }\n\n    render () {\n        const { classes } = this.props\n        return (\n            <div>\n                <Paper className={ classes.networkPaper }>\n                    <div className={ classes.networkContainer } ref=\"eventNetwork\"></div>  \n                </Paper>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles) (EventNetwork)","import React, { Component } from 'react'\nimport { Timeline, DataSet } from 'vis'\nimport { withStyles } from '@material-ui/core/styles'\n// throws error if css is missing\nimport 'vis/dist/vis-timeline-graph2d.min.css'\nimport './EventTimeline.css'\n\nconst styles = theme => ({\n    eventTimelineContainer: {\n        width: '100%',\n        height: 280\n    }\n})\n\nconst getFilename = (location) => {\n    return location.split(\"/\").pop()\n}\n\nconst generateLabel = (event) => {\n    const { activity } = event\n    const activitySplit = activity.split(\"/\")\n    const activitySlug = activitySplit[activitySplit.length - 2]\n    return activitySlug\n}\n\n\nclass EventTimeline extends Component {\n\n    constructor (props) {\n        super(props)\n        this.nodes = new DataSet()\n    }\n\n\n    iterProvData (root) {\n\n        const currentNodes = this.nodes.getIds()\n\n        const source = root.uri\n        \n\n        currentNodes.push(source)\n        this.nodes.update({\n            id: source,\n            label: generateLabel(root),\n            group: getFilename(root.location),\n            start: root.ended_at,\n            content: generateLabel(root)\n        })\n    \n        \n        if (root.sources) {\n            for (const source_data of root.sources) {\n                const target = source_data.uri\n    \n\n    \n                    currentNodes.push(target)\n                    this.nodes.update({\n                        id: target,\n                        label: generateLabel(source_data),\n                        group: getFilename(source_data.location),\n                        start: source_data.ended_at,\n                        content: generateLabel(source_data),\n                    })\n\n\n            }\n            for (const source_data of root.sources) {\n                this.iterProvData(source_data)\n            }\n        }     \n    }\n\n\n    componentDidMount () {\n\n        const options = {\n            verticalScroll: true,\n            maxHeight: 250\n        }\n\n        this.timeline = new Timeline(this.refs.eventTimeline, this.nodes, options)\n        this.timeline.on(\"click\", (event) => {\n            const item = event.item           \n            this.props.changeProvEvent(item)\n            this.timeline.on(\"click\", (event) => {\n                const item = event.item            \n                this.props.changeProvEvent(item)\n            })               \n        })          \n    }\n\n    componentDidUpdate () {\n        const { prov, currentProvEvent } = this.props\n        console.log(\"pudate timeline start\")\n\n\n        const currentIds = this.nodes.getIds()\n        for (const nodeId of currentIds)\n            this.nodes.remove(nodeId)\n            \n\n\n        if (! (Object.keys(prov).length === 0 && prov.constructor === Object) ) { \n            console.log(\"update timeline\")\n\n\n            \n            console.log(this.nodes)\n            this.iterProvData(prov)\n\n            if (this.nodes.length === 0) {\n                //if this.\n                //this.timeline.destroy()\n            }\n            else {\n                const allGroups = this.nodes.map( (node,i ) => node.group )\n                const group = []\n                const done = []\n                for (const i in allGroups) {\n                    if (done.indexOf(allGroups[i]) < 0) {\n                        group.push({\n                            id: allGroups[i], \n                            content: allGroups[i] \n                        })\n                        done.push(allGroups[i])\n                    }\n                }\n                this.timeline.setGroups(group)\n                this.timeline.fit()       \n            }\n        }\n        if (currentProvEvent)\n            this.timeline.setSelection(currentProvEvent)  \n        else\n            this.timeline.setSelection(\"\")\n    }\n\n\n    render () {\n        const { classes } = this.props\n        return (\n            <div>\n                <div className={ classes.eventTimelineContainer } ref=\"eventTimeline\"></div>  \n            </div>\n        )\n    }\n\n}\n\nexport default withStyles(styles) (EventTimeline)","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport LaptopIcon from '@material-ui/icons/Laptop'\nimport FaceIcon from '@material-ui/icons/Face'\nimport BusinessIcon from '@material-ui/icons/Business'\nimport Avatar from '@material-ui/core/Avatar'\nimport Chip from '@material-ui/core/Chip'\n\nclass AgentIcon extends Component {\n    render () {\n        const { type, slug } = this.props\n        const handleClick = () => {}\n        switch (type) {\n            case 'Person':\n                return (\n                    <div>\n                    <Chip\n                        onClick={ () => { handleClick() }}\n                        avatar={\n                        <Avatar>\n                            <FaceIcon />\n                        </Avatar>\n                        }\n                        label={ slug }\n                    />\n                    </div>\n                )  \n            case 'Organization':\n                return (\n                    <div>\n                    <Chip\n                        onClick={ () => { handleClick() }}                    \n                        avatar={\n                        <Avatar>\n                            <BusinessIcon />\n                        </Avatar>\n                        }\n                        label={ slug }\n                    />\n                    </div>\n                )    \n            case 'Software':\n                return (\n                    <div>\n                    <Chip\n                        onClick={ () => { handleClick() }}                    \n                        avatar={\n                        <Avatar>\n                            <LaptopIcon />\n                        </Avatar>\n                        }\n                        label={ slug }\n                    />\n                    </div>\n                )                                   \n            default:\n                return \"\"\n        }\n    }\n}\n\nAgentIcon.propTypes = {\n    type: PropTypes.string.isRequired,\n    slug: PropTypes.string.isRequired\n}\n\nexport default AgentIcon","import React from 'react'\n\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\n\nconst PersonAgentProfile = (props) => {\n    const { person }  = props\n\n    return (\n        <Grid container>\n\n            <Grid item xs={2}>\n                <Typography variant=\"caption\" gutterBottom>URI</Typography>\n            </Grid>\n            <Grid item xs={10}>\n                <Typography gutterBottom>{ person.uri }</Typography>\n            </Grid>\n\n            <Grid item xs={2}>\n                <Typography variant=\"caption\" gutterBottom>Name</Typography>\n            </Grid>\n            <Grid item xs={10}>\n                <Typography component={'span'} gutterBottom>\n                    { person.name.map( (item, i) => <div key={ 'pname'+i } >{item}<br /></div> ) }\n                </Typography>\n            </Grid>\n \n            <Grid item xs={2}>\n                <Typography variant=\"caption\" gutterBottom>Institution</Typography>\n            </Grid>\n            <Grid item xs={10}>\n                <Typography  component={'span'} gutterBottom>\n                    { person.institution.map( (item, i) => <div key={ 'pinstitution'+i } >{item}<br /></div> ) }\n                </Typography>\n            </Grid>\n\n            <Grid item  xs={2}>\n                <Typography variant=\"caption\" gutterBottom>Email</Typography>\n            </Grid>\n            <Grid item xs={10}>\n                <Typography  component={'span'} gutterBottom>\n                    { person.email.map( (item, i) => <div key={ 'pemail'+i } >{item}<br /></div> ) }\n                </Typography>\n            </Grid>\n\n            <Grid item xs={2}>\n                <Typography variant=\"caption\" gutterBottom>Homepage</Typography>\n            </Grid>\n            <Grid item xs={10}>\n                <Typography  component={'span'} gutterBottom>\n                    { person.homepage.map( (item, i) => <div key={ 'phomepage'+i } ><a href={item} target=\"_new\"  rel=\"noopener noreferrer\">{item}</a><br /></div> ) }\n                </Typography>\n            </Grid>\n\n        </Grid>\n    )\n}\n\nexport default PersonAgentProfile\n","import React from 'react'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\nconst styles = theme => ({\n\n})\n\nconst OrgAgentProfile = (props) => {\n    const { org }  = props\n\n    return (\n        <Grid container>\n            <Grid item xs={2} >\n                <Typography variant=\"caption\" gutterBottom>URI</Typography>\n            </Grid>\n            <Grid item xs={10} >\n                <Typography gutterBottom>{ org.uri }</Typography>\n            </Grid>\n\n            <Grid item xs={2} >\n                <Typography variant=\"caption\" gutterBottom>Name</Typography>\n            </Grid>\n            <Grid item xs={10} >\n                <Typography component={'span'} gutterBottom>{ org.name.map( (item, i) => <div key={'orgname'+i }>{item}<br /></div> ) }</Typography>\n            </Grid>\n\n            <Grid item xs={2} >\n                <Typography variant=\"caption\" gutterBottom>Website</Typography>\n            </Grid>\n            <Grid item xs={10} >\n                <Typography gutterBottom><a href={ org.homepage } target=\"_blank\"  rel=\"noopener noreferrer\">{ org.homepage }</a></Typography>\n            </Grid>\n\n        </Grid>\n    )\n}\n\nexport default withStyles(styles) (OrgAgentProfile)\n","import React from 'react'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\nconst styles = theme => ({\n\n})\n\nconst PersonAgentProfile = (props) => {\n    const { sw }  = props\n\n    return (\n        <Grid container>\n            <Grid container>\n                <Grid item xs={2} >\n                    <Typography variant=\"caption\" gutterBottom>URI</Typography>\n                </Grid>\n                <Grid item xs={10} >\n                    <Typography gutterBottom>{ sw.uri }</Typography>\n                </Grid>\n\n                <Grid item xs={2} >\n                    <Typography variant=\"caption\" gutterBottom>Name</Typography>\n                </Grid>\n                <Grid item xs={10} >\n                    <Typography  component={'span'} gutterBottom>\n                        { sw.name.map( (item, i) => <div  key={ 'swname'+i } >{item}<br /></div> ) }\n                    </Typography>\n                </Grid>\n\n                <Grid item xs={2} >\n                    <Typography variant=\"caption\" gutterBottom>Version</Typography>\n                </Grid>\n                <Grid item xs={10} >\n                    <Typography  component={'span'} gutterBottom>\n                        { sw.version.map( (item, i) => <div  key={ 'swversion'+i } >{item}<br /></div> ) }\n                    </Typography>\n                </Grid>\n\n                <Grid item xs={2} >\n                    <Typography variant=\"caption\" gutterBottom>Website</Typography>\n                </Grid>\n                <Grid item xs={10} >\n                    <Typography  component={'span'} gutterBottom>\n                        { sw.homepage.map( (item, i) => <div key={ 'swhomepage'+i } ><a href={item} target=\"_new\"  rel=\"noopener noreferrer\">{item}</a><br /></div> ) }\n                    </Typography>\n                </Grid>\n\n            </Grid>\n\n        </Grid>\n    )\n}\n\nexport default withStyles(styles) (PersonAgentProfile)\n","import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nimport AgentIcon from '../../common/components/AgentIcon'\nimport PersonAgentProfile from '../../common/components/PersonAgentProfile'\nimport OrgAgentProfile from '../../common/components/OrgAgentProfile'\nimport SoftwareAgentProfile from '../../common/components/SoftwareAgentProfile'\n\nclass AgentDialog extends Component {\n\n    handleClose () {\n        this.props.hideAgentDialog()\n    }\n\n    renderPersonAgentDialog () {\n        const { data } = this.props\n        return (\n            <div>\n                <PersonAgentProfile person={ data } />\n            </div>                  \n        )\n    }\n\n    renderSoftwareAgentDialog () {\n        const { data } = this.props\n        return (\n            <div>\n                <SoftwareAgentProfile sw={ data } />\n            </div>                  \n        )\n    }    \n\n    renderOrgAgentDialog () {\n        const { data } = this.props\n        return (\n            <div>\n                <OrgAgentProfile org={ data } />\n            </div>\n        )\n    }    \n\n    renderAgentDialog () {\n        const { data } =  this.props\n        switch (data.type) {\n            case 'Person':\n                return this.renderPersonAgentDialog()\n            case 'Organization':\n                return this.renderOrgAgentDialog()\n            case 'Software':\n                return this.renderSoftwareAgentDialog()                                \n            default:\n                return \"\"\n        }\n    }\n\n    render () {\n        const { open, data } = this.props\n\n        return (\n            <div>\n                <Dialog\n                    onClose={ () => this.handleClose() } \n                    open={open}\n                >\n                    <DialogTitle>\n                        <AgentIcon \n                            type={data.type}\n                            slug={data.slug}\n                        />\n                    </DialogTitle>\n                    <DialogContent>\n                        <DialogContentText component=\"span\">\n                            { this.renderAgentDialog() }\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={ () => { this.handleClose() } } color=\"primary\" autoFocus>\n                            Close\n                        </Button>\n                    </DialogActions>                    \n                </Dialog>\n            </div>\n        )\n    }\n}\n\nexport default AgentDialog","import React, { Component } from 'react'\nimport { withStyles } from '@material-ui/core'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\n\nimport AgentIcon from '../../common/components/AgentIcon'\nimport AgentDialog from './AgentDialog'\n\nconst styles = theme => ({\n    alignLeft: {\n        textAlign: 'left',\n        padding: theme.spacing.unit *2,\n    },\n    agentIcon: {\n        paddingRight: theme.spacing.unit\n    }\n})\n\nclass EventDetails extends Component {\n\n    constructor (props) {\n        super(props)\n        this.eventData = {}\n    }\n\n    getEventData (root) {\n        const { currentProvEvent } = this.props\n        if (root.uri === currentProvEvent)\n            this.eventData = root\n        else {\n            if (root.sources)\n                for (const source of root.sources)\n                    this.getEventData(source)\n        }\n    }\n\n    handleAgentIconClick = (agentSlug) => {\n        this.props.setCurrentAgent(agentSlug)\n    }\n\n    renderAgent (slug) {\n        const { agents, classes } = this.props\n        if (slug in agents) {\n            return (\n                <div className={ classes.agentIcon } key={ 'agenticon'+slug } onClick={ () => { this.handleAgentIconClick(slug) } } > \n                    <AgentIcon \n                        type={agents[slug].type}\n                        slug={slug}\n                    />\n                </div>\n            )\n        }\n        else {\n            return (\n                <div key={\"displayagent-\"+slug}>{slug}</div>\n            )\n        }\n    }\n\n    render () {\n\n        const { classes, prov, currentProvEvent, currentAgent, agents } = this.props\n        const agentData = agents[currentAgent]\n        let agentSlugs = []\n\n        if (currentProvEvent) {\n            this.getEventData(prov)      \n            agentSlugs = this.eventData.agent.map( (item) => item.split('/')[item.split('/').length -1] )\n            \n        }\n        else {\n            this.eventData = {}\n        }\n\n        return (\n            <div>\n                <Paper className={ classes.alignLeft }>\n\n                    <Typography variant=\"caption\" gutterBottom>\n                        <b>Event URI</b>\n                    </Typography>                    \n                    <Typography  variant=\"caption\" gutterBottom>\n                        {this.eventData.uri}\n                    </Typography>\n\n                    <Typography variant=\"caption\" gutterBottom>\n                        <b>Timestamp</b>\n                    </Typography>  \n                    <Typography  variant=\"caption\" gutterBottom>\n                        {this.eventData.ended_at}\n                    </Typography>                    \n\n                    <Typography variant=\"caption\" gutterBottom>\n                        <b>Description</b>\n                    </Typography>  \n                    <Typography  variant=\"caption\" gutterBottom>\n                        {this.eventData.activity_desc}\n                    </Typography>    \n\n                    <Typography variant=\"caption\" gutterBottom className=\"break\">\n                        <b>File location</b>\n                    </Typography>  \n                    <Typography  variant=\"caption\" gutterBottom>\n                        {this.eventData.location}\n                    </Typography>    \n\n                    <Typography variant=\"caption\" gutterBottom>\n                        <b>Agents</b>\n                    </Typography>  \n                    <div>\n                        <div className=\"agentIconList\"> \n                        {agentSlugs.map( (item) => this.renderAgent(item) ) }\n                        </div>\n                    </div>      \n\n                    <div className=\"break\" ></div>\n                    { currentAgent ? \n                        <AgentDialog \n                            open={this.props.showAgentDialog}\n                            hideAgentDialog={this.props.hideAgentDialog}\n                            data={agentData}\n                        /> : \"\"\n                    }\n                </Paper>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles) (EventDetails)","import React, { Component } from 'react'\nimport { actions } from 'react-redux-form'\nimport PropTypes from 'prop-types'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport LaptopIcon from '@material-ui/icons/Laptop'\nimport FaceIcon from '@material-ui/icons/Face'\nimport BusinessIcon from '@material-ui/icons/Business'\nimport Avatar from '@material-ui/core/Avatar'\n\nimport TransparentChip from '../../common/components/TransparentChip'\n\nconst styles = (theme) => ({\n    textField: {\n        width: '100%'\n      },\n    menuItem: {\n        width: '100%',\n        padding: theme.spacing.unit\n    }\n})\n\n\n\nclass AgentDropdown extends Component {\n\n    constructor (props) {\n        super(props)\n\n        this.state = {\n            modelValue: \"\"\n        }\n\n    }\n\n    handleChange (event) {\n        const { model, dispatch } = this.props\n\n        const value = event.target.value\n        this.setState({\n            modelValue: value\n        })\n        dispatch(actions.change(model, value))\n    }\n\n    getAgentsByType (agentType) {\n        const { agents } = this.props\n        const slugs = []\n        for (const slug of Object.keys(agents)) {\n            if (agents[slug].type === agentType)\n                slugs.push(slug)\n        }\n        return slugs\n    }\n\n    render () {\n        const { classes, agents } = this.props\n\n        return (\n            <TextField\n                select\n                margin=\"normal\"\n                value={this.state.modelValue}\n                className={classes.textField}\n                SelectProps={{\n                    MenuProps: { className: classes.menuItem }\n                }}\n                onChange={ (e) => this.handleChange(e) }\n            >\n                { agents.persons.map( (agent,i) => (\n                    <MenuItem key={ agent.slug } value={ agent.slug } className={ classes.menuItem } >\n                        <TransparentChip\n                            avatar={\n                            <Avatar>\n                                <FaceIcon />\n                            </Avatar>\n                            }\n                            label={ agent.slug }\n                        />\n                    </MenuItem>\n                ) ) }\n                { agents.software.map( (sw,i) => (\n                    <MenuItem key={ sw.slug } value={ sw.slug } className={ classes.menuItem } >\n                        <TransparentChip\n                            avatar={\n                            <Avatar>\n                                <LaptopIcon />\n                            </Avatar>\n                            }\n                            label={ sw.slug }\n                        />\n                    </MenuItem>\n                ) ) }\n                { agents.organizations.map( (sw,i) => (\n                    <MenuItem key={ sw.slug } value={ sw.slug } className={ classes.menuItem } >\n                        <TransparentChip\n                            avatar={\n                            <Avatar>\n                                <BusinessIcon />\n                            </Avatar>\n                            }\n                            label={ sw.slug }\n                        />\n                    </MenuItem>\n                ) ) }                \n                \n            </TextField>\n        )\n    }\n}\nAgentDropdown.propTypes = {\n    agents: PropTypes.object.isRequired,\n    model: PropTypes.string.isRequired,\n    dispatch: PropTypes.func.isRequired\n}\n\nexport default withStyles(styles) (AgentDropdown)","import React, { Component } from 'react'\nimport path from 'path'\nimport { Control, Form, actions } from 'react-redux-form'\nimport { connect } from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport TextField from '@material-ui/core/TextField'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport AddIcon from '@material-ui/icons/Add'\n\nimport FilePicker from '../components/FilePicker'\nimport AgentDropdown from '../components/AgentDropdown'\n\nconst styles = theme => ({\n    formDialog: {\n        padding: theme.spacing.unit*2\n    },\n    formGrid: {\n        padding: theme.spacing.unit*2\n    },\n    formItem: {\n        padding: theme.spacing.unit\n    },\n    inputField: {\n        width: '100%'\n    },\n    agentColumn: {\n        width: '66%'\n    },\n    buttonColumn: {\n        width: '33%'\n    }\n})\n\nclass AddProvForm extends Component {\n\n    handleSubmit (prov) {\n        const { handleSubmit, filepath, dispatch } = this.props\n        console.log(prov)\n        handleSubmit(filepath, prov)\n        dispatch(actions.reset(\"addProvEvent\"))\n    }\n\n    handleClose () {\n        const { toggle, dispatch } = this.props\n        dispatch(actions.reset(\"addProvEvent\"))\n        toggle()\n    }\n\n    render() {\n        const { open, classes, dispatch, addProvEvent, filepath, agents } = this.props\n        const initialAgent = \"\"\n        const initialSource = \"\"\n\n        const date = new Date()\n        const timestamp = date.toISOString()\n\n        return (\n            <Dialog open={open} scroll=\"paper\" onClose={ () => this.handleClose() } >\n                <Form\n                    model=\"addProvEvent\"\n                    onSubmit={(prov) => this.handleSubmit(prov)}\n                >\n                    <DialogContent>\n                        <Grid container className={ classes.formGrid }>\n                            <Grid item xs={12} className={ classes.formItem }>\n                                <Control \n                                    className={ classes.inputField }\n                                    component={TextField} \n                                    model=\"addProvEvent.activitySlug\" \n                                    id=\"addProvEvent.activitySlug\" \n                                    label=\"Activity slug\" \n                                />\n                            </Grid>\n\n                            <Grid item xs={12} className={ classes.formItem }>\n                                <Control  \n                                    className={ classes.inputField }\n                                    component={TextField} \n                                    model=\"addProvEvent.comment\" \n                                    id=\"addProvEvent.comment\" \n                                    label=\"Comment\" \n                                    multiline \n                                    rowsMax=\"4\" \n                                    variant=\"outlined\" \n                                />\n                            </Grid>\n\n                            <Grid item xs={12} className={ classes.formItem }>\n                                <Control  \n                                    component={TextField} \n                                    type=\"datetime-local\"\n                                    model=\"addProvEvent.timestamp\" \n                                    id=\"addProvEvent.timestamp\" \n                                    label=\"Timestamp\"\n                                    defaultValue={timestamp.substring(0, timestamp.length-2)}\n                                />\n                            </Grid>\n\n\n                            <table>\n                                <tbody>\n                                <tr>\n                                    <td >\n                                        <Button \n                                            color=\"primary\" \n                                            aria-label=\"Add\" \n                                            size=\"small\"\n                                            onClick={() => dispatch(actions.push('addProvEvent.agents', initialAgent))}\n                                        >\n                                            <AddIcon />\n                                            Agent\n                                        </Button>       \n                                    </td>\n                                    <td className={ classes.inputField}>\n                \n                                        { addProvEvent.agents.map( (agent, i) => \n                                            <Grid container key={'provagent'+i}>\n                                                <Grid item xs={12} className={ classes.formItem }>\n                                                    <AgentDropdown\n                                                        agents={ agents }\n                                                        model={`addProvEvent.agents[${i}]`}\n                                                        dispatch={ dispatch }\n                                                    />                                                \n                                                </Grid>                               \n                                            </Grid>\n                                        )}\n                                    </td>                             \n                                </tr>\n\n                                <tr>\n                                    <td>\n                                        <Button \n                                            color=\"primary\" \n                                            aria-label=\"Add\" \n                                            size=\"small\"\n                                            onClick={() => dispatch(actions.push('addProvEvent.sources', initialSource))}\n                                        >\n                                            <AddIcon />\n                                            Source\n                                        </Button>       \n                                    </td>\n                                    <td className={ classes.agentColumn}>\n                \n                                        { addProvEvent.sources.map( (source, i) => \n                                            <Grid container key={'provsource'+i}>\n                                                <Grid item xs={12} className={ classes.formItem }>\n        \n                                                    <FilePicker \n                                                        withFiles\n                                                        helptext=\"Select file\"\n                                                        model={ `addProvEvent.sources[${i}]` }  \n                                                        directory={ path.dirname(filepath) } \n                                                        dispatch={ dispatch } \n                                                    /> \n                                                </Grid>                               \n                                            </Grid>\n                                        )}\n                                    </td>                             \n                                </tr>\n    \n                                <tr>\n                                    <td>\n                                        <Button \n                                            color=\"primary\" \n                                            aria-label=\"Add\" \n                                            size=\"small\"\n                                            onClick={() => dispatch(actions.push('addProvEvent.primarySources', initialSource))}\n                                        >\n                                            <AddIcon />\n                                            Primary Source\n                                        </Button>       \n                                    </td>\n                                    <td className={ classes.agentColumn}>\n                \n                                        { addProvEvent.primarySources.map( (source, i) => \n                                            <Grid container key={'provsource'+i}>\n                                                <Grid item xs={12} className={ classes.formItem }>\n                                                    <AgentDropdown\n                                                        agents={ agents }\n                                                        model={ `addProvEvent.primarySources[${i}]` }\n                                                        dispatch={ dispatch }\n                                                    />\n                                                </Grid>                               \n                                            </Grid>\n                                        )}\n                                    </td>                             \n                                </tr>\n                                </tbody>\n                            </table>                                \n\n                        </Grid>\n\n                    </DialogContent>\n                    <DialogActions  className={ classes.formDialog }>\n                        <Button type=\"submit\" color=\"primary\" variant=\"contained\" >\n                            Add Provenance Information\n                        </Button>\n                    </DialogActions>\n                    </Form>\n\n            </Dialog>\n        )\n    }\n}\n\nconst ProvForm = withStyles(styles) ( AddProvForm)\n\nexport default connect( ({addProvEvent})  =>  ({addProvEvent}) ) (ProvForm)","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport Button from '@material-ui/core/Button'\nimport Chip from '@material-ui/core/Chip'\nimport Avatar from '@material-ui/core/Avatar'\nimport RemoveIcon from '@material-ui/icons/Remove'\n\n\nconst styles = (theme) => ({\n    removeProv: {\n        marginLeft: theme.spacing.unit*2\n    }\n})\n\nclass DeleteEventChip extends Component {\n    state = {\n        open: false\n    }\n\n    handleClickOpen () {\n        this.setState({ open: true })\n    }\n\n    handleClose () {\n        this.setState({ open: false })\n    }\n\n    handleDelete () {\n        const { removeProv, currentFile } = this.props\n        removeProv(currentFile)\n        this.handleClose()\n    }\n\n    render () {\n\n        const { classes } = this.props\n\n        return (\n            <span>\n                <Chip \n                    size=\"small\"\n                    className={ classes.removeProv }\n                    onClick={ () => this.handleClickOpen() }\n                    color=\"secondary\"\n                    avatar={\n                    <Avatar>\n                        <RemoveIcon />\n                    </Avatar>\n                    }\n                    label=\"Delete Event\"\n                />\n                <Dialog\n                    open={ this.state.open }\n                    onClose={ () => this.handleClose() }\n                >\n                    <DialogContent>\n                        Do you really want to delete the last provenance event?\n                    </DialogContent>\n                    <DialogActions>\n                        <Button \n                            color=\"primary\" \n                            variant=\"contained\"\n                            onClick={ () => this.handleDelete() }\n                        >\n                            Delete\n                        </Button>\n                        <Button \n                            color=\"secondary\" \n                            variant=\"contained\" \n                            onClick={ () => this.handleClose() }\n                        >\n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>                \n            </span>\n        )\n    }\n}\n\nDeleteEventChip.propTypes = {\n    removeProv: PropTypes.func.isRequired,\n    currentFile: PropTypes.string.isRequired\n}\n\nexport default withStyles(styles) (DeleteEventChip)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../actions'\nimport * as api from '../api'\nimport * as agentApi from '../../agents/api'\n\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Chip from '@material-ui/core/Chip'\nimport { withStyles } from '@material-ui/core/styles'\nimport Avatar from '@material-ui/core/Avatar'\nimport AddIcon from '@material-ui/icons/Add'\n\nimport EventNetwork from '../components/EventNetwork'\nimport EventTimeline from '../components/EventTimeline'\nimport EventDetails from '../components/EventDetails'\nimport AddProvForm from '../../forms/container/AddProvForm'\nimport DeleteEventChip from '../components/DeleteEventChip'\n\nconst mapStateToProps = (state) => ({\n    hasProv: state.file.hasProv,\n    prov: state.file.prov,\n    currentFile: state.file.currentFile,\n    agents: state.file.agents,\n    allAgents: state.agents,\n    currentProvEvent: state.file.currentProvEvent,\n    updateNetwork: state.file.updateNetwork,\n    rebuildNetwork: state.file.rebuildNetwork,\n    currentAgent: state.file.currentAgent,\n    showAgentDialog: state.file.showAgentDialog,\n    showAddProvForm: state.file.showAddProvForm\n})\n\nconst mapDispatchToProps = {\n    changeCurrentFile: actions.changeCurrentFile,\n    fetchProv: api.fetchProv,\n    addProv: api.addProv,\n    removeProv: api.removeProv,\n    changeProvEvent: actions.changeProvEvent,\n    networkUpdated: actions.networkUpdated,\n    setCurrentAgent: actions.setCurrentAgent,\n    hideAgentDialog: actions.hideAgentDialog,\n    toggleAddProvForm: actions.toggleAddProvForm,\n    fetchAgents: agentApi.fetchAgents,\n    resetFileState: actions.resetFileState\n}\n\nconst styles = theme => ({\n    fileViewContainer: {\n        marginTop: 30\n    },\n    breadcrumbs: {\n        marginBottom: theme.spacing.unit*2,\n        textAlign: 'left'\n    },\n    directory: {\n        paddingRight: theme.spacing.unit*2\n    },\n    filename: {\n        lineHeight:2,\n        vertialAlign: 'middle'\n    },\n    addProv: {\n        marginLeft: 20,\n    },\n    provButtons: {\n        marginBottom: theme.spacing.unit,\n        textAlign: 'right'\n    },    \n})\n\nconst splitFilepath = (filepath) => {\n    const split = filepath.split('/')\n    const slug = split[split.length-1]\n    const dir = filepath.replace(slug, '')\n    return [dir, slug]\n}\n\nclass FileView extends Component {\n\n    componentDidMount() {\n        const filepath = this.props.location.search.substr(1)\n        if (filepath !== this.props.currentFile) {\n            this.props.fetchProv(filepath)\n            this.props.changeCurrentFile(filepath)\n        }\n        console.log(this.props)\n\n        // if no allAgents are not loaded fetch them from the api\n        if (this.props.allAgents.persons.length === 0)\n            this.props.fetchAgents()\n    }\n    \n    componentDidUpdate() {\n        const filepath = this.props.location.search.substr(1)\n        if (filepath !== this.props.currentFile) {\n            this.props.changeCurrentFile(filepath)\n        }\n    }\n\n    componentWillUnmount() {\n        this.props.resetFileState()\n    }\n\n    render() {\n        const { classes, currentFile, showAddProvForm, toggleAddProvForm, allAgents, addProv } = this.props\n\n        let filepath\n        if (currentFile) {        \n            filepath = splitFilepath(currentFile)      \n        }\n\n        return (\n            <div className={ classes.fileViewContainer }  >\n\n                <AddProvForm \n                    open={ showAddProvForm} \n                    handleSubmit={ addProv }\n                    toggle={ toggleAddProvForm } \n                    agents={ allAgents }\n                    filepath={ currentFile }\n                />\n\n                <Grid container>\n                    <Grid container className={ classes.breadcrumbs }>\n                        <Grid item xs={8}>\n                            { currentFile ?\n                            <Grid container>\n                                <Grid item className={ classes.directory }>\n                                    <Chip \n                                        onClick={ () => { this.props.history.push({\n                                            pathname: \"/directory/\", \n                                            search: filepath[0] \n                                        }) } }\n                                        label={ filepath[0] }  />\n                                </Grid>\n                                <Grid item >\n                                    <Typography variant=\"subtitle1\" gutterBottom className={ classes.filename }>\n                                        { filepath[1] }\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                            : \"\"  }\n                        </Grid>\n\n                        <Grid item xs={4} className={ classes.provButtons }>                  \n                            <Chip \n                                size=\"small\"\n                                className={ classes.addProv }\n                                onClick={ () => { this.props.toggleAddProvForm() } }\n                                color=\"primary\"\n                                avatar={\n                                <Avatar>\n                                    <AddIcon />\n                                </Avatar>\n                                }\n                                label=\"Add Event\"\n                            />\n                            <DeleteEventChip \n                                currentFile={ currentFile } \n                                removeProv={ this.props.removeProv }\n                            />\n\n                        </Grid>\n                    </Grid>\n\n                    { true ?\n                    <Grid container>\n                        <Grid item xs={12}>\n                                <EventTimeline \n                                    prov={this.props.prov ? this.props.prov : {} } \n                                    changeProvEvent={this.props.changeProvEvent} \n                                    currentProvEvent={this.props.currentProvEvent} \n                                    rebuildNetwork={this.props.rebuildNetwork}\n                                />\n                        </Grid>\n                        <Grid item xs={8}>\n                            \n                                <EventNetwork \n                                    prov={this.props.prov ? this.props.prov : {} } \n                                    changeProvEvent={this.props.changeProvEvent} \n                                    currentProvEvent={this.props.currentProvEvent} \n                                    updateNetwork={this.props.updateNetwork}\n                                    rebuildNetwork={this.props.rebuildNetwork}\n                                    networkUpdated={this.props.networkUpdated}\n                                />\n                        </Grid>\n                        <Grid item xs={4}>\n                            { this.props.currentProvEvent ? \n                                <EventDetails\n                                    prov={this.props.prov ? this.props.prov : {} } \n                                    agents={this.props.agents}\n                                    currentProvEvent={this.props.currentProvEvent}\n                                    currentAgent={this.props.currentAgent}\n                                    rebuildNetwork={this.props.rebuildNetwork}\n                                    showAgentDialog={this.props.showAgentDialog}\n                                    hideAgentDialog={this.props.hideAgentDialog}\n                                    setCurrentAgent={this.props.setCurrentAgent}\n                                />\n                            : \"\" }\n                        </Grid>\n                    </Grid>\n                    : \"\" }\n                </Grid>\n            </div>\n        )\n    }\n}\n\nconst fileView = withStyles(styles) (FileView)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(fileView)","import { \n    fetchProvBegin, fetchProvSuccess, fetchProvError,\n    addProvBegin, addProvSuccess, addProvError,\n    removeProvBegin, removeProvSuccess, removeProvError\n} from '../actions'\n\nexport function fetchProv (filepath) {\n    return function (dispatch) {\n        console.log(\"fetch prov information\")\n        dispatch(fetchProvBegin())\n        return fetch('http://localhost:5555/file',{\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              },            \n            mode: 'cors',\n            body: JSON.stringify({ filepath })\n            })\n            .then(res => res.json())\n            .then(json => {\n                console.log(json)\n                dispatch(fetchProvSuccess(json))\n                return json.prov\n            })\n            .catch(error => dispatch(fetchProvError(error)))\n    }\n} \n\nexport function addProv (filepath, prov) {\n    return function (dispatch) {\n        console.log(\"add prov information\")\n        dispatch(addProvBegin())\n        return fetch('http://localhost:5555/file/add',{\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              },            \n            mode: 'cors',\n            body: JSON.stringify({ filepath, prov })\n            })\n            .then(res => res.json())\n            .then(json => {\n                console.log(json)\n                dispatch(addProvSuccess(json))\n                return json.prov\n            })\n            .catch(error => dispatch(addProvError(error)))\n    }\n} \n\nexport function removeProv (filepath) {\n    return function (dispatch) {\n        console.log(\"remove prov information\")\n        dispatch(removeProvBegin())\n        return fetch('http://localhost:5555/file/remove',{\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              },            \n            mode: 'cors',\n            body: JSON.stringify({ filepath })\n            })\n            .then(res => res.json())\n            .then(json => {\n                console.log(json)\n                dispatch(removeProvSuccess(json))\n                return json.prov\n            })\n            .catch(error => dispatch(removeProvError(error)))\n    }\n} ","import React, { Component } from 'react'\nimport { withRouter } from 'react-router'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\n\nconst styles = (theme) => ({\n    title: {\n        marginRight: theme.spacing.unit * 2,\n    }\n})\n\nclass Menu extends Component {\n\n\n    render () {\n        return (\n            <AppBar>\n                <Toolbar>\n                    <Typography color=\"inherit\" component=\"h3\" variant=\"display1\" className={ this.props.classes.title }>\n                        provit\n                    </Typography>\n\n                    <Button color=\"inherit\" onClick={ () => { this.props.history.push(\"/\") } }>\n                    Files\n                    </Button>\n                    <Button color=\"inherit\" onClick={ () => { this.props.history.push(\"/agents/\") } }>\n                    Agents\n                    </Button>\n                    <Button color=\"inherit\" onClick={ () => { this.props.history.push(\"/config/\") } }>\n                    Config\n                    </Button>\n                </Toolbar>\n            </AppBar>        \n        )\n    }\n}\n\nconst menu = withStyles(styles) (Menu)\n\nexport default withRouter(menu)","import React, { Component } from 'react'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './App.css'\n\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom'\n\nimport Typography from '@material-ui/core/Typography'\n\n\nimport ConfigView from './config/container/ConfigView'\nimport HomeView from './home/container/HomeView'\nimport DirectoryView from './directory/container/DirectoryView'\nimport AgentListView from './agents/container/AgentListView'\nimport FileView from './file/container/FileView'\n\nimport Menu from './Menu'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport blueGrey from '@material-ui/core/colors/blueGrey'\nimport grey from '@material-ui/core/colors/grey'\n\nconst theme = createMuiTheme({\n    palette: {\n      primary: blueGrey,\n      secondary: grey\n    },\n  })\n  \n\nclass App extends Component {\n\n\n  render() {\n    return (\n      <Provider store={store}>\n        <CssBaseline />\n        <MuiThemeProvider theme={theme}>\n          <div className=\"App\">\n            <header className=\"App-header\">\n              <Typography component=\"h2\" variant=\"display1\">provit</Typography>\n            </header>\n\n            <Router>\n              <div>\n\n                <Menu />\n\n                <Switch>\n                  <Route exact path=\"/\" component={ HomeView } />\n                  <Route path=\"/config\" component={ ConfigView } />\n                  <Route path=\"/directory\" component={ DirectoryView } />\n                  <Route path=\"/agents\" component={ AgentListView } />\n                  <Route path=\"/file\" component={ FileView } />\n                </Switch>\n              </div>\n            </Router>\n          </div>\n\n        </MuiThemeProvider>\n      </Provider>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}